{"identifier":{"url":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer\/reserveCapacity(_:)","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"mutating","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"reserveCapacity","kind":"identifier"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"minimumCapacity","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}]}]},{"parameters":[{"name":"minimumCapacity","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The minimum number of bytes this buffer must be able to store."}]}]}],"kind":"parameters"},{"content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method will ensure that the buffer has space for at least as many bytes as requested."},{"text":" ","type":"text"},{"text":"This includes any bytes already stored, and completely disregards the reader\/writer indices.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"If the buffer already has space to store the requested number of bytes, this method will be"},{"type":"text","text":" "},{"type":"text","text":"a no-op."}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/sotosignerv4\/bytebuffer\/reservecapacity(_:)"]}],"hierarchy":{"paths":[["doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4","doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer"]]},"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"abstract":[{"text":"Reserves enough space to store the specified number of bytes.","type":"text"}],"metadata":{"roleHeading":"Instance Method","externalID":"s:7NIOCore10ByteBufferV15reserveCapacityyySiF","modules":[{"name":"SotoSignerV4"}],"role":"symbol","symbolKind":"method","title":"reserveCapacity(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"reserveCapacity"},{"text":"(","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":")","kind":"text"}]},"references":{"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBuffer/reserveCapacity(_:)":{"title":"reserveCapacity(_:)","kind":"symbol","url":"\/documentation\/sotosignerv4\/bytebuffer\/reservecapacity(_:)","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"reserveCapacity"},{"kind":"text","text":"("},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"text":"Reserves enough space to store the specified number of bytes.","type":"text"}],"identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer\/reserveCapacity(_:)"},"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBuffer":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ByteBuffer","kind":"identifier"}],"url":"\/documentation\/sotosignerv4\/bytebuffer","abstract":[{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or"},{"type":"text","text":" "},{"text":"more bytes (octets).","type":"text"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer","title":"ByteBuffer","navigatorTitle":[{"text":"ByteBuffer","kind":"identifier"}],"role":"symbol"},"doc://codes.soto.soto-core/documentation/SotoSignerV4":{"url":"\/documentation\/sotosignerv4","identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4","type":"topic","title":"SotoSignerV4","kind":"symbol","abstract":[{"text":"Sign HTTP requests before sending them to AWS either by generating a signed URL or a set of signed headers.","type":"text"}],"role":"collection"}}}