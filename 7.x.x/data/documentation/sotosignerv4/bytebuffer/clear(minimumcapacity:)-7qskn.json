{"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use an `Int` as the argument"}]}],"hierarchy":{"paths":[["doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4","doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer"]]},"sections":[],"kind":"symbol","abstract":[{"type":"text","text":"Set both reader index and writer index to "},{"code":"0","type":"codeVoice"},{"type":"text","text":". This will reset the state of this "},{"type":"codeVoice","code":"ByteBuffer"},{"text":" to the state","type":"text"},{"type":"text","text":" "},{"type":"text","text":"of a freshly allocated one, if possible without allocations. This is the cheapest way to recycle a "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" "},{"text":"for a new use-case.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/sotosignerv4\/bytebuffer\/clear(minimumcapacity:)-7qskn"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer\/clear(minimumCapacity:)-7qskn"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"mutating","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"clear","kind":"identifier"},{"kind":"text","text":"("},{"text":"minimumCapacity","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt32","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt32V"},{"kind":"text","text":")"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"content":[{"inlineContent":[{"text":"The minimum capacity that will be (re)allocated for this buffer","type":"text"}],"type":"paragraph"}],"name":"minimumCapacity"}],"kind":"parameters"},{"kind":"content","content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"style":"note","name":"Note","type":"aside","content":[{"inlineContent":[{"text":"This method will allocate if the underlying storage is referenced by another ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":". Even if an"},{"type":"text","text":" "},{"text":"allocation is necessary this will be cheaper as the copy of the storage is elided.","type":"text"}],"type":"paragraph"}]}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"symbolKind":"method","role":"symbol","title":"clear(minimumCapacity:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"clear","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"minimumCapacity"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UInt32","preciseIdentifier":"s:s6UInt32V"},{"text":")","kind":"text"}],"modules":[{"name":"SotoSignerV4"}],"platforms":[],"roleHeading":"Instance Method","externalID":"s:7NIOCore10ByteBufferV5clear15minimumCapacityys6UInt32V_tF"},"references":{"doc://codes.soto.soto-core/documentation/SotoSignerV4":{"url":"\/documentation\/sotosignerv4","identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4","type":"topic","title":"SotoSignerV4","kind":"symbol","abstract":[{"text":"Sign HTTP requests before sending them to AWS either by generating a signed URL or a set of signed headers.","type":"text"}],"role":"collection"},"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBuffer/clear(minimumCapacity:)-7qskn":{"deprecated":true,"title":"clear(minimumCapacity:)","url":"\/documentation\/sotosignerv4\/bytebuffer\/clear(minimumcapacity:)-7qskn","kind":"symbol","abstract":[{"type":"text","text":"Set both reader index and writer index to "},{"code":"0","type":"codeVoice"},{"text":". This will reset the state of this ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":" to the state"},{"text":" ","type":"text"},{"text":"of a freshly allocated one, if possible without allocations. This is the cheapest way to recycle a ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" "},{"type":"text","text":"for a new use-case."}],"type":"topic","identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer\/clear(minimumCapacity:)-7qskn","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"clear","kind":"identifier"},{"kind":"text","text":"("},{"text":"minimumCapacity","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s6UInt32V","text":"UInt32","kind":"typeIdentifier"},{"kind":"text","text":")"}],"role":"symbol"},"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBuffer":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ByteBuffer","kind":"identifier"}],"url":"\/documentation\/sotosignerv4\/bytebuffer","abstract":[{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or"},{"type":"text","text":" "},{"text":"more bytes (octets).","type":"text"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer","title":"ByteBuffer","navigatorTitle":[{"text":"ByteBuffer","kind":"identifier"}],"role":"symbol"}}}