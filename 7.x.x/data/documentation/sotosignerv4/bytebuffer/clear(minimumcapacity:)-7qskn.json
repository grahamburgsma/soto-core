{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/sotosignerv4\/bytebuffer\/clear(minimumcapacity:)-7qskn"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer\/clear(minimumCapacity:)-7qskn"},"hierarchy":{"paths":[["doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4","doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer"]]},"sections":[],"abstract":[{"text":"Set both reader index and writer index to ","type":"text"},{"type":"codeVoice","code":"0"},{"type":"text","text":". This will reset the state of this "},{"code":"ByteBuffer","type":"codeVoice"},{"text":" to the state","type":"text"},{"type":"text","text":" "},{"text":"of a freshly allocated one, if possible without allocations. This is the cheapest way to recycle a ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"text":" ","type":"text"},{"text":"for a new use-case.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"clear"},{"text":"(","kind":"text"},{"text":"minimumCapacity","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6UInt32V","text":"UInt32"},{"text":")","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"minimumCapacity","content":[{"inlineContent":[{"type":"text","text":"The minimum capacity that will be (re)allocated for this buffer"}],"type":"paragraph"}]}]},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"style":"note","name":"Note","content":[{"type":"paragraph","inlineContent":[{"text":"This method will allocate if the underlying storage is referenced by another ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":". Even if an"},{"text":" ","type":"text"},{"type":"text","text":"allocation is necessary this will be cheaper as the copy of the storage is elided."}]}],"type":"aside"}],"kind":"content"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"role":"symbol","externalID":"s:7NIOCore10ByteBufferV5clear15minimumCapacityys6UInt32V_tF","roleHeading":"Instance Method","platforms":[{"unavailable":false,"beta":false,"message":"Use an `Int` as the argument","deprecated":true}],"modules":[{"name":"SotoSignerV4"}],"title":"clear(minimumCapacity:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"clear","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"minimumCapacity"},{"text":": ","kind":"text"},{"text":"UInt32","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt32V"},{"text":")","kind":"text"}],"symbolKind":"method"},"kind":"symbol","deprecationSummary":[{"inlineContent":[{"text":"Use an `Int` as the argument","type":"text"}],"type":"paragraph"}],"references":{"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBuffer/clear(minimumCapacity:)-7qskn":{"url":"\/documentation\/sotosignerv4\/bytebuffer\/clear(minimumcapacity:)-7qskn","deprecated":true,"abstract":[{"type":"text","text":"Set both reader index and writer index to "},{"type":"codeVoice","code":"0"},{"text":". This will reset the state of this ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" to the state"},{"text":" ","type":"text"},{"text":"of a freshly allocated one, if possible without allocations. This is the cheapest way to recycle a ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"text":" ","type":"text"},{"text":"for a new use-case.","type":"text"}],"title":"clear(minimumCapacity:)","kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"clear","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"minimumCapacity"},{"text":": ","kind":"text"},{"text":"UInt32","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt32V"},{"kind":"text","text":")"}],"identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer\/clear(minimumCapacity:)-7qskn"},"doc://codes.soto.soto-core/documentation/SotoSignerV4":{"kind":"symbol","abstract":[{"text":"Sign HTTP requests before sending them to AWS either by generating a signed URL or a set of signed headers.","type":"text"}],"identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4","role":"collection","url":"\/documentation\/sotosignerv4","title":"SotoSignerV4","type":"topic"},"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBuffer":{"type":"topic","title":"ByteBuffer","role":"symbol","abstract":[{"code":"ByteBuffer","type":"codeVoice"},{"text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or","type":"text"},{"text":" ","type":"text"},{"text":"more bytes (octets).","type":"text"}],"identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ByteBuffer"}],"navigatorTitle":[{"kind":"identifier","text":"ByteBuffer"}],"kind":"symbol","url":"\/documentation\/sotosignerv4\/bytebuffer"}}}