{"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"symbolKind":"method","roleHeading":"Instance Method","modules":[{"name":"SotoSignerV4"}],"title":"clear(minimumCapacity:)","externalID":"s:7NIOCore10ByteBufferV5clear15minimumCapacityySi_tF","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"clear"},{"text":"(","kind":"text"},{"text":"minimumCapacity","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":")","kind":"text"}],"role":"symbol"},"identifier":{"url":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer\/clear(minimumCapacity:)-12w71","interfaceLanguage":"swift"},"abstract":[{"text":"Set both reader index and writer index to ","type":"text"},{"type":"codeVoice","code":"0"},{"text":". This will reset the state of this ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":" to the state","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"of a freshly allocated one, if possible without allocations. This is the cheapest way to recycle a "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" "},{"type":"text","text":"for a new use-case."}],"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"mutating","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"clear","kind":"identifier"},{"kind":"text","text":"("},{"text":"minimumCapacity","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"kind":"text","text":")"}],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"name":"minimumCapacity","content":[{"inlineContent":[{"type":"text","text":"The minimum capacity that will be (re)allocated for this buffer"}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"name":"Note","type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This method will allocate if the underlying storage is referenced by another "},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":". Even if an"},{"type":"text","text":" "},{"type":"text","text":"allocation is necessary this will be cheaper as the copy of the storage is elided."}]}]}]}],"hierarchy":{"paths":[["doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4","doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer"]]},"sections":[],"variants":[{"paths":["\/documentation\/sotosignerv4\/bytebuffer\/clear(minimumcapacity:)-12w71"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBuffer":{"title":"ByteBuffer","role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ByteBuffer"}],"identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer","abstract":[{"type":"codeVoice","code":"ByteBuffer"},{"text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or","type":"text"},{"type":"text","text":" "},{"text":"more bytes (octets).","type":"text"}],"navigatorTitle":[{"text":"ByteBuffer","kind":"identifier"}],"type":"topic","url":"\/documentation\/sotosignerv4\/bytebuffer"},"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBuffer/clear(minimumCapacity:)-12w71":{"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"clear","kind":"identifier"},{"kind":"text","text":"("},{"text":"minimumCapacity","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"kind":"text","text":")"}],"identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer\/clear(minimumCapacity:)-12w71","abstract":[{"text":"Set both reader index and writer index to ","type":"text"},{"type":"codeVoice","code":"0"},{"type":"text","text":". This will reset the state of this "},{"code":"ByteBuffer","type":"codeVoice"},{"text":" to the state","type":"text"},{"type":"text","text":" "},{"type":"text","text":"of a freshly allocated one, if possible without allocations. This is the cheapest way to recycle a "},{"code":"ByteBuffer","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"for a new use-case."}],"kind":"symbol","url":"\/documentation\/sotosignerv4\/bytebuffer\/clear(minimumcapacity:)-12w71","title":"clear(minimumCapacity:)","role":"symbol"},"doc://codes.soto.soto-core/documentation/SotoSignerV4":{"title":"SotoSignerV4","abstract":[{"type":"text","text":"Sign HTTP requests before sending them to AWS either by generating a signed URL or a set of signed headers."}],"identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4","kind":"symbol","type":"topic","role":"collection","url":"\/documentation\/sotosignerv4"}}}