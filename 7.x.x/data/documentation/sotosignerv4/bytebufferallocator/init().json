{"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"kind":"text","text":"()"}],"platforms":["macOS"]}]}],"hierarchy":{"paths":[["doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4","doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBufferAllocator"]]},"metadata":{"modules":[{"name":"SotoSignerV4"}],"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"()"}],"symbolKind":"init","externalID":"s:7NIOCore19ByteBufferAllocatorVACycfc","role":"symbol","roleHeading":"Initializer","title":"init()"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBufferAllocator\/init()"},"abstract":[{"text":"Create a fresh ","type":"text"},{"code":"ByteBufferAllocator","type":"codeVoice"},{"text":". In the future the allocator might use for example allocation pools and","type":"text"},{"type":"text","text":" "},{"text":"therefore it’s recommended to reuse ","type":"text"},{"type":"codeVoice","code":"ByteBufferAllocators"},{"type":"text","text":" where possible instead of creating fresh ones in"},{"type":"text","text":" "},{"type":"text","text":"many places."}],"sections":[],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/sotosignerv4\/bytebufferallocator\/init()"]}],"references":{"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBufferAllocator":{"title":"ByteBufferAllocator","url":"\/documentation\/sotosignerv4\/bytebufferallocator","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBufferAllocator"}],"kind":"symbol","identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBufferAllocator","type":"topic","abstract":[{"text":"The preferred allocator for ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":" values. The allocation strategy is opaque but is currently libc’s"},{"text":" ","type":"text"},{"type":"codeVoice","code":"malloc"},{"text":", ","type":"text"},{"type":"codeVoice","code":"realloc"},{"text":" and ","type":"text"},{"code":"free","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ByteBufferAllocator"}]},"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBufferAllocator/init()":{"url":"\/documentation\/sotosignerv4\/bytebufferallocator\/init()","abstract":[{"type":"text","text":"Create a fresh "},{"type":"codeVoice","code":"ByteBufferAllocator"},{"type":"text","text":". In the future the allocator might use for example allocation pools and"},{"type":"text","text":" "},{"type":"text","text":"therefore it’s recommended to reuse "},{"code":"ByteBufferAllocators","type":"codeVoice"},{"type":"text","text":" where possible instead of creating fresh ones in"},{"text":" ","type":"text"},{"text":"many places.","type":"text"}],"type":"topic","identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBufferAllocator\/init()","title":"init()","kind":"symbol","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"()"}]},"doc://codes.soto.soto-core/documentation/SotoSignerV4":{"kind":"symbol","abstract":[{"text":"Sign HTTP requests before sending them to AWS either by generating a signed URL or a set of signed headers.","type":"text"}],"identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4","role":"collection","url":"\/documentation\/sotosignerv4","title":"SotoSignerV4","type":"topic"}}}