{"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"paths":["\/documentation\/sotosignerv4\/bytebufferallocator\/init()"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBufferAllocator\/init()"},"metadata":{"title":"init()","symbolKind":"init","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"()"}],"externalID":"s:7NIOCore19ByteBufferAllocatorVACycfc","modules":[{"name":"SotoSignerV4"}],"roleHeading":"Initializer"},"abstract":[{"type":"text","text":"Create a fresh "},{"type":"codeVoice","code":"ByteBufferAllocator"},{"type":"text","text":". In the future the allocator might use for example allocation pools and"},{"text":" ","type":"text"},{"type":"text","text":"therefore it’s recommended to reuse "},{"type":"codeVoice","code":"ByteBufferAllocators"},{"text":" where possible instead of creating fresh ones in","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"many places."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"text":"()","kind":"text"}]}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4","doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBufferAllocator"]]},"references":{"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBufferAllocator/init()":{"type":"topic","identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBufferAllocator\/init()","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"()"}],"title":"init()","url":"\/documentation\/sotosignerv4\/bytebufferallocator\/init()","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Create a fresh "},{"type":"codeVoice","code":"ByteBufferAllocator"},{"text":". In the future the allocator might use for example allocation pools and","type":"text"},{"type":"text","text":" "},{"text":"therefore it’s recommended to reuse ","type":"text"},{"code":"ByteBufferAllocators","type":"codeVoice"},{"text":" where possible instead of creating fresh ones in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"many places."}]},"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBufferAllocator":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"ByteBufferAllocator"}],"identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBufferAllocator","url":"\/documentation\/sotosignerv4\/bytebufferallocator","kind":"symbol","title":"ByteBufferAllocator","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ByteBufferAllocator","kind":"identifier"}],"role":"symbol","abstract":[{"text":"The preferred allocator for ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":" values. The allocation strategy is opaque but is currently libc’s","type":"text"},{"text":" ","type":"text"},{"code":"malloc","type":"codeVoice"},{"text":", ","type":"text"},{"code":"realloc","type":"codeVoice"},{"type":"text","text":" and "},{"code":"free","type":"codeVoice"},{"type":"text","text":"."}]},"doc://codes.soto.soto-core/documentation/SotoSignerV4":{"type":"topic","url":"\/documentation\/sotosignerv4","title":"SotoSignerV4","abstract":[{"text":"Sign HTTP requests before sending them to AWS either by generating a signed URL or a set of signed headers.","type":"text"}],"identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4","kind":"symbol","role":"collection"}}}