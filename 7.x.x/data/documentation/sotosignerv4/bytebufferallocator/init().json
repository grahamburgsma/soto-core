{"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"kind":"symbol","identifier":{"url":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBufferAllocator\/init()","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/sotosignerv4\/bytebufferallocator\/init()"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4","doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBufferAllocator"]]},"abstract":[{"type":"text","text":"Create a fresh "},{"code":"ByteBufferAllocator","type":"codeVoice"},{"type":"text","text":". In the future the allocator might use for example allocation pools and"},{"text":" ","type":"text"},{"text":"therefore it’s recommended to reuse ","type":"text"},{"type":"codeVoice","code":"ByteBufferAllocators"},{"type":"text","text":" where possible instead of creating fresh ones in"},{"type":"text","text":" "},{"type":"text","text":"many places."}],"metadata":{"role":"symbol","modules":[{"name":"SotoSignerV4"}],"symbolKind":"init","externalID":"s:7NIOCore19ByteBufferAllocatorVACycfc","title":"init()","roleHeading":"Initializer","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}]},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"()"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"}],"references":{"doc://codes.soto.soto-core/documentation/SotoSignerV4":{"url":"\/documentation\/sotosignerv4","identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4","type":"topic","title":"SotoSignerV4","kind":"symbol","abstract":[{"text":"Sign HTTP requests before sending them to AWS either by generating a signed URL or a set of signed headers.","type":"text"}],"role":"collection"},"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBufferAllocator":{"abstract":[{"type":"text","text":"The preferred allocator for "},{"type":"codeVoice","code":"ByteBuffer"},{"text":" values. The allocation strategy is opaque but is currently libc’s","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"malloc"},{"text":", ","type":"text"},{"code":"realloc","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"free","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","title":"ByteBufferAllocator","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ByteBufferAllocator","kind":"identifier"}],"identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBufferAllocator","kind":"symbol","navigatorTitle":[{"text":"ByteBufferAllocator","kind":"identifier"}],"type":"topic","url":"\/documentation\/sotosignerv4\/bytebufferallocator"},"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBufferAllocator/init()":{"type":"topic","identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBufferAllocator\/init()","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"role":"symbol","url":"\/documentation\/sotosignerv4\/bytebufferallocator\/init()","abstract":[{"text":"Create a fresh ","type":"text"},{"type":"codeVoice","code":"ByteBufferAllocator"},{"text":". In the future the allocator might use for example allocation pools and","type":"text"},{"type":"text","text":" "},{"text":"therefore it’s recommended to reuse ","type":"text"},{"code":"ByteBufferAllocators","type":"codeVoice"},{"text":" where possible instead of creating fresh ones in","type":"text"},{"type":"text","text":" "},{"text":"many places.","type":"text"}],"title":"init()","kind":"symbol"}}}