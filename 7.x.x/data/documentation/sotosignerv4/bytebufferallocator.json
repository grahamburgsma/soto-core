{"identifier":{"url":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBufferAllocator","interfaceLanguage":"swift"},"metadata":{"roleHeading":"Structure","externalID":"s:7NIOCore19ByteBufferAllocatorV","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ByteBufferAllocator","kind":"identifier"}],"modules":[{"name":"SotoSignerV4"}],"navigatorTitle":[{"text":"ByteBufferAllocator","kind":"identifier"}],"symbolKind":"struct","title":"ByteBufferAllocator"},"topicSections":[{"generated":true,"anchor":"Initializers","title":"Initializers","identifiers":["doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBufferAllocator\/init()"]},{"title":"Instance Methods","anchor":"Instance-Methods","generated":true,"identifiers":["doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBufferAllocator\/buffer(capacity:)"]}],"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"text":"The preferred allocator for ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":" values. The allocation strategy is opaque but is currently libc’s"},{"text":" ","type":"text"},{"type":"codeVoice","code":"malloc"},{"text":", ","type":"text"},{"type":"codeVoice","code":"realloc"},{"type":"text","text":" and "},{"type":"codeVoice","code":"free"},{"type":"text","text":"."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ByteBufferAllocator","kind":"identifier"}]}]},{"content":[{"text":"Overview","type":"heading","anchor":"overview","level":2},{"content":[{"inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"ByteBufferAllocator"},{"type":"text","text":" is thread-safe."}],"type":"paragraph"}],"style":"note","name":"Note","type":"aside"}],"kind":"content"}],"kind":"symbol","relationshipsSections":[{"title":"Conforms To","kind":"relationships","type":"conformsTo","identifiers":["doc:\/\/codes.soto.soto-core\/s8SendableP"]}],"hierarchy":{"paths":[["doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4"]]},"variants":[{"paths":["\/documentation\/sotosignerv4\/bytebufferallocator"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBufferAllocator/init()":{"type":"topic","identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBufferAllocator\/init()","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"role":"symbol","url":"\/documentation\/sotosignerv4\/bytebufferallocator\/init()","abstract":[{"text":"Create a fresh ","type":"text"},{"type":"codeVoice","code":"ByteBufferAllocator"},{"text":". In the future the allocator might use for example allocation pools and","type":"text"},{"type":"text","text":" "},{"text":"therefore it’s recommended to reuse ","type":"text"},{"code":"ByteBufferAllocators","type":"codeVoice"},{"text":" where possible instead of creating fresh ones in","type":"text"},{"type":"text","text":" "},{"text":"many places.","type":"text"}],"title":"init()","kind":"symbol"},"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBufferAllocator":{"abstract":[{"type":"text","text":"The preferred allocator for "},{"type":"codeVoice","code":"ByteBuffer"},{"text":" values. The allocation strategy is opaque but is currently libc’s","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"malloc"},{"text":", ","type":"text"},{"code":"realloc","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"free","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","title":"ByteBufferAllocator","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ByteBufferAllocator","kind":"identifier"}],"identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBufferAllocator","kind":"symbol","navigatorTitle":[{"text":"ByteBufferAllocator","kind":"identifier"}],"type":"topic","url":"\/documentation\/sotosignerv4\/bytebufferallocator"},"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBufferAllocator/buffer(capacity:)":{"title":"buffer(capacity:)","abstract":[{"text":"Request a freshly allocated ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":" of size "},{"code":"capacity","type":"codeVoice"},{"type":"text","text":" or larger."}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"buffer","kind":"identifier"},{"text":"(","kind":"text"},{"text":"capacity","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":") -> "},{"text":"ByteBuffer","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV"}],"type":"topic","kind":"symbol","url":"\/documentation\/sotosignerv4\/bytebufferallocator\/buffer(capacity:)","identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBufferAllocator\/buffer(capacity:)"},"doc://codes.soto.soto-core/s8SendableP":{"identifier":"doc:\/\/codes.soto.soto-core\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://codes.soto.soto-core/documentation/SotoSignerV4":{"url":"\/documentation\/sotosignerv4","identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4","type":"topic","title":"SotoSignerV4","kind":"symbol","abstract":[{"text":"Sign HTTP requests before sending them to AWS either by generating a signed URL or a set of signed headers.","type":"text"}],"role":"collection"}}}