{"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","sections":[],"relationshipsSections":[{"identifiers":["doc:\/\/codes.soto.soto-core\/s8SendableP"],"title":"Conforms To","type":"conformsTo","kind":"relationships"}],"topicSections":[{"anchor":"Initializers","identifiers":["doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBufferAllocator\/init()"],"title":"Initializers","generated":true},{"generated":true,"title":"Instance Methods","identifiers":["doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBufferAllocator\/buffer(capacity:)"],"anchor":"Instance-Methods"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/sotosignerv4\/bytebufferallocator"]}],"metadata":{"modules":[{"name":"SotoSignerV4"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ByteBufferAllocator"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ByteBufferAllocator","kind":"identifier"}],"title":"ByteBufferAllocator","externalID":"s:7NIOCore19ByteBufferAllocatorV","roleHeading":"Structure","symbolKind":"struct"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBufferAllocator"},"hierarchy":{"paths":[["doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4"]]},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ByteBufferAllocator","kind":"identifier"}]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"overview","text":"Overview","type":"heading","level":2},{"name":"Note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"ByteBufferAllocator"},{"text":" is thread-safe.","type":"text"}]}],"style":"note","type":"aside"}]}],"abstract":[{"text":"The preferred allocator for ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" values. The allocation strategy is opaque but is currently libc’s"},{"text":" ","type":"text"},{"type":"codeVoice","code":"malloc"},{"text":", ","type":"text"},{"type":"codeVoice","code":"realloc"},{"type":"text","text":" and "},{"type":"codeVoice","code":"free"},{"text":".","type":"text"}],"references":{"doc://codes.soto.soto-core/documentation/SotoSignerV4":{"title":"SotoSignerV4","abstract":[{"type":"text","text":"Sign HTTP requests before sending them to AWS either by generating a signed URL or a set of signed headers."}],"identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4","kind":"symbol","type":"topic","role":"collection","url":"\/documentation\/sotosignerv4"},"doc://codes.soto.soto-core/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/codes.soto.soto-core\/s8SendableP"},"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBufferAllocator/init()":{"abstract":[{"text":"Create a fresh ","type":"text"},{"type":"codeVoice","code":"ByteBufferAllocator"},{"text":". In the future the allocator might use for example allocation pools and","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"therefore it’s recommended to reuse "},{"type":"codeVoice","code":"ByteBufferAllocators"},{"type":"text","text":" where possible instead of creating fresh ones in"},{"type":"text","text":" "},{"type":"text","text":"many places."}],"role":"symbol","type":"topic","url":"\/documentation\/sotosignerv4\/bytebufferallocator\/init()","identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBufferAllocator\/init()","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"()"}],"kind":"symbol","title":"init()"},"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBufferAllocator/buffer(capacity:)":{"type":"topic","abstract":[{"type":"text","text":"Request a freshly allocated "},{"code":"ByteBuffer","type":"codeVoice"},{"text":" of size ","type":"text"},{"type":"codeVoice","code":"capacity"},{"text":" or larger.","type":"text"}],"url":"\/documentation\/sotosignerv4\/bytebufferallocator\/buffer(capacity:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"buffer"},{"text":"(","kind":"text"},{"text":"capacity","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer","kind":"typeIdentifier"}],"title":"buffer(capacity:)","kind":"symbol","identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBufferAllocator\/buffer(capacity:)"},"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBufferAllocator":{"type":"topic","abstract":[{"type":"text","text":"The preferred allocator for "},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":" values. The allocation strategy is opaque but is currently libc’s"},{"text":" ","type":"text"},{"type":"codeVoice","code":"malloc"},{"text":", ","type":"text"},{"code":"realloc","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"free"},{"type":"text","text":"."}],"navigatorTitle":[{"kind":"identifier","text":"ByteBufferAllocator"}],"url":"\/documentation\/sotosignerv4\/bytebufferallocator","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ByteBufferAllocator"}],"title":"ByteBufferAllocator","kind":"symbol","identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBufferAllocator"}}}