{"metadata":{"modules":[{"name":"SotoSignerV4"}],"externalID":"s:7NIOCore19ByteBufferAllocatorV","roleHeading":"Structure","symbolKind":"struct","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ByteBufferAllocator","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ByteBufferAllocator"}],"title":"ByteBufferAllocator"},"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4"]]},"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/codes.soto.soto-core\/s8SendableP"],"title":"Conforms To","type":"conformsTo"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ByteBufferAllocator","kind":"identifier"}]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"text":"Overview","type":"heading"},{"content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"code":"ByteBufferAllocator","type":"codeVoice"},{"text":" is thread-safe.","type":"text"}]}],"name":"Note","style":"note","type":"aside"}]}],"abstract":[{"type":"text","text":"The preferred allocator for "},{"code":"ByteBuffer","type":"codeVoice"},{"text":" values. The allocation strategy is opaque but is currently libc’s","type":"text"},{"text":" ","type":"text"},{"code":"malloc","type":"codeVoice"},{"type":"text","text":", "},{"code":"realloc","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"free","type":"codeVoice"},{"text":".","type":"text"}],"identifier":{"url":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBufferAllocator","interfaceLanguage":"swift"},"kind":"symbol","variants":[{"paths":["\/documentation\/sotosignerv4\/bytebufferallocator"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"anchor":"Initializers","title":"Initializers","identifiers":["doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBufferAllocator\/init()"],"generated":true},{"identifiers":["doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBufferAllocator\/buffer(capacity:)"],"generated":true,"anchor":"Instance-Methods","title":"Instance Methods"}],"references":{"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBufferAllocator":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ByteBufferAllocator","kind":"identifier"}],"navigatorTitle":[{"text":"ByteBufferAllocator","kind":"identifier"}],"type":"topic","url":"\/documentation\/sotosignerv4\/bytebufferallocator","identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBufferAllocator","abstract":[{"type":"text","text":"The preferred allocator for "},{"code":"ByteBuffer","type":"codeVoice"},{"text":" values. The allocation strategy is opaque but is currently libc’s","type":"text"},{"text":" ","type":"text"},{"code":"malloc","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"realloc"},{"text":" and ","type":"text"},{"code":"free","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","role":"symbol","title":"ByteBufferAllocator"},"doc://codes.soto.soto-core/documentation/SotoSignerV4":{"kind":"symbol","title":"SotoSignerV4","type":"topic","abstract":[{"text":"Sign HTTP requests before sending them to AWS either by generating a signed URL or a set of signed headers.","type":"text"}],"role":"collection","url":"\/documentation\/sotosignerv4","identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4"},"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBufferAllocator/buffer(capacity:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"buffer","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"capacity"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV"}],"url":"\/documentation\/sotosignerv4\/bytebufferallocator\/buffer(capacity:)","type":"topic","role":"symbol","identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBufferAllocator\/buffer(capacity:)","kind":"symbol","abstract":[{"text":"Request a freshly allocated ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":" of size ","type":"text"},{"type":"codeVoice","code":"capacity"},{"text":" or larger.","type":"text"}],"title":"buffer(capacity:)"},"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBufferAllocator/init()":{"fragments":[{"kind":"identifier","text":"init"},{"text":"()","kind":"text"}],"type":"topic","url":"\/documentation\/sotosignerv4\/bytebufferallocator\/init()","identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBufferAllocator\/init()","abstract":[{"text":"Create a fresh ","type":"text"},{"type":"codeVoice","code":"ByteBufferAllocator"},{"text":". In the future the allocator might use for example allocation pools and","type":"text"},{"text":" ","type":"text"},{"text":"therefore it’s recommended to reuse ","type":"text"},{"code":"ByteBufferAllocators","type":"codeVoice"},{"type":"text","text":" where possible instead of creating fresh ones in"},{"type":"text","text":" "},{"type":"text","text":"many places."}],"kind":"symbol","role":"symbol","title":"init()"},"doc://codes.soto.soto-core/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/codes.soto.soto-core\/s8SendableP","title":"Swift.Sendable"}}}