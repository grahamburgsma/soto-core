{"identifier":{"url":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/sotosignerv4\/bytebuffer"]}],"metadata":{"role":"symbol","modules":[{"name":"SotoSignerV4"}],"roleHeading":"Structure","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBuffer"}],"symbolKind":"struct","navigatorTitle":[{"text":"ByteBuffer","kind":"identifier"}],"externalID":"s:7NIOCore10ByteBufferV","title":"ByteBuffer"},"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/codes.soto.soto-core\/s28CustomDebugStringConvertibleP","doc:\/\/codes.soto.soto-core\/s23CustomStringConvertibleP","doc:\/\/codes.soto.soto-core\/Se","doc:\/\/codes.soto.soto-core\/SE","doc:\/\/codes.soto.soto-core\/SQ","doc:\/\/codes.soto.soto-core\/SH","doc:\/\/codes.soto.soto-core\/s8SendableP"]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"abstract":[{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or"},{"type":"text","text":" "},{"type":"text","text":"more bytes (octets)."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBuffer"}],"languages":["swift"]}]},{"kind":"content","content":[{"level":3,"anchor":"Allocation","text":"Allocation","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Use ","type":"text"},{"type":"codeVoice","code":"allocator.buffer(capacity: desiredCapacity)"},{"type":"text","text":" to allocate a new "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":"."}]},{"level":3,"text":"Basic usage","type":"heading","anchor":"Basic-usage"},{"inlineContent":[{"type":"text","text":"A variety of types can be read\/written from\/to a "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":". Using Swift’s "},{"code":"extension","type":"codeVoice"},{"type":"text","text":" mechanism you can easily"},{"type":"text","text":" "},{"text":"create ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":" support for your own data types. Out of the box, "},{"type":"codeVoice","code":"ByteBuffer"},{"text":" supports for example the following","type":"text"},{"type":"text","text":" "},{"text":"types (non-exhaustive list):","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"String"},{"text":"\/","type":"text"},{"code":"StaticString","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Swift’s various (unsigned) integer types","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"code":"Foundation","type":"codeVoice"},{"type":"text","text":"’s "},{"type":"codeVoice","code":"Data"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"[UInt8]"},{"text":" and generally any ","type":"text"},{"type":"codeVoice","code":"Collection"},{"type":"text","text":" of "},{"code":"UInt8","type":"codeVoice"}]}]}]},{"type":"paragraph","inlineContent":[{"text":"The best and easiest way to read and convert ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer"},{"type":"text","text":" into a "},{"type":"codeVoice","code":"String"},{"text":",  ","type":"text"},{"type":"codeVoice","code":"Array<UInt8>"},{"text":", or ","type":"text"},{"code":"Data","type":"codeVoice"},{"type":"text","text":" is by"},{"text":" ","type":"text"},{"type":"text","text":"passing the buffer to an initializer."}]},{"type":"paragraph","inlineContent":[{"text":"Example:","type":"text"}]},{"syntax":null,"code":["let buf = ...","let myString = String(buffer: buf)"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" provides APIs for reading its contents either sequentially ("},{"code":"read*","type":"codeVoice"},{"text":" methods) or randomly (","type":"text"},{"type":"codeVoice","code":"get*"},{"type":"text","text":" "},{"type":"text","text":"methods). All "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" methods that don’t contain the word ‘unsafe’ will only allow you to access the readable"},{"type":"text","text":" "},{"type":"text","text":"bytes of the buffer, i.e. "},{"code":"readerIndex ..< writerIndex","type":"codeVoice"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"text":"If you need to loop over all the bytes in the buffer, you can use the ","type":"text"},{"code":"Collection","type":"codeVoice"},{"type":"text","text":" conformance with "},{"code":"readableBytesView","type":"codeVoice"},{"type":"text","text":":"}]},{"type":"codeListing","syntax":null,"code":["for byte in buffer.readableBytesView {","    print(byte)","}"]},{"type":"paragraph","inlineContent":[{"text":"If you need to process the whole buffer front to back, it’s recommended that you use sequential ","type":"text"},{"type":"codeVoice","code":"read*"},{"text":" methods:","type":"text"}]},{"code":["while buffer.readableBytes > 0 {","    if let chunk = buffer.readBytes(length: min(chunkSize, buffer.readableBytes) {","        \/\/ work with the chunk of data","    } else {","        \/\/ fallback in case of buffer read error.","    }","}"],"syntax":null,"type":"codeListing"},{"type":"heading","anchor":"Random-Access","text":"Random Access","level":3},{"inlineContent":[{"type":"text","text":"For every supported type "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" usually contains two methods for random access:"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"get<Type>(at: Int, length: Int)","type":"codeVoice"},{"text":" where ","type":"text"},{"type":"codeVoice","code":"<type>"},{"text":" is for example ","type":"text"},{"code":"String","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"Data"},{"text":", ","type":"text"},{"code":"Bytes","type":"codeVoice"},{"text":" (for ","type":"text"},{"type":"codeVoice","code":"[UInt8]"},{"type":"text","text":")"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"set<Type>(at: Int)","type":"codeVoice"}]}]}],"type":"orderedList"},{"inlineContent":[{"type":"text","text":"Example:"}],"type":"paragraph"},{"syntax":null,"code":["var buf = ...","buf.setString(\"Hello World\", at: 0)","buf.moveWriterIndex(to: 11)","let helloWorld = buf.getString(at: 0, length: 11)","","let written = buf.setInteger(17 as Int, at: 11)","buf.moveWriterIndex(forwardBy: written)","let seventeen: Int? = buf.getInteger(at: 11)"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If needed, "},{"code":"ByteBuffer","type":"codeVoice"},{"text":" will automatically resize its storage to accommodate your ","type":"text"},{"type":"codeVoice","code":"set"},{"type":"text","text":" request."}]},{"content":[{"inlineContent":[{"type":"text","text":"If you need to access the contents of a "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" with "},{"type":"codeVoice","code":"get*(at: index)"},{"text":" methods, make sure that the","type":"text"},{"text":" ","type":"text"},{"code":"index","type":"codeVoice"},{"type":"text","text":" you’re passing in is within the readable bytes range. If you try to access an index outside"},{"type":"text","text":" "},{"code":"readerIndex ..< writerIndex","type":"codeVoice"},{"type":"text","text":" range, "},{"type":"codeVoice","code":"get*"},{"type":"text","text":" methods will return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":". For most applications, initializing"},{"text":" ","type":"text"},{"text":"the desired type with the contents of the buffer, or using one of the ","type":"text"},{"type":"codeVoice","code":"read*"},{"text":" is a better approach.","type":"text"}],"type":"paragraph"}],"style":"note","name":"Note","type":"aside"},{"text":"Sequential Access","type":"heading","anchor":"Sequential-Access","level":3},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" provides two properties which are indices into the "},{"type":"codeVoice","code":"ByteBuffer"},{"text":" to support sequential access:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"readerIndex"},{"text":", the index of the next readable byte","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"writerIndex"},{"type":"text","text":", the index of the next byte to write"}]}]}]},{"type":"paragraph","inlineContent":[{"text":"For every supported type ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":" usually contains two methods for sequential access:","type":"text"}]},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"read<Type>(length: Int)"},{"text":" to read ","type":"text"},{"code":"length","type":"codeVoice"},{"type":"text","text":" bytes from the current "},{"type":"codeVoice","code":"readerIndex"},{"type":"text","text":" (and then advance the reader"},{"type":"text","text":" "},{"type":"text","text":"index by "},{"type":"codeVoice","code":"length"},{"text":" bytes)","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"write<Type>(Type)"},{"text":" to write, advancing the ","type":"text"},{"type":"codeVoice","code":"writerIndex"},{"type":"text","text":" by the appropriate amount"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"text":"Example:","type":"text"}]},{"syntax":null,"type":"codeListing","code":[" var buf = ..."," buf.writeString(\"Hello World\")"," buf.writeInteger(17 as Int)"," let helloWorld = buf.readString(length: 11)"," let seventeen: Int = buf.readInteger()"]},{"level":3,"type":"heading","text":"Layout","anchor":"Layout"},{"type":"codeListing","code":["+-------------------+------------------+------------------+","| discardable bytes |  readable bytes  |  writable bytes  |","|                   |     (CONTENT)    |                  |","+-------------------+------------------+------------------+","|                   |                  |                  |","0      <=      readerIndex   <=   writerIndex    <=    capacity"],"syntax":null},{"inlineContent":[{"type":"text","text":"The ‘discardable bytes’ are usually bytes that have already been read, they can however still be accessed using"},{"type":"text","text":" "},{"type":"text","text":"the random access methods. ‘Readable bytes’ are the bytes currently available to be read using the sequential"},{"type":"text","text":" "},{"type":"text","text":"access interface ("},{"type":"codeVoice","code":"read<Type>"},{"type":"text","text":"\/"},{"code":"write<Type>","type":"codeVoice"},{"text":"). Getting ","type":"text"},{"type":"codeVoice","code":"writableBytes"},{"text":" (bytes beyond the writer index) is undefined","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"behaviour and might yield arbitrary bytes ("},{"type":"emphasis","inlineContent":[{"type":"text","text":"not"}]},{"type":"text","text":" "},{"type":"codeVoice","code":"0"},{"text":" initialised).","type":"text"}],"type":"paragraph"},{"anchor":"Slicing","text":"Slicing","type":"heading","level":3},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" supports slicing a "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" without copying the underlying storage."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Example:"}]},{"code":["var buf = ...","let dataBytes: [UInt8] = [0xca, 0xfe, 0xba, 0xbe]","let dataBytesLength = UInt32(dataBytes.count)","buf.writeInteger(dataBytesLength) \/* the header *\/","buf.writeBytes(dataBytes) \/* the data *\/","let bufDataBytesOnly = buf.getSlice(at: 4, length: dataBytes.count)","\/* `bufDataByteOnly` and `buf` will share their storage *\/"],"syntax":null,"type":"codeListing"}]}],"topicSections":[{"title":"Instance Properties","anchor":"Instance-Properties","generated":true,"identifiers":["doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer\/capacity","doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer\/readableBytes","doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer\/readerIndex","doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer\/storageCapacity","doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer\/writableBytes","doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer\/writerIndex"]},{"anchor":"Instance-Methods","generated":true,"identifiers":["doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer\/clear()","doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer\/clear(minimumCapacity:)-12w71","doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer\/clear(minimumCapacity:)-7qskn","doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer\/discardReadBytes()","doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer\/getSlice(at:length:)","doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer\/reserveCapacity(_:)","doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer\/reserveCapacity(minimumWritableBytes:)","doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer\/shrinkBufferCapacity(to:)","doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer\/withUnsafeMutableReadableBytes(_:)","doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer\/withUnsafeMutableWritableBytes(_:)","doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer\/withUnsafeReadableBytes(_:)","doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer\/withUnsafeReadableBytesWithStorageManagement(_:)","doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer\/withVeryUnsafeBytes(_:)","doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer\/withVeryUnsafeBytesWithStorageManagement(_:)","doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer\/withVeryUnsafeMutableBytes(_:)","doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer\/writeWithUnsafeMutableBytes(_:)","doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer\/writeWithUnsafeMutableBytes(minimumWritableBytes:_:)"],"title":"Instance Methods"}],"hierarchy":{"paths":[["doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4"]]},"kind":"symbol","references":{"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBuffer/writableBytes":{"abstract":[{"text":"The number of bytes writable until ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"text":" will need to grow its underlying storage which will likely","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"trigger a copy of the bytes."}],"kind":"symbol","url":"\/documentation\/sotosignerv4\/bytebuffer\/writablebytes","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"writableBytes"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"}],"title":"writableBytes","type":"topic","identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer\/writableBytes"},"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBuffer/clear(minimumCapacity:)-12w71":{"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"clear","kind":"identifier"},{"kind":"text","text":"("},{"text":"minimumCapacity","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"kind":"text","text":")"}],"identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer\/clear(minimumCapacity:)-12w71","abstract":[{"text":"Set both reader index and writer index to ","type":"text"},{"type":"codeVoice","code":"0"},{"type":"text","text":". This will reset the state of this "},{"code":"ByteBuffer","type":"codeVoice"},{"text":" to the state","type":"text"},{"type":"text","text":" "},{"type":"text","text":"of a freshly allocated one, if possible without allocations. This is the cheapest way to recycle a "},{"code":"ByteBuffer","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"for a new use-case."}],"kind":"symbol","url":"\/documentation\/sotosignerv4\/bytebuffer\/clear(minimumcapacity:)-12w71","title":"clear(minimumCapacity:)","role":"symbol"},"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBuffer/clear()":{"type":"topic","title":"clear()","identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer\/clear()","abstract":[{"type":"text","text":"Set both reader index and writer index to "},{"code":"0","type":"codeVoice"},{"type":"text","text":". This will reset the state of this "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" to the state"},{"text":" ","type":"text"},{"text":"of a freshly allocated one, if possible without allocations. This is the cheapest way to recycle a ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":" ","type":"text"},{"text":"for a new use-case.","type":"text"}],"url":"\/documentation\/sotosignerv4\/bytebuffer\/clear()","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"clear","kind":"identifier"},{"kind":"text","text":"()"}],"kind":"symbol"},"doc://codes.soto.soto-core/Se":{"title":"Swift.Decodable","type":"unresolvable","identifier":"doc:\/\/codes.soto.soto-core\/Se"},"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBuffer/writerIndex":{"type":"topic","title":"writerIndex","identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer\/writerIndex","abstract":[{"type":"text","text":"The write index or the number of bytes previously written to this "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":". "},{"type":"codeVoice","code":"writerIndex"},{"text":" is ","type":"text"},{"code":"0","type":"codeVoice"},{"text":" for a","type":"text"},{"text":" ","type":"text"},{"text":"newly allocated ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":"."}],"url":"\/documentation\/sotosignerv4\/bytebuffer\/writerindex","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"writerIndex"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"kind":"symbol"},"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBuffer/withUnsafeReadableBytes(_:)":{"type":"topic","abstract":[{"text":"Yields a buffer pointer containing this ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":"’s readable bytes."}],"url":"\/documentation\/sotosignerv4\/bytebuffer\/withunsafereadablebytes(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"withUnsafeReadableBytes"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">(("},{"preciseIdentifier":"s:SW","kind":"typeIdentifier","text":"UnsafeRawBufferPointer"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"title":"withUnsafeReadableBytes(_:)","kind":"symbol","identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer\/withUnsafeReadableBytes(_:)"},"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBuffer/withVeryUnsafeBytesWithStorageManagement(_:)":{"identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer\/withVeryUnsafeBytesWithStorageManagement(_:)","abstract":[{"type":"text","text":"See "},{"type":"codeVoice","code":"withUnsafeReadableBytesWithStorageManagement"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"withVeryUnsafeBytes"},{"text":".","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"withVeryUnsafeBytesWithStorageManagement"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">((","kind":"text"},{"kind":"typeIdentifier","text":"UnsafeRawBufferPointer","preciseIdentifier":"s:SW"},{"text":", ","kind":"text"},{"text":"Unmanaged","kind":"typeIdentifier","preciseIdentifier":"s:s9UnmanagedV"},{"kind":"text","text":"<"},{"text":"AnyObject","kind":"typeIdentifier","preciseIdentifier":"s:s9AnyObjecta"},{"kind":"text","text":">) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"}],"type":"topic","url":"\/documentation\/sotosignerv4\/bytebuffer\/withveryunsafebyteswithstoragemanagement(_:)","title":"withVeryUnsafeBytesWithStorageManagement(_:)"},"doc://codes.soto.soto-core/s28CustomDebugStringConvertibleP":{"type":"unresolvable","identifier":"doc:\/\/codes.soto.soto-core\/s28CustomDebugStringConvertibleP","title":"Swift.CustomDebugStringConvertible"},"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBuffer/shrinkBufferCapacity(to:)":{"url":"\/documentation\/sotosignerv4\/bytebuffer\/shrinkbuffercapacity(to:)","type":"topic","role":"symbol","abstract":[{"text":"The ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":" will successfully be shrunk if the requested capacity is less than the current capacity,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and the requested capacity is greater than or equal to the number of readable bytes in the buffer."},{"type":"text","text":" "},{"type":"text","text":"If either condition is not true, the buffer will not be shrunk."}],"title":"shrinkBufferCapacity(to:)","kind":"symbol","identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer\/shrinkBufferCapacity(to:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"shrinkBufferCapacity"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":") -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}]},"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBuffer/writeWithUnsafeMutableBytes(_:)":{"deprecated":true,"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"writeWithUnsafeMutableBytes"},{"kind":"text","text":"(("},{"text":"UnsafeMutableRawBufferPointer","kind":"typeIdentifier","preciseIdentifier":"s:Sw"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"}],"kind":"symbol","abstract":[],"title":"writeWithUnsafeMutableBytes(_:)","url":"\/documentation\/sotosignerv4\/bytebuffer\/writewithunsafemutablebytes(_:)","type":"topic","identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer\/writeWithUnsafeMutableBytes(_:)"},"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBuffer/readerIndex":{"abstract":[{"type":"text","text":"The reader index or the number of bytes previously read from this "},{"code":"ByteBuffer","type":"codeVoice"},{"text":". ","type":"text"},{"type":"codeVoice","code":"readerIndex"},{"type":"text","text":" is "},{"code":"0","type":"codeVoice"},{"type":"text","text":" for a"},{"text":" ","type":"text"},{"text":"newly allocated ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":"."}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"readerIndex"},{"kind":"text","text":": "},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"}],"title":"readerIndex","type":"topic","identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer\/readerIndex","url":"\/documentation\/sotosignerv4\/bytebuffer\/readerindex","kind":"symbol","role":"symbol"},"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBuffer/withUnsafeMutableReadableBytes(_:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"withUnsafeMutableReadableBytes","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">(("},{"text":"UnsafeMutableRawBufferPointer","preciseIdentifier":"s:Sw","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"}],"kind":"symbol","abstract":[{"type":"text","text":"Yields a mutable buffer pointer containing this "},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":"’s readable bytes. You may modify those bytes."}],"title":"withUnsafeMutableReadableBytes(_:)","url":"\/documentation\/sotosignerv4\/bytebuffer\/withunsafemutablereadablebytes(_:)","type":"topic","identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer\/withUnsafeMutableReadableBytes(_:)"},"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBuffer/capacity":{"role":"symbol","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"The current capacity of the storage of this "},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":", this is not constant and does "},{"inlineContent":[{"text":"not","type":"text"}],"type":"emphasis"},{"type":"text","text":" signify the number"},{"text":" ","type":"text"},{"type":"text","text":"of bytes that have been written to this "},{"type":"codeVoice","code":"ByteBuffer"},{"text":".","type":"text"}],"url":"\/documentation\/sotosignerv4\/bytebuffer\/capacity","identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer\/capacity","title":"capacity","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"capacity","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}]},"doc://codes.soto.soto-core/documentation/SotoSignerV4":{"title":"SotoSignerV4","abstract":[{"type":"text","text":"Sign HTTP requests before sending them to AWS either by generating a signed URL or a set of signed headers."}],"identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4","kind":"symbol","type":"topic","role":"collection","url":"\/documentation\/sotosignerv4"},"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBuffer/writeWithUnsafeMutableBytes(minimumWritableBytes:_:)":{"abstract":[{"text":"This vends a pointer of the ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"text":" at the ","type":"text"},{"code":"writerIndex","type":"codeVoice"},{"type":"text","text":" after ensuring that the buffer has at least "},{"code":"minimumWritableBytes","type":"codeVoice"},{"type":"text","text":" of writable bytes available."}],"identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer\/writeWithUnsafeMutableBytes(minimumWritableBytes:_:)","url":"\/documentation\/sotosignerv4\/bytebuffer\/writewithunsafemutablebytes(minimumwritablebytes:_:)","title":"writeWithUnsafeMutableBytes(minimumWritableBytes:_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"writeWithUnsafeMutableBytes","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"minimumWritableBytes"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":", (","kind":"text"},{"text":"UnsafeMutableRawBufferPointer","kind":"typeIdentifier","preciseIdentifier":"s:Sw"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"kind":"symbol","type":"topic"},"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBuffer/clear(minimumCapacity:)-7qskn":{"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"clear","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"minimumCapacity"},{"text":": ","kind":"text"},{"text":"UInt32","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt32V"},{"text":")","kind":"text"}],"identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer\/clear(minimumCapacity:)-7qskn","abstract":[{"text":"Set both reader index and writer index to ","type":"text"},{"type":"codeVoice","code":"0"},{"text":". This will reset the state of this ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" to the state"},{"type":"text","text":" "},{"text":"of a freshly allocated one, if possible without allocations. This is the cheapest way to recycle a ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" "},{"text":"for a new use-case.","type":"text"}],"kind":"symbol","url":"\/documentation\/sotosignerv4\/bytebuffer\/clear(minimumcapacity:)-7qskn","deprecated":true,"title":"clear(minimumCapacity:)","role":"symbol"},"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBuffer/readableBytes":{"type":"topic","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"readableBytes","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"}],"identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer\/readableBytes","abstract":[{"text":"The number of bytes readable (","type":"text"},{"type":"codeVoice","code":"readableBytes"},{"text":" = ","type":"text"},{"type":"codeVoice","code":"writerIndex"},{"type":"text","text":" - "},{"code":"readerIndex","type":"codeVoice"},{"text":").","type":"text"}],"kind":"symbol","url":"\/documentation\/sotosignerv4\/bytebuffer\/readablebytes","title":"readableBytes","role":"symbol"},"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBuffer/withUnsafeReadableBytesWithStorageManagement(_:)":{"abstract":[{"type":"text","text":"Yields a buffer pointer containing this "},{"code":"ByteBuffer","type":"codeVoice"},{"text":"‘s readable bytes. You may hold a pointer to those bytes","type":"text"},{"text":" ","type":"text"},{"text":"even after the closure returned iff you model the lifetime of those bytes correctly using the ","type":"text"},{"code":"Unmanaged","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"instance. If you don’t require the pointer after the closure returns, use "},{"type":"codeVoice","code":"withUnsafeReadableBytes"},{"type":"text","text":"."}],"role":"symbol","type":"topic","url":"\/documentation\/sotosignerv4\/bytebuffer\/withunsafereadablebyteswithstoragemanagement(_:)","identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer\/withUnsafeReadableBytesWithStorageManagement(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"withUnsafeReadableBytesWithStorageManagement","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">((","kind":"text"},{"preciseIdentifier":"s:SW","text":"UnsafeRawBufferPointer","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Unmanaged","kind":"typeIdentifier","preciseIdentifier":"s:s9UnmanagedV"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s9AnyObjecta","text":"AnyObject","kind":"typeIdentifier"},{"text":">) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"}],"kind":"symbol","title":"withUnsafeReadableBytesWithStorageManagement(_:)"},"doc://codes.soto.soto-core/s23CustomStringConvertibleP":{"type":"unresolvable","identifier":"doc:\/\/codes.soto.soto-core\/s23CustomStringConvertibleP","title":"Swift.CustomStringConvertible"},"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBuffer/storageCapacity":{"type":"topic","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"storageCapacity","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}],"title":"storageCapacity","abstract":[{"type":"text","text":"The current capacity of the underlying storage of this "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"A COW slice of the buffer (e.g. readSlice(length: x)) will posses the same storageCapacity as the original"},{"type":"text","text":" "},{"type":"text","text":"buffer until new data is written."}],"role":"symbol","url":"\/documentation\/sotosignerv4\/bytebuffer\/storagecapacity","identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer\/storageCapacity"},"doc://codes.soto.soto-core/SQ":{"title":"Swift.Equatable","type":"unresolvable","identifier":"doc:\/\/codes.soto.soto-core\/SQ"},"doc://codes.soto.soto-core/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/codes.soto.soto-core\/s8SendableP"},"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBuffer/reserveCapacity(minimumWritableBytes:)":{"kind":"symbol","identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer\/reserveCapacity(minimumWritableBytes:)","url":"\/documentation\/sotosignerv4\/bytebuffer\/reservecapacity(minimumwritablebytes:)","type":"topic","title":"reserveCapacity(minimumWritableBytes:)","abstract":[{"type":"text","text":"Reserves enough space to write at least the specified number of bytes."}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"reserveCapacity","kind":"identifier"},{"kind":"text","text":"("},{"text":"minimumWritableBytes","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}]},"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBuffer/reserveCapacity(_:)":{"type":"topic","abstract":[{"text":"Reserves enough space to store the specified number of bytes.","type":"text"}],"url":"\/documentation\/sotosignerv4\/bytebuffer\/reservecapacity(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"reserveCapacity"},{"kind":"text","text":"("},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"kind":"text","text":")"}],"title":"reserveCapacity(_:)","kind":"symbol","identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer\/reserveCapacity(_:)"},"doc://codes.soto.soto-core/SH":{"title":"Swift.Hashable","type":"unresolvable","identifier":"doc:\/\/codes.soto.soto-core\/SH"},"doc://codes.soto.soto-core/SE":{"title":"Swift.Encodable","type":"unresolvable","identifier":"doc:\/\/codes.soto.soto-core\/SE"},"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBuffer/getSlice(at:length:)":{"kind":"symbol","url":"\/documentation\/sotosignerv4\/bytebuffer\/getslice(at:length:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getSlice"},{"text":"(","kind":"text"},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"length"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer"},{"text":"?","kind":"text"}],"title":"getSlice(at:length:)","role":"symbol","identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer\/getSlice(at:length:)","abstract":[{"type":"text","text":"Returns a slice of size "},{"type":"codeVoice","code":"length"},{"type":"text","text":" bytes, starting at "},{"code":"index","type":"codeVoice"},{"text":". The ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":" this is invoked on and the"},{"type":"text","text":" "},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":" returned will share the same underlying storage. However, the byte at "},{"type":"codeVoice","code":"index"},{"text":" in this ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":" ","type":"text"},{"text":"will correspond to index ","type":"text"},{"code":"0","type":"codeVoice"},{"text":" in the returned ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"The "},{"type":"codeVoice","code":"readerIndex"},{"type":"text","text":" of the returned "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" will be "},{"code":"0","type":"codeVoice"},{"text":", the ","type":"text"},{"type":"codeVoice","code":"writerIndex"},{"text":" will be ","type":"text"},{"type":"codeVoice","code":"length"},{"type":"text","text":"."}]},"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBuffer/withVeryUnsafeBytes(_:)":{"type":"topic","title":"withVeryUnsafeBytes(_:)","identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer\/withVeryUnsafeBytes(_:)","abstract":[{"type":"text","text":"This vends a pointer to the storage of the "},{"code":"ByteBuffer","type":"codeVoice"},{"text":". It’s marked as ","type":"text"},{"inlineContent":[{"type":"text","text":"very unsafe"}],"type":"emphasis"},{"type":"text","text":" because it might contain"},{"type":"text","text":" "},{"text":"uninitialised memory and it’s undefined behaviour to read it. In most cases you should use ","type":"text"},{"code":"withUnsafeReadableBytes","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"withVeryUnsafeBytes"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">((","kind":"text"},{"preciseIdentifier":"s:SW","kind":"typeIdentifier","text":"UnsafeRawBufferPointer"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"role":"symbol","url":"\/documentation\/sotosignerv4\/bytebuffer\/withveryunsafebytes(_:)","kind":"symbol"},"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBuffer/withVeryUnsafeMutableBytes(_:)":{"abstract":[{"type":"text","text":"This vends a pointer to the storage of the "},{"code":"ByteBuffer","type":"codeVoice"},{"text":". It’s marked as ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"very unsafe","type":"text"}]},{"type":"text","text":" because it might contain"},{"text":" ","type":"text"},{"type":"text","text":"uninitialised memory and it’s undefined behaviour to read it. In most cases you should use "},{"type":"codeVoice","code":"withUnsafeMutableWritableBytes"},{"type":"text","text":"."}],"url":"\/documentation\/sotosignerv4\/bytebuffer\/withveryunsafemutablebytes(_:)","title":"withVeryUnsafeMutableBytes(_:)","type":"topic","kind":"symbol","identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer\/withVeryUnsafeMutableBytes(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withVeryUnsafeMutableBytes","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">((","kind":"text"},{"text":"UnsafeMutableRawBufferPointer","kind":"typeIdentifier","preciseIdentifier":"s:Sw"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"text":"T","kind":"typeIdentifier"}]},"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBuffer/discardReadBytes()":{"type":"topic","title":"discardReadBytes()","identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer\/discardReadBytes()","abstract":[{"type":"text","text":"Discard the bytes before the reader index. The byte at index "},{"type":"codeVoice","code":"readerIndex"},{"type":"text","text":" before calling this method will be"},{"text":" ","type":"text"},{"type":"text","text":"at index "},{"type":"codeVoice","code":"0"},{"type":"text","text":" after the call returns."}],"url":"\/documentation\/sotosignerv4\/bytebuffer\/discardreadbytes()","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"discardReadBytes","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"kind":"symbol"},"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBuffer/withUnsafeMutableWritableBytes(_:)":{"url":"\/documentation\/sotosignerv4\/bytebuffer\/withunsafemutablewritablebytes(_:)","kind":"symbol","role":"symbol","title":"withUnsafeMutableWritableBytes(_:)","identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer\/withUnsafeMutableWritableBytes(_:)","abstract":[{"text":"Yields the bytes currently writable (","type":"text"},{"code":"bytesWritable","type":"codeVoice"},{"type":"text","text":" = "},{"type":"codeVoice","code":"capacity"},{"type":"text","text":" - "},{"code":"writerIndex","type":"codeVoice"},{"text":"). Before reading those bytes you must first","type":"text"},{"type":"text","text":" "},{"text":"write to them otherwise you will trigger undefined behaviour. The writer index will remain unchanged.","type":"text"}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"withUnsafeMutableWritableBytes"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","text":"UnsafeMutableRawBufferPointer"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"}]},"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBuffer":{"title":"ByteBuffer","role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ByteBuffer"}],"identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer","abstract":[{"type":"codeVoice","code":"ByteBuffer"},{"text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or","type":"text"},{"type":"text","text":" "},{"text":"more bytes (octets).","type":"text"}],"navigatorTitle":[{"text":"ByteBuffer","kind":"identifier"}],"type":"topic","url":"\/documentation\/sotosignerv4\/bytebuffer"}}}