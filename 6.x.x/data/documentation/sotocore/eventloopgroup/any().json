{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"any"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoCore\/EventLoop","preciseIdentifier":"s:7NIOCore9EventLoopP","text":"EventLoop"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"style":"warning","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"You cannot rely on the returned "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" being the current one, not all "},{"type":"codeVoice","code":"EventLoopGroup"},{"type":"text","text":"s support"},{"type":"text","text":" "},{"type":"text","text":"choosing the current one. Use this method only if you are truly happy with "},{"type":"emphasis","inlineContent":[{"type":"text","text":"any"}]},{"type":"text","text":" "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" of this"},{"type":"text","text":" "},{"type":"codeVoice","code":"EventLoopGroup"},{"type":"text","text":" instance."}]}],"type":"aside","name":"Warning"},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"You will only receive the current "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" here iff the current "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" belongs to the"},{"type":"text","text":" "},{"type":"codeVoice","code":"EventLoopGroup"},{"type":"text","text":" you call "},{"type":"codeVoice","code":"any()"},{"type":"text","text":" on."}]}],"type":"aside","name":"Note"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method is useful having access to an "},{"type":"codeVoice","code":"EventLoopGroup"},{"type":"text","text":" without the knowledge of which "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" would be"},{"type":"text","text":" "},{"type":"text","text":"the best one to select to create a new "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":". This commonly happens in libraries where the user"},{"type":"text","text":" "},{"type":"text","text":"cannot indicate what "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" they would like their futures on."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Typically, it is faster to kick off a new operation on the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"current"}]},{"type":"text","text":" "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" because that minimised thread"},{"type":"text","text":" "},{"type":"text","text":"switches. Hence, if situations where you don’t need precise knowledge of what "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" some code is running"},{"type":"text","text":" "},{"type":"text","text":"on, use "},{"type":"codeVoice","code":"any()"},{"type":"text","text":" to indicate this."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The rule of thumb is: If you are trying to do "},{"type":"emphasis","inlineContent":[{"type":"text","text":"load balancing"}]},{"type":"text","text":", use "},{"type":"codeVoice","code":"next()"},{"type":"text","text":". If you just want to create a new"},{"type":"text","text":" "},{"type":"text","text":"future or kick off some operation, use "},{"type":"codeVoice","code":"any()"},{"type":"text","text":"."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/sotocore\/eventloopgroup\/any()"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/codes.soto.soto-core\/documentation\/SotoCore\/EventLoopGroup\/any()","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Returns any "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" from the "},{"type":"codeVoice","code":"EventLoopGroup"},{"type":"text","text":", a common choice is the current "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":"."}],"kind":"symbol","metadata":{"role":"symbol","title":"any()","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"any"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"EventLoop","preciseIdentifier":"s:7NIOCore9EventLoopP"}],"symbolKind":"method","externalID":"s:7NIOCore14EventLoopGroupP3anyAA0bC0_pyF","required":true,"modules":[{"name":"SotoCore"}]},"hierarchy":{"paths":[["doc:\/\/codes.soto.soto-core\/documentation\/SotoCore","doc:\/\/codes.soto.soto-core\/documentation\/SotoCore\/EventLoopGroup"]]},"references":{"doc://codes.soto.soto-core/documentation/SotoCore/EventLoop":{"role":"symbol","title":"EventLoop","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoop"}],"abstract":[{"type":"text","text":"An EventLoop processes IO \/ tasks in an endless loop for "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"s until it’s closed."}],"identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoCore\/EventLoop","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EventLoop"}],"url":"\/documentation\/sotocore\/eventloop"},"doc://codes.soto.soto-core/documentation/SotoCore/EventLoopGroup/any()":{"role":"symbol","title":"any()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"any"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"EventLoop","preciseIdentifier":"s:7NIOCore9EventLoopP"}],"abstract":[{"type":"text","text":"Returns any "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" from the "},{"type":"codeVoice","code":"EventLoopGroup"},{"type":"text","text":", a common choice is the current "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":"."}],"identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoCore\/EventLoopGroup\/any()","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/sotocore\/eventloopgroup\/any()"},"doc://codes.soto.soto-core/documentation/SotoCore":{"role":"collection","title":"SotoCore","abstract":[{"type":"text","text":"The core framework for Soto, a Swift SDK for AWS"}],"identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoCore","kind":"symbol","type":"topic","url":"\/documentation\/sotocore"},"doc://codes.soto.soto-core/documentation/SotoCore/EventLoopGroup":{"role":"symbol","title":"EventLoopGroup","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopGroup"}],"abstract":[{"type":"text","text":"Provides an endless stream of "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":"s to use."}],"identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoCore\/EventLoopGroup","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EventLoopGroup"}],"url":"\/documentation\/sotocore\/eventloopgroup"}}}