{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"convenience"},{"kind":"text","text":" "},{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"upgraders"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/NIOHTTPClientProtocolUpgrader","preciseIdentifier":"s:8NIOHTTP129NIOHTTPClientProtocolUpgraderP","text":"NIOHTTPClientProtocolUpgrader"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"httpHandlers"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"RemovableChannelHandler","preciseIdentifier":"s:7NIOCore23RemovableChannelHandlerP"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"upgradeCompletionHandler"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"upgraders","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"All "},{"type":"codeVoice","code":"HTTPClientProtocolUpgrader"},{"type":"text","text":" objects that will add their upgrade request"},{"type":"text","text":" "},{"type":"text","text":"headers and handle the upgrade if there is a response for their protocol. They should be placed in"},{"type":"text","text":" "},{"type":"text","text":"order of the preference for the upgrade."}]}]},{"name":"httpHandlers","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"All "},{"type":"codeVoice","code":"RemovableChannelHandler"},{"type":"text","text":" objects which will be removed from the pipeline"},{"type":"text","text":" "},{"type":"text","text":"once the upgrade response is sent. This is used to ensure that the pipeline will be in a clean state"},{"type":"text","text":" "},{"type":"text","text":"after the upgrade. It should include any handlers that are directly related to handling HTTP."},{"type":"text","text":" "},{"type":"text","text":"At the very least this should include the "},{"type":"codeVoice","code":"HTTPEncoder"},{"type":"text","text":" and "},{"type":"codeVoice","code":"HTTPDecoder"},{"type":"text","text":", but should also include"},{"type":"text","text":" "},{"type":"text","text":"any other handler that cannot tolerate receiving non-HTTP data."}]}]},{"name":"upgradeCompletionHandler","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that will be fired when HTTP upgrade is complete."}]}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/sotosignerv4\/niohttpclientupgradehandler\/init(upgraders:httphandlers:upgradecompletionhandler:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/NIOHTTPClientUpgradeHandler\/init(upgraders:httpHandlers:upgradeCompletionHandler:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Create a "},{"type":"codeVoice","code":"HTTPClientUpgradeHandler"},{"type":"text","text":"."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"convenience"},{"kind":"text","text":" "},{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"upgraders"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"NIOHTTPClientProtocolUpgrader","preciseIdentifier":"s:8NIOHTTP129NIOHTTPClientProtocolUpgraderP"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"httpHandlers"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"RemovableChannelHandler","preciseIdentifier":"s:7NIOCore23RemovableChannelHandlerP"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"upgradeCompletionHandler"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"title":"init(upgraders:httpHandlers:upgradeCompletionHandler:)","roleHeading":"Initializer","role":"symbol","symbolKind":"init","externalID":"s:8NIOHTTP127NIOHTTPClientUpgradeHandlerC9upgraders12httpHandlers017upgradeCompletionD0ACSayAA0B16ProtocolUpgrader_pG_Say7NIOCore016RemovableChannelD0_pGyAI0nD7ContextCctcfc","modules":[{"name":"SotoSignerV4"}]},"hierarchy":{"paths":[["doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4","doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/NIOHTTPClientUpgradeHandler"]]},"references":{"doc://codes.soto.soto-core/documentation/SotoSignerV4/NIOHTTPClientProtocolUpgrader":{"role":"symbol","title":"NIOHTTPClientProtocolUpgrader","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOHTTPClientProtocolUpgrader"}],"abstract":[{"type":"text","text":"An object that implements "},{"type":"codeVoice","code":"NIOHTTPClientProtocolUpgrader"},{"type":"text","text":" knows how to handle HTTP upgrade to"},{"type":"text","text":" "},{"type":"text","text":"a protocol on a client-side channel."},{"type":"text","text":" "},{"type":"text","text":"It has the option of denying this upgrade based upon the server response."}],"identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/NIOHTTPClientProtocolUpgrader","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"NIOHTTPClientProtocolUpgrader"}],"url":"\/documentation\/sotosignerv4\/niohttpclientprotocolupgrader"},"doc://codes.soto.soto-core/documentation/SotoSignerV4/NIOHTTPClientUpgradeHandler":{"role":"symbol","title":"NIOHTTPClientUpgradeHandler","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOHTTPClientUpgradeHandler"}],"abstract":[{"type":"text","text":"A client-side channel handler that sends a HTTP upgrade handshake request to perform a HTTP-upgrade."},{"type":"text","text":" "},{"type":"text","text":"When the first HTTP request is sent, this handler will add all appropriate headers to perform an upgrade to"},{"type":"text","text":" "},{"type":"text","text":"the a protocol. It may add headers for a set of protocols in preference order."},{"type":"text","text":" "},{"type":"text","text":"If the upgrade fails (i.e. response is not 101 Switching Protocols), this handler simply"},{"type":"text","text":" "},{"type":"text","text":"removes itself from the pipeline. If the upgrade is successful, it upgrades the pipeline to the new protocol."}],"identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/NIOHTTPClientUpgradeHandler","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"NIOHTTPClientUpgradeHandler"}],"url":"\/documentation\/sotosignerv4\/niohttpclientupgradehandler"},"doc://codes.soto.soto-core/documentation/SotoSignerV4/NIOHTTPClientUpgradeHandler/init(upgraders:httpHandlers:upgradeCompletionHandler:)":{"role":"symbol","title":"init(upgraders:httpHandlers:upgradeCompletionHandler:)","fragments":[{"kind":"keyword","text":"convenience"},{"kind":"text","text":" "},{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"upgraders"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"NIOHTTPClientProtocolUpgrader","preciseIdentifier":"s:8NIOHTTP129NIOHTTPClientProtocolUpgraderP"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"httpHandlers"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"RemovableChannelHandler","preciseIdentifier":"s:7NIOCore23RemovableChannelHandlerP"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"upgradeCompletionHandler"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Create a "},{"type":"codeVoice","code":"HTTPClientUpgradeHandler"},{"type":"text","text":"."}],"identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/NIOHTTPClientUpgradeHandler\/init(upgraders:httpHandlers:upgradeCompletionHandler:)","kind":"symbol","type":"topic","url":"\/documentation\/sotosignerv4\/niohttpclientupgradehandler\/init(upgraders:httphandlers:upgradecompletionhandler:)"},"doc://codes.soto.soto-core/documentation/SotoSignerV4":{"role":"collection","title":"SotoSignerV4","abstract":[{"type":"text","text":"Sign HTTP requests before sending them to AWS either by generating a signed URL or a set of signed headers."}],"identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4","kind":"symbol","type":"topic","url":"\/documentation\/sotosignerv4"}}}