{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"withUnsafeReadableBytesWithStorageManagement"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"body"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"UnsafeRawBufferPointer","preciseIdentifier":"s:SW"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Unmanaged","preciseIdentifier":"s:s9UnmanagedV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"AnyObject","preciseIdentifier":"s:s9AnyObjecta"},{"kind":"text","text":">) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"body","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The closure that will accept the yielded bytes and the "},{"type":"codeVoice","code":"storageManagement"},{"type":"text","text":"."}]}]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The value returned by "},{"type":"codeVoice","code":"body"},{"type":"text","text":"."}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you escape the pointer from the closure, you "},{"type":"emphasis","inlineContent":[{"type":"text","text":"must"}]},{"type":"text","text":" call "},{"type":"codeVoice","code":"storageManagement.retain()"},{"type":"text","text":" to get ownership to"},{"type":"text","text":" "},{"type":"text","text":"the bytes and you also must call "},{"type":"codeVoice","code":"storageManagement.release()"},{"type":"text","text":" if you no longer require those bytes. Calls to"},{"type":"text","text":" "},{"type":"codeVoice","code":"retain"},{"type":"text","text":" and "},{"type":"codeVoice","code":"release"},{"type":"text","text":" must be balanced."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/sotosignerv4\/bytebuffer\/withunsafereadablebyteswithstoragemanagement(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer\/withUnsafeReadableBytesWithStorageManagement(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Yields a buffer pointer containing this "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":"‘s readable bytes. You may hold a pointer to those bytes"},{"type":"text","text":" "},{"type":"text","text":"even after the closure returned iff you model the lifetime of those bytes correctly using the "},{"type":"codeVoice","code":"Unmanaged"},{"type":"text","text":" "},{"type":"text","text":"instance. If you don’t require the pointer after the closure returns, use "},{"type":"codeVoice","code":"withUnsafeReadableBytes"},{"type":"text","text":"."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"withUnsafeReadableBytesWithStorageManagement"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"UnsafeRawBufferPointer","preciseIdentifier":"s:SW"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Unmanaged","preciseIdentifier":"s:s9UnmanagedV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"AnyObject","preciseIdentifier":"s:s9AnyObjecta"},{"kind":"text","text":">) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"}],"title":"withUnsafeReadableBytesWithStorageManagement(_:)","roleHeading":"Instance Method","role":"symbol","symbolKind":"method","externalID":"s:7NIOCore10ByteBufferV44withUnsafeReadableBytesWithStorageManagementyxxSW_s9UnmanagedVyyXlGtKXEKlF","modules":[{"name":"SotoCore"}]},"hierarchy":{"paths":[["doc:\/\/codes.soto.soto-core\/documentation\/SotoCore","doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer"]]},"references":{"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBuffer/withUnsafeReadableBytesWithStorageManagement(_:)":{"role":"symbol","title":"withUnsafeReadableBytesWithStorageManagement(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"withUnsafeReadableBytesWithStorageManagement"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"UnsafeRawBufferPointer","preciseIdentifier":"s:SW"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Unmanaged","preciseIdentifier":"s:s9UnmanagedV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"AnyObject","preciseIdentifier":"s:s9AnyObjecta"},{"kind":"text","text":">) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"}],"abstract":[{"type":"text","text":"Yields a buffer pointer containing this "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":"‘s readable bytes. You may hold a pointer to those bytes"},{"type":"text","text":" "},{"type":"text","text":"even after the closure returned iff you model the lifetime of those bytes correctly using the "},{"type":"codeVoice","code":"Unmanaged"},{"type":"text","text":" "},{"type":"text","text":"instance. If you don’t require the pointer after the closure returns, use "},{"type":"codeVoice","code":"withUnsafeReadableBytes"},{"type":"text","text":"."}],"identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer\/withUnsafeReadableBytesWithStorageManagement(_:)","kind":"symbol","type":"topic","url":"\/documentation\/sotosignerv4\/bytebuffer\/withunsafereadablebyteswithstoragemanagement(_:)"},"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBuffer":{"role":"symbol","title":"ByteBuffer","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBuffer"}],"abstract":[{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or"},{"type":"text","text":" "},{"type":"text","text":"more bytes (octets)."}],"identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ByteBuffer"}],"url":"\/documentation\/sotosignerv4\/bytebuffer"},"doc://codes.soto.soto-core/documentation/SotoCore":{"role":"collection","title":"SotoCore","abstract":[{"type":"text","text":"The core framework for Soto, a Swift SDK for AWS"}],"identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoCore","kind":"symbol","type":"topic","url":"\/documentation\/sotocore"}}}