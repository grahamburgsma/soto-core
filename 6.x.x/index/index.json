{"interfaceLanguages":{"swift":[{"children":[{"title":"Articles","type":"groupMarker"},{"path":"\/documentation\/sotocore\/credentialproviders","title":"Credential Providers","type":"article"},{"path":"\/documentation\/sotocore\/serviceobjects","title":"AWS Service Objects","type":"article"},{"title":"Client","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsclient\/init(credentialprovider:retrypolicy:middlewares:options:httpclientprovider:logger:)","title":"init(credentialProvider: CredentialProviderFactory, retryPolicy: RetryPolicyFactory, middlewares: [AWSServiceMiddleware], options: Options, httpClientProvider: HTTPClientProvider, logger: Logger)","type":"init"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsclient\/httpclientprovider\/createnew","title":"case createNew","type":"case"},{"path":"\/documentation\/sotocore\/awsclient\/httpclientprovider\/createnewwitheventloopgroup(_:)","title":"case createNewWithEventLoopGroup(EventLoopGroup)","type":"case"},{"path":"\/documentation\/sotocore\/awsclient\/httpclientprovider\/shared(_:)","title":"case shared(HTTPClient)","type":"case"}],"path":"\/documentation\/sotocore\/awsclient\/httpclientprovider","title":"AWSClient.HTTPClientProvider","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsclient\/options\/init(requestloglevel:errorloglevel:)","title":"init(requestLogLevel: Logger.Level, errorLogLevel: Logger.Level)","type":"init"}],"path":"\/documentation\/sotocore\/awsclient\/options","title":"AWSClient.Options","type":"struct"},{"path":"\/documentation\/sotocore\/awsclient\/loggingdisabled","title":"static let loggingDisabled: Logger","type":"property"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsclient\/credentialprovider","title":"let credentialProvider: CredentialProvider","type":"property"},{"path":"\/documentation\/sotocore\/awsclient\/middlewares","title":"let middlewares: [AWSServiceMiddleware]","type":"property"},{"path":"\/documentation\/sotocore\/awsclient\/retrypolicy","title":"let retryPolicy: RetryPolicy","type":"property"},{"path":"\/documentation\/sotocore\/awsclient\/httpclient","title":"let httpClient: HTTPClient","type":"property"},{"path":"\/documentation\/sotocore\/awsclient\/eventloopgroup","title":"var eventLoopGroup: EventLoopGroup","type":"property"},{"title":"Shutdown","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsclient\/shutdown()","title":"func shutdown() async throws","type":"method"},{"path":"\/documentation\/sotocore\/awsclient\/shutdown(queue:_:)","title":"func shutdown(queue: DispatchQueue, (Error?) -> Void)","type":"method"},{"path":"\/documentation\/sotocore\/awsclient\/syncshutdown()","title":"func syncShutdown() throws","type":"method"},{"title":"Credentials","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsclient\/getcredential(on:logger:)-96cyr","title":"func getCredential(on: EventLoop?, logger: Logger) async throws -> Credential","type":"method"},{"path":"\/documentation\/sotocore\/awsclient\/getcredential(on:logger:)-5dlty","title":"func getCredential(on: EventLoop?, logger: Logger) -> EventLoopFuture<Credential>","type":"method"},{"path":"\/documentation\/sotocore\/awsclient\/signheaders(url:httpmethod:headers:body:serviceconfig:logger:)-2uyw9","title":"func signHeaders(url: URL, httpMethod: HTTPMethod, headers: HTTPHeaders, body: AWSPayload, serviceConfig: AWSServiceConfig, logger: Logger) async throws -> HTTPHeaders","type":"method"},{"path":"\/documentation\/sotocore\/awsclient\/signheaders(url:httpmethod:headers:body:serviceconfig:logger:)-8h5yq","title":"func signHeaders(url: URL, httpMethod: HTTPMethod, headers: HTTPHeaders, body: AWSPayload, serviceConfig: AWSServiceConfig, logger: Logger) -> EventLoopFuture<HTTPHeaders>","type":"method"},{"path":"\/documentation\/sotocore\/awsclient\/signurl(url:httpmethod:headers:expires:serviceconfig:logger:)-8d5k0","title":"func signURL(url: URL, httpMethod: HTTPMethod, headers: HTTPHeaders, expires: TimeAmount, serviceConfig: AWSServiceConfig, logger: Logger) async throws -> URL","type":"method"},{"path":"\/documentation\/sotocore\/awsclient\/signurl(url:httpmethod:headers:expires:serviceconfig:logger:)-49aa3","title":"func signURL(url: URL, httpMethod: HTTPMethod, headers: HTTPHeaders, expires: TimeAmount, serviceConfig: AWSServiceConfig, logger: Logger) -> EventLoopFuture<URL>","type":"method"},{"title":"Errors","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsclient\/clienterror\/alreadyshutdown","title":"static var alreadyShutdown: ClientError","type":"property"},{"path":"\/documentation\/sotocore\/awsclient\/clienterror\/failedtoaccesspayload","title":"static var failedToAccessPayload: ClientError","type":"property"},{"path":"\/documentation\/sotocore\/awsclient\/clienterror\/invalidurl","title":"static var invalidURL: ClientError","type":"property"},{"path":"\/documentation\/sotocore\/awsclient\/clienterror\/notenoughdata","title":"static var notEnoughData: ClientError","type":"property"},{"path":"\/documentation\/sotocore\/awsclient\/clienterror\/toomuchdata","title":"static var tooMuchData: ClientError","type":"property"},{"path":"\/documentation\/sotocore\/awsclient\/clienterror\/waiterfailed","title":"static var waiterFailed: ClientError","type":"property"},{"path":"\/documentation\/sotocore\/awsclient\/clienterror\/waitertimeout","title":"static var waiterTimeout: ClientError","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsclient\/clienterror\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/sotocore\/awsclient\/clienterror\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsclient\/clienterror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sotocore\/awsclient\/clienterror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsclient\/clienterror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/sotocore\/awsclient\/clienterror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/sotocore\/awsclient\/clienterror","title":"AWSClient.ClientError","type":"struct"},{"title":"Request Execution","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsclient\/execute(operation:path:httpmethod:serviceconfig:logger:on:)-6jc01","title":"func execute(operation: String, path: String, httpMethod: HTTPMethod, serviceConfig: AWSServiceConfig, logger: Logger, on: EventLoop?) async throws","type":"method"},{"path":"\/documentation\/sotocore\/awsclient\/execute(operation:path:httpmethod:serviceconfig:logger:on:)-3mu6q","title":"func execute(operation: String, path: String, httpMethod: HTTPMethod, serviceConfig: AWSServiceConfig, logger: Logger, on: EventLoop?) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/sotocore\/awsclient\/execute(operation:path:httpmethod:serviceconfig:logger:on:)-6hhlh","title":"func execute<Output>(operation: String, path: String, httpMethod: HTTPMethod, serviceConfig: AWSServiceConfig, logger: Logger, on: EventLoop?) async throws -> Output","type":"method"},{"path":"\/documentation\/sotocore\/awsclient\/execute(operation:path:httpmethod:serviceconfig:logger:on:)-6klm4","title":"func execute<Output>(operation: String, path: String, httpMethod: HTTPMethod, serviceConfig: AWSServiceConfig, logger: Logger, on: EventLoop?) -> EventLoopFuture<Output>","type":"method"},{"path":"\/documentation\/sotocore\/awsclient\/execute(operation:path:httpmethod:serviceconfig:input:hostprefix:logger:on:)-4iuwj","title":"func execute<Input>(operation: String, path: String, httpMethod: HTTPMethod, serviceConfig: AWSServiceConfig, input: Input, hostPrefix: String?, logger: Logger, on: EventLoop?) async throws","type":"method"},{"path":"\/documentation\/sotocore\/awsclient\/execute(operation:path:httpmethod:serviceconfig:input:hostprefix:logger:on:)-1upt6","title":"func execute<Input>(operation: String, path: String, httpMethod: HTTPMethod, serviceConfig: AWSServiceConfig, input: Input, hostPrefix: String?, logger: Logger, on: EventLoop?) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/sotocore\/awsclient\/execute(operation:path:httpmethod:serviceconfig:input:hostprefix:logger:on:)-3ttl7","title":"func execute<Output, Input>(operation: String, path: String, httpMethod: HTTPMethod, serviceConfig: AWSServiceConfig, input: Input, hostPrefix: String?, logger: Logger, on: EventLoop?) async throws -> Output","type":"method"},{"path":"\/documentation\/sotocore\/awsclient\/execute(operation:path:httpmethod:serviceconfig:input:hostprefix:logger:on:)-3dlpq","title":"func execute<Output, Input>(operation: String, path: String, httpMethod: HTTPMethod, serviceConfig: AWSServiceConfig, input: Input, hostPrefix: String?, logger: Logger, on: EventLoop?) -> EventLoopFuture<Output>","type":"method"},{"path":"\/documentation\/sotocore\/awsclient\/execute(operation:path:httpmethod:serviceconfig:input:hostprefix:logger:on:stream:)-3c73e","title":"func execute<Output, Input>(operation: String, path: String, httpMethod: HTTPMethod, serviceConfig: AWSServiceConfig, input: Input, hostPrefix: String?, logger: Logger, on: EventLoop?, stream: AWSResponseStream) async throws -> Output","type":"method"},{"path":"\/documentation\/sotocore\/awsclient\/execute(operation:path:httpmethod:serviceconfig:input:hostprefix:logger:on:stream:)-3yiw5","title":"func execute<Output, Input>(operation: String, path: String, httpMethod: HTTPMethod, serviceConfig: AWSServiceConfig, input: Input, hostPrefix: String?, logger: Logger, on: EventLoop?, stream: AWSResponseStream) -> EventLoopFuture<Output>","type":"method"},{"path":"\/documentation\/sotocore\/awsclient\/execute(operation:path:httpmethod:serviceconfig:endpointdiscovery:logger:on:)-3ek2x","title":"func execute(operation: String, path: String, httpMethod: HTTPMethod, serviceConfig: AWSServiceConfig, endpointDiscovery: AWSEndpointDiscovery, logger: Logger, on: EventLoop?) async throws","type":"method"},{"path":"\/documentation\/sotocore\/awsclient\/execute(operation:path:httpmethod:serviceconfig:endpointdiscovery:logger:on:)-4uver","title":"func execute(operation: String, path: String, httpMethod: HTTPMethod, serviceConfig: AWSServiceConfig, endpointDiscovery: AWSEndpointDiscovery, logger: Logger, on: EventLoop?) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/sotocore\/awsclient\/execute(operation:path:httpmethod:serviceconfig:endpointdiscovery:logger:on:)-9pukf","title":"func execute<Output>(operation: String, path: String, httpMethod: HTTPMethod, serviceConfig: AWSServiceConfig, endpointDiscovery: AWSEndpointDiscovery, logger: Logger, on: EventLoop?) async throws -> Output","type":"method"},{"path":"\/documentation\/sotocore\/awsclient\/execute(operation:path:httpmethod:serviceconfig:endpointdiscovery:logger:on:)-7gnt3","title":"func execute<Output>(operation: String, path: String, httpMethod: HTTPMethod, serviceConfig: AWSServiceConfig, endpointDiscovery: AWSEndpointDiscovery, logger: Logger, on: EventLoop?) -> EventLoopFuture<Output>","type":"method"},{"path":"\/documentation\/sotocore\/awsclient\/execute(operation:path:httpmethod:serviceconfig:input:hostprefix:endpointdiscovery:logger:on:)-3hzuw","title":"func execute<Input>(operation: String, path: String, httpMethod: HTTPMethod, serviceConfig: AWSServiceConfig, input: Input, hostPrefix: String?, endpointDiscovery: AWSEndpointDiscovery, logger: Logger, on: EventLoop?) async throws","type":"method"},{"path":"\/documentation\/sotocore\/awsclient\/execute(operation:path:httpmethod:serviceconfig:input:hostprefix:endpointdiscovery:logger:on:)-2l7fr","title":"func execute<Input>(operation: String, path: String, httpMethod: HTTPMethod, serviceConfig: AWSServiceConfig, input: Input, hostPrefix: String?, endpointDiscovery: AWSEndpointDiscovery, logger: Logger, on: EventLoop?) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/sotocore\/awsclient\/execute(operation:path:httpmethod:serviceconfig:input:hostprefix:endpointdiscovery:logger:on:)-1vx0e","title":"func execute<Output, Input>(operation: String, path: String, httpMethod: HTTPMethod, serviceConfig: AWSServiceConfig, input: Input, hostPrefix: String?, endpointDiscovery: AWSEndpointDiscovery, logger: Logger, on: EventLoop?) async throws -> Output","type":"method"},{"path":"\/documentation\/sotocore\/awsclient\/execute(operation:path:httpmethod:serviceconfig:input:hostprefix:endpointdiscovery:logger:on:)-3mdnx","title":"func execute<Output, Input>(operation: String, path: String, httpMethod: HTTPMethod, serviceConfig: AWSServiceConfig, input: Input, hostPrefix: String?, endpointDiscovery: AWSEndpointDiscovery, logger: Logger, on: EventLoop?) -> EventLoopFuture<Output>","type":"method"},{"path":"\/documentation\/sotocore\/awsclient\/execute(operation:path:httpmethod:serviceconfig:input:hostprefix:endpointdiscovery:logger:on:stream:)-30x0f","title":"func execute<Output, Input>(operation: String, path: String, httpMethod: HTTPMethod, serviceConfig: AWSServiceConfig, input: Input, hostPrefix: String?, endpointDiscovery: AWSEndpointDiscovery, logger: Logger, on: EventLoop?, stream: AWSResponseStream) async throws -> Output","type":"method"},{"path":"\/documentation\/sotocore\/awsclient\/execute(operation:path:httpmethod:serviceconfig:input:hostprefix:endpointdiscovery:logger:on:stream:)-1m1h2","title":"func execute<Output, Input>(operation: String, path: String, httpMethod: HTTPMethod, serviceConfig: AWSServiceConfig, input: Input, hostPrefix: String?, endpointDiscovery: AWSEndpointDiscovery, logger: Logger, on: EventLoop?, stream: AWSResponseStream) -> EventLoopFuture<Output>","type":"method"},{"title":"Pagination","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsclient\/paginatorsequence\/asynciterator\/next()","title":"func next() async throws -> Output?","type":"method"}],"path":"\/documentation\/sotocore\/awsclient\/paginatorsequence\/asynciterator","title":"AWSClient.PaginatorSequence.AsyncIterator","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsclient\/paginatorsequence\/init(input:command:inputkey:outputkey:moreresultskey:logger:on:)","title":"init(input: Input, command: ((Input, Logger, EventLoop?) async throws -> Output), inputKey: KeyPath<Input, Input.Token?>?, outputKey: KeyPath<Output, Input.Token?>, moreResultsKey: KeyPath<Output, Bool?>?, logger: Logger, on: EventLoop?)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsclient\/paginatorsequence\/makeasynciterator()","title":"func makeAsyncIterator() -> AsyncIterator","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsclient\/paginatorsequence\/element","title":"AWSClient.PaginatorSequence.Element","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsclient\/paginatorsequence\/characters","title":"var characters: AsyncCharacterSequence<Self>","type":"property"},{"path":"\/documentation\/sotocore\/awsclient\/paginatorsequence\/lines","title":"var lines: AsyncLineSequence<Self>","type":"property"},{"path":"\/documentation\/sotocore\/awsclient\/paginatorsequence\/unicodescalars","title":"var unicodeScalars: AsyncUnicodeScalarSequence<Self>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsclient\/paginatorsequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/sotocore\/awsclient\/paginatorsequence\/collect(upto:)","title":"func collect(upTo: Int) async throws -> ByteBuffer","type":"method"},{"path":"\/documentation\/sotocore\/awsclient\/paginatorsequence\/collect(upto:into:)","title":"func collect(upTo: Int, into: inout ByteBuffer) async throws","type":"method"},{"path":"\/documentation\/sotocore\/awsclient\/paginatorsequence\/compactmap(_:)-6fg2x","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/sotocore\/awsclient\/paginatorsequence\/compactmap(_:)-900bi","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/sotocore\/awsclient\/paginatorsequence\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/sotocore\/awsclient\/paginatorsequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/sotocore\/awsclient\/paginatorsequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/sotocore\/awsclient\/paginatorsequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/sotocore\/awsclient\/paginatorsequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/sotocore\/awsclient\/paginatorsequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/sotocore\/awsclient\/paginatorsequence\/fixedsizesequence(chunksize:)","title":"func fixedSizeSequence(chunkSize: Int) -> FixedSizeByteBufferAsyncSequence<Self>","type":"method"},{"path":"\/documentation\/sotocore\/awsclient\/paginatorsequence\/flatmap(_:)-2eok6","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/sotocore\/awsclient\/paginatorsequence\/flatmap(_:)-2x6hk","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/sotocore\/awsclient\/paginatorsequence\/map(_:)-379tx","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/sotocore\/awsclient\/paginatorsequence\/map(_:)-8xvon","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/sotocore\/awsclient\/paginatorsequence\/max()","title":"func max() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/sotocore\/awsclient\/paginatorsequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/sotocore\/awsclient\/paginatorsequence\/min()","title":"func min() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/sotocore\/awsclient\/paginatorsequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/sotocore\/awsclient\/paginatorsequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/sotocore\/awsclient\/paginatorsequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/sotocore\/awsclient\/paginatorsequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/sotocore\/awsclient\/paginatorsequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"}],"path":"\/documentation\/sotocore\/awsclient\/paginatorsequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/sotocore\/awsclient\/paginatorsequence","title":"AWSClient.PaginatorSequence","type":"struct"},{"path":"\/documentation\/sotocore\/awsclient\/paginate(input:command:inputkey:outputkey:logger:on:onpage:)","title":"func paginate<Input, Output>(input: Input, command: (Input, Logger, EventLoop?) -> EventLoopFuture<Output>, inputKey: KeyPath<Input, Input.Token?>, outputKey: KeyPath<Output, Input.Token?>, logger: Logger, on: EventLoop?, onPage: (Output, EventLoop) -> EventLoopFuture<Bool>) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/sotocore\/awsclient\/paginate(input:initialvalue:command:inputkey:outputkey:logger:on:onpage:)","title":"func paginate<Input, Output, Result>(input: Input, initialValue: Result, command: (Input, Logger, EventLoop?) -> EventLoopFuture<Output>, inputKey: KeyPath<Input, Input.Token?>, outputKey: KeyPath<Output, Input.Token?>, logger: Logger, on: EventLoop?, onPage: (Result, Output, EventLoop) -> EventLoopFuture<(Bool, Result)>) -> EventLoopFuture<Result>","type":"method"},{"path":"\/documentation\/sotocore\/awsclient\/paginate(input:command:tokenkey:logger:on:onpage:)","title":"func paginate<Input, Output>(input: Input, command: (Input, Logger, EventLoop?) -> EventLoopFuture<Output>, tokenKey: KeyPath<Output, Input.Token?>, logger: Logger, on: EventLoop?, onPage: (Output, EventLoop) -> EventLoopFuture<Bool>) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/sotocore\/awsclient\/paginate(input:initialvalue:command:tokenkey:logger:on:onpage:)","title":"func paginate<Input, Output, Result>(input: Input, initialValue: Result, command: (Input, Logger, EventLoop?) -> EventLoopFuture<Output>, tokenKey: KeyPath<Output, Input.Token?>, logger: Logger, on: EventLoop?, onPage: (Result, Output, EventLoop) -> EventLoopFuture<(Bool, Result)>) -> EventLoopFuture<Result>","type":"method"},{"path":"\/documentation\/sotocore\/awsclient\/paginate(input:command:tokenkey:moreresultskey:logger:on:onpage:)","title":"func paginate<Input, Output>(input: Input, command: (Input, Logger, EventLoop?) -> EventLoopFuture<Output>, tokenKey: KeyPath<Output, Input.Token?>, moreResultsKey: KeyPath<Output, Bool?>, logger: Logger, on: EventLoop?, onPage: (Output, EventLoop) -> EventLoopFuture<Bool>) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/sotocore\/awsclient\/paginate(input:initialvalue:command:tokenkey:moreresultskey:logger:on:onpage:)","title":"func paginate<Input, Output, Result>(input: Input, initialValue: Result, command: (Input, Logger, EventLoop?) -> EventLoopFuture<Output>, tokenKey: KeyPath<Output, Input.Token?>, moreResultsKey: KeyPath<Output, Bool?>, logger: Logger, on: EventLoop?, onPage: (Result, Output, EventLoop) -> EventLoopFuture<(Bool, Result)>) -> EventLoopFuture<Result>","type":"method"},{"title":"Waiters","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsclient\/waituntil(_:waiter:maxwaittime:logger:on:)-3ccn1","title":"func waitUntil<Input, Output>(Input, waiter: Waiter<Input, Output>, maxWaitTime: TimeAmount?, logger: Logger, on: EventLoop?) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/sotocore\/awsclient\/waituntil(_:waiter:maxwaittime:logger:on:)-385eg","title":"func waitUntil<Input, Output>(Input, waiter: Waiter<Input, Output>, maxWaitTime: TimeAmount?, logger: Logger, on: EventLoop?) async throws","type":"method"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsclient\/waiter\/acceptor\/init(state:matcher:)","title":"init(state: AWSClient.WaiterState, matcher: AWSWaiterMatcher)","type":"init"}],"path":"\/documentation\/sotocore\/awsclient\/waiter\/acceptor","title":"AWSClient.Waiter.Acceptor","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsclient\/waiter\/init(acceptors:mindelaytime:maxdelaytime:command:)","title":"init(acceptors: [AWSClient.Waiter<Input, Output>.Acceptor], minDelayTime: TimeAmount, maxDelayTime: TimeAmount, command: WaiterCommand)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsclient\/waiter\/waitercommand","title":"AWSClient.Waiter.WaiterCommand","type":"typealias"}],"path":"\/documentation\/sotocore\/awsclient\/waiter","title":"AWSClient.Waiter","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsclient\/waiterstate\/failure","title":"case failure","type":"case"},{"path":"\/documentation\/sotocore\/awsclient\/waiterstate\/retry","title":"case retry","type":"case"},{"path":"\/documentation\/sotocore\/awsclient\/waiterstate\/success","title":"case success","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsclient\/waiterstate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sotocore\/awsclient\/waiterstate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/sotocore\/awsclient\/waiterstate","title":"AWSClient.WaiterState","type":"enum"}],"path":"\/documentation\/sotocore\/awsclient","title":"AWSClient","type":"class"},{"title":"Services","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsservice\/init(from:patch:)","title":"init(from: Self, patch: AWSServiceConfig.Patch)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsservice\/client","title":"var client: AWSClient","type":"property"},{"path":"\/documentation\/sotocore\/awsservice\/config","title":"var config: AWSServiceConfig","type":"property"},{"path":"\/documentation\/sotocore\/awsservice\/endpoint","title":"var endpoint: String","type":"property"},{"path":"\/documentation\/sotocore\/awsservice\/eventloopgroup","title":"var eventLoopGroup: EventLoopGroup","type":"property"},{"path":"\/documentation\/sotocore\/awsservice\/region","title":"var region: Region","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsservice\/signheaders(url:httpmethod:headers:body:logger:)-2gu9j","title":"func signHeaders(url: URL, httpMethod: HTTPMethod, headers: HTTPHeaders, body: AWSPayload, logger: Logger) -> EventLoopFuture<HTTPHeaders>","type":"method"},{"path":"\/documentation\/sotocore\/awsservice\/signheaders(url:httpmethod:headers:body:logger:)-4neky","title":"func signHeaders(url: URL, httpMethod: HTTPMethod, headers: HTTPHeaders, body: AWSPayload, logger: Logger) async throws -> HTTPHeaders","type":"method"},{"path":"\/documentation\/sotocore\/awsservice\/signurl(url:httpmethod:headers:expires:logger:)-2ghu4","title":"func signURL(url: URL, httpMethod: HTTPMethod, headers: HTTPHeaders, expires: TimeAmount, logger: Logger) -> EventLoopFuture<URL>","type":"method"},{"path":"\/documentation\/sotocore\/awsservice\/signurl(url:httpmethod:headers:expires:logger:)-6dtpj","title":"func signURL(url: URL, httpMethod: HTTPMethod, headers: HTTPHeaders, expires: TimeAmount, logger: Logger) async throws -> URL","type":"method"},{"path":"\/documentation\/sotocore\/awsservice\/with(region:middlewares:timeout:bytebufferallocator:options:)","title":"func with(region: Region?, middlewares: [AWSServiceMiddleware], timeout: TimeAmount?, byteBufferAllocator: ByteBufferAllocator?, options: AWSServiceConfig.Options?) -> Self","type":"method"}],"path":"\/documentation\/sotocore\/awsservice","title":"AWSService","type":"protocol"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsserviceconfig\/endpointvariant\/init(defaultendpoint:endpoints:)","title":"init(defaultEndpoint: EndpointCallback?, endpoints: [String : String])","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsserviceconfig\/endpointvariant\/endpointcallback","title":"AWSServiceConfig.EndpointVariant.EndpointCallback","type":"typealias"}],"path":"\/documentation\/sotocore\/awsserviceconfig\/endpointvariant","title":"AWSServiceConfig.EndpointVariant","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsserviceconfig\/options-swift.struct\/init(rawvalue:)","title":"init(rawValue: RawValue)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsserviceconfig\/options-swift.struct\/rawvalue-swift.property","title":"let rawValue: Int","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsserviceconfig\/options-swift.struct\/rawvalue-swift.typealias","title":"AWSServiceConfig.Options.RawValue","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsserviceconfig\/options-swift.struct\/calculatemd5","title":"static let calculateMD5: AWSServiceConfig.Options","type":"property"},{"path":"\/documentation\/sotocore\/awsserviceconfig\/options-swift.struct\/enableendpointdiscovery","title":"static let enableEndpointDiscovery: AWSServiceConfig.Options","type":"property"},{"path":"\/documentation\/sotocore\/awsserviceconfig\/options-swift.struct\/s3disable100continue","title":"static let s3Disable100Continue: AWSServiceConfig.Options","type":"property"},{"path":"\/documentation\/sotocore\/awsserviceconfig\/options-swift.struct\/s3disablechunkeduploads","title":"static let s3DisableChunkedUploads: AWSServiceConfig.Options","type":"property"},{"path":"\/documentation\/sotocore\/awsserviceconfig\/options-swift.struct\/s3forcevirtualhost","title":"static let s3ForceVirtualHost: AWSServiceConfig.Options","type":"property"},{"path":"\/documentation\/sotocore\/awsserviceconfig\/options-swift.struct\/s3usedualstackendpoint","title":"static let s3UseDualStackEndpoint: AWSServiceConfig.Options","type":"property"},{"path":"\/documentation\/sotocore\/awsserviceconfig\/options-swift.struct\/s3usetransferacceleratedendpoint","title":"static let s3UseTransferAcceleratedEndpoint: AWSServiceConfig.Options","type":"property"},{"path":"\/documentation\/sotocore\/awsserviceconfig\/options-swift.struct\/usedualstackendpoint","title":"static let useDualStackEndpoint: AWSServiceConfig.Options","type":"property"},{"path":"\/documentation\/sotocore\/awsserviceconfig\/options-swift.struct\/usefipsendpoint","title":"static let useFipsEndpoint: AWSServiceConfig.Options","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsserviceconfig\/options-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sotocore\/awsserviceconfig\/options-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsserviceconfig\/options-swift.struct\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsserviceconfig\/options-swift.struct\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/sotocore\/awsserviceconfig\/options-swift.struct\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/sotocore\/awsserviceconfig\/options-swift.struct\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/sotocore\/awsserviceconfig\/options-swift.struct\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/sotocore\/awsserviceconfig\/options-swift.struct\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/sotocore\/awsserviceconfig\/options-swift.struct\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/sotocore\/awsserviceconfig\/options-swift.struct\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/sotocore\/awsserviceconfig\/options-swift.struct\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/sotocore\/awsserviceconfig\/options-swift.struct\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/sotocore\/awsserviceconfig\/options-swift.struct\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/sotocore\/awsserviceconfig\/options-swift.struct\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsserviceconfig\/options-swift.struct\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/sotocore\/awsserviceconfig\/options-swift.struct\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsserviceconfig\/options-swift.struct\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsserviceconfig\/options-swift.struct\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/sotocore\/awsserviceconfig\/options-swift.struct\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/sotocore\/awsserviceconfig\/options-swift.struct\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/sotocore\/awsserviceconfig\/options-swift.struct\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/sotocore\/awsserviceconfig\/options-swift.struct\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/sotocore\/awsserviceconfig\/options-swift.struct\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/sotocore\/awsserviceconfig\/options-swift.struct\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/sotocore\/awsserviceconfig\/options-swift.struct\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/sotocore\/awsserviceconfig\/options-swift.struct","title":"AWSServiceConfig.Options","type":"struct"},{"path":"\/documentation\/sotocore\/awsserviceconfig\/patch","title":"AWSServiceConfig.Patch","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsserviceconfig\/init(region:partition:amztarget:service:signingname:serviceprotocol:apiversion:endpoint:serviceendpoints:partitionendpoints:errortype:xmlnamespace:middlewares:timeout:bytebufferallocator:options:)","title":"init(region: Region?, partition: AWSPartition, amzTarget: String?, service: String, signingName: String?, serviceProtocol: ServiceProtocol, apiVersion: String, endpoint: String?, serviceEndpoints: [String : String], partitionEndpoints: [AWSPartition : (endpoint: String, region: Region)], errorType: AWSErrorType.Type?, xmlNamespace: String?, middlewares: [AWSServiceMiddleware], timeout: TimeAmount?, byteBufferAllocator: ByteBufferAllocator, options: Options)","type":"init"},{"path":"\/documentation\/sotocore\/awsserviceconfig\/init(region:partition:amztarget:service:signingname:serviceprotocol:apiversion:endpoint:serviceendpoints:partitionendpoints:variantendpoints:errortype:xmlnamespace:middlewares:timeout:bytebufferallocator:options:)","title":"init(region: Region?, partition: AWSPartition, amzTarget: String?, service: String, signingName: String?, serviceProtocol: ServiceProtocol, apiVersion: String, endpoint: String?, serviceEndpoints: [String : String], partitionEndpoints: [AWSPartition : (endpoint: String, region: Region)], variantEndpoints: [EndpointVariantType : EndpointVariant], errorType: AWSErrorType.Type?, xmlNamespace: String?, middlewares: [AWSServiceMiddleware], timeout: TimeAmount?, byteBufferAllocator: ByteBufferAllocator, options: Options)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsserviceconfig\/amztarget","title":"let amzTarget: String?","type":"property"},{"path":"\/documentation\/sotocore\/awsserviceconfig\/apiversion","title":"let apiVersion: String","type":"property"},{"path":"\/documentation\/sotocore\/awsserviceconfig\/bytebufferallocator","title":"let byteBufferAllocator: ByteBufferAllocator","type":"property"},{"path":"\/documentation\/sotocore\/awsserviceconfig\/endpoint","title":"let endpoint: String","type":"property"},{"path":"\/documentation\/sotocore\/awsserviceconfig\/errortype","title":"let errorType: AWSErrorType.Type?","type":"property"},{"path":"\/documentation\/sotocore\/awsserviceconfig\/middlewares","title":"let middlewares: [AWSServiceMiddleware]","type":"property"},{"path":"\/documentation\/sotocore\/awsserviceconfig\/options-swift.property","title":"let options: Options","type":"property"},{"path":"\/documentation\/sotocore\/awsserviceconfig\/region","title":"let region: Region","type":"property"},{"path":"\/documentation\/sotocore\/awsserviceconfig\/service","title":"let service: String","type":"property"},{"path":"\/documentation\/sotocore\/awsserviceconfig\/serviceprotocol","title":"let serviceProtocol: ServiceProtocol","type":"property"},{"path":"\/documentation\/sotocore\/awsserviceconfig\/signingname","title":"let signingName: String","type":"property"},{"path":"\/documentation\/sotocore\/awsserviceconfig\/timeout","title":"let timeout: TimeAmount","type":"property"},{"path":"\/documentation\/sotocore\/awsserviceconfig\/xmlnamespace","title":"let xmlNamespace: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsserviceconfig\/with(patch:)","title":"func with(patch: Patch) -> AWSServiceConfig","type":"method"}],"path":"\/documentation\/sotocore\/awsserviceconfig","title":"AWSServiceConfig","type":"class"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/sotocore\/serviceprotocol\/ec2","title":"case ec2","type":"case"},{"path":"\/documentation\/sotocore\/serviceprotocol\/json(version:)","title":"case json(version: String)","type":"case"},{"path":"\/documentation\/sotocore\/serviceprotocol\/query","title":"case query","type":"case"},{"path":"\/documentation\/sotocore\/serviceprotocol\/restjson","title":"case restjson","type":"case"},{"path":"\/documentation\/sotocore\/serviceprotocol\/restxml","title":"case restxml","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/serviceprotocol\/contenttype","title":"var contentType: String","type":"property"}],"path":"\/documentation\/sotocore\/serviceprotocol","title":"ServiceProtocol","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotocore\/region\/init(awsregionname:)","title":"init?(awsRegionName: String)","type":"init"},{"path":"\/documentation\/sotocore\/region\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/region\/partition","title":"var partition: AWSPartition","type":"property"},{"path":"\/documentation\/sotocore\/region\/rawvalue","title":"var rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/region\/afsouth1","title":"static var afsouth1: Region","type":"property"},{"path":"\/documentation\/sotocore\/region\/apeast1","title":"static var apeast1: Region","type":"property"},{"path":"\/documentation\/sotocore\/region\/apnortheast1","title":"static var apnortheast1: Region","type":"property"},{"path":"\/documentation\/sotocore\/region\/apnortheast2","title":"static var apnortheast2: Region","type":"property"},{"path":"\/documentation\/sotocore\/region\/apnortheast3","title":"static var apnortheast3: Region","type":"property"},{"path":"\/documentation\/sotocore\/region\/apsouth1","title":"static var apsouth1: Region","type":"property"},{"path":"\/documentation\/sotocore\/region\/apsouth2","title":"static var apsouth2: Region","type":"property"},{"path":"\/documentation\/sotocore\/region\/apsoutheast1","title":"static var apsoutheast1: Region","type":"property"},{"path":"\/documentation\/sotocore\/region\/apsoutheast2","title":"static var apsoutheast2: Region","type":"property"},{"path":"\/documentation\/sotocore\/region\/apsoutheast3","title":"static var apsoutheast3: Region","type":"property"},{"path":"\/documentation\/sotocore\/region\/cacentral1","title":"static var cacentral1: Region","type":"property"},{"path":"\/documentation\/sotocore\/region\/cnnorth1","title":"static var cnnorth1: Region","type":"property"},{"path":"\/documentation\/sotocore\/region\/cnnorthwest1","title":"static var cnnorthwest1: Region","type":"property"},{"path":"\/documentation\/sotocore\/region\/eucentral1","title":"static var eucentral1: Region","type":"property"},{"path":"\/documentation\/sotocore\/region\/eucentral2","title":"static var eucentral2: Region","type":"property"},{"path":"\/documentation\/sotocore\/region\/eunorth1","title":"static var eunorth1: Region","type":"property"},{"path":"\/documentation\/sotocore\/region\/eusouth1","title":"static var eusouth1: Region","type":"property"},{"path":"\/documentation\/sotocore\/region\/eusouth2","title":"static var eusouth2: Region","type":"property"},{"path":"\/documentation\/sotocore\/region\/euwest1","title":"static var euwest1: Region","type":"property"},{"path":"\/documentation\/sotocore\/region\/euwest2","title":"static var euwest2: Region","type":"property"},{"path":"\/documentation\/sotocore\/region\/euwest3","title":"static var euwest3: Region","type":"property"},{"path":"\/documentation\/sotocore\/region\/mecentral1","title":"static var mecentral1: Region","type":"property"},{"path":"\/documentation\/sotocore\/region\/mesouth1","title":"static var mesouth1: Region","type":"property"},{"path":"\/documentation\/sotocore\/region\/saeast1","title":"static var saeast1: Region","type":"property"},{"path":"\/documentation\/sotocore\/region\/useast1","title":"static var useast1: Region","type":"property"},{"path":"\/documentation\/sotocore\/region\/useast2","title":"static var useast2: Region","type":"property"},{"path":"\/documentation\/sotocore\/region\/usgoveast1","title":"static var usgoveast1: Region","type":"property"},{"path":"\/documentation\/sotocore\/region\/usgovwest1","title":"static var usgovwest1: Region","type":"property"},{"path":"\/documentation\/sotocore\/region\/usisobeast1","title":"static var usisobeast1: Region","type":"property"},{"path":"\/documentation\/sotocore\/region\/usisoeast1","title":"static var usisoeast1: Region","type":"property"},{"path":"\/documentation\/sotocore\/region\/usisowest1","title":"static var usisowest1: Region","type":"property"},{"path":"\/documentation\/sotocore\/region\/uswest1","title":"static var uswest1: Region","type":"property"},{"path":"\/documentation\/sotocore\/region\/uswest2","title":"static var uswest2: Region","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/region\/other(_:)","title":"static func other(String) -> Region","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/region\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/sotocore\/region\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sotocore\/region\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sotocore\/region\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotocore\/region\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/region\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/sotocore\/region\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/sotocore\/region","title":"Region","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awspartition\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awspartition\/dnssuffix","title":"var dnsSuffix: String","type":"property"},{"path":"\/documentation\/sotocore\/awspartition\/rawvalue","title":"var rawValue: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awspartition\/defaultendpoint(region:service:)","title":"func defaultEndpoint(region: Region, service: String) -> String","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awspartition\/aws","title":"static var aws: AWSPartition","type":"property"},{"path":"\/documentation\/sotocore\/awspartition\/awscn","title":"static var awscn: AWSPartition","type":"property"},{"path":"\/documentation\/sotocore\/awspartition\/awsiso","title":"static var awsiso: AWSPartition","type":"property"},{"path":"\/documentation\/sotocore\/awspartition\/awsisob","title":"static var awsisob: AWSPartition","type":"property"},{"path":"\/documentation\/sotocore\/awspartition\/awsusgov","title":"static var awsusgov: AWSPartition","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awspartition\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sotocore\/awspartition\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awspartition\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awspartition\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/sotocore\/awspartition\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/sotocore\/awspartition","title":"AWSPartition","type":"struct"},{"title":"Middleware","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/sotocore\/awsservicemiddleware\/chain(request:context:)-91m9m","title":"func chain(request: AWSRequest, context: AWSMiddlewareContext) throws -> AWSRequest","type":"method"}],"title":"AWSServiceMiddleware Implementations","type":"groupMarker"}],"path":"\/documentation\/sotocore\/awsservicemiddleware\/chain(request:context:)-3p686","title":"func chain(request: AWSRequest, context: AWSMiddlewareContext) throws -> AWSRequest","type":"method"},{"children":[{"children":[{"path":"\/documentation\/sotocore\/awsservicemiddleware\/chain(response:context:)-68a3s","title":"func chain(response: AWSResponse, context: AWSMiddlewareContext) throws -> AWSResponse","type":"method"}],"title":"AWSServiceMiddleware Implementations","type":"groupMarker"}],"path":"\/documentation\/sotocore\/awsservicemiddleware\/chain(response:context:)-1jgpj","title":"func chain(response: AWSResponse, context: AWSMiddlewareContext) throws -> AWSResponse","type":"method"}],"path":"\/documentation\/sotocore\/awsservicemiddleware","title":"AWSServiceMiddleware","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsmiddlewarecontext\/options","title":"let options: AWSServiceConfig.Options","type":"property"}],"path":"\/documentation\/sotocore\/awsmiddlewarecontext","title":"AWSMiddlewareContext","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsloggingmiddleware\/init(log:)","title":"init(log: LoggingFunction)","type":"init"},{"path":"\/documentation\/sotocore\/awsloggingmiddleware\/init(logger:loglevel:)","title":"init(logger: Logger, logLevel: Logger.Level)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsloggingmiddleware\/chain(request:context:)","title":"func chain(request: AWSRequest, context: AWSMiddlewareContext) throws -> AWSRequest","type":"method"},{"path":"\/documentation\/sotocore\/awsloggingmiddleware\/chain(response:context:)","title":"func chain(response: AWSResponse, context: AWSMiddlewareContext) throws -> AWSResponse","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsloggingmiddleware\/loggingfunction","title":"AWSLoggingMiddleware.LoggingFunction","type":"typealias"}],"path":"\/documentation\/sotocore\/awsloggingmiddleware","title":"AWSLoggingMiddleware","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awseditheadersmiddleware\/init(_:)-52wcg","title":"init(HeaderEdit...)","type":"init"},{"path":"\/documentation\/sotocore\/awseditheadersmiddleware\/init(_:)-5oc79","title":"init([HeaderEdit])","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awseditheadersmiddleware\/chain(request:context:)","title":"func chain(request: AWSRequest, context: AWSMiddlewareContext) throws -> AWSRequest","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awseditheadersmiddleware\/headeredit\/add(name:value:)","title":"case add(name: String, value: String)","type":"case"},{"path":"\/documentation\/sotocore\/awseditheadersmiddleware\/headeredit\/remove(name:)","title":"case remove(name: String)","type":"case"},{"path":"\/documentation\/sotocore\/awseditheadersmiddleware\/headeredit\/replace(name:value:)","title":"case replace(name: String, value: String)","type":"case"}],"path":"\/documentation\/sotocore\/awseditheadersmiddleware\/headeredit","title":"AWSEditHeadersMiddleware.HeaderEdit","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awseditheadersmiddleware\/chain(response:context:)","title":"func chain(response: AWSResponse, context: AWSMiddlewareContext) throws -> AWSResponse","type":"method"}],"path":"\/documentation\/sotocore\/awseditheadersmiddleware\/awsservicemiddleware-implementations","title":"AWSServiceMiddleware Implementations","type":"symbol"}],"path":"\/documentation\/sotocore\/awseditheadersmiddleware","title":"AWSEditHeadersMiddleware","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotocore\/s3middleware\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/s3middleware\/chain(request:context:)","title":"func chain(request: AWSRequest, context: AWSMiddlewareContext) throws -> AWSRequest","type":"method"},{"path":"\/documentation\/sotocore\/s3middleware\/chain(response:context:)","title":"func chain(response: AWSResponse, context: AWSMiddlewareContext) throws -> AWSResponse","type":"method"}],"path":"\/documentation\/sotocore\/s3middleware","title":"S3Middleware","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotocore\/treehashmiddleware\/init(header:)","title":"init(header: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/treehashmiddleware\/chain(request:context:)","title":"func chain(request: AWSRequest, context: AWSMiddlewareContext) throws -> AWSRequest","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/treehashmiddleware\/chain(response:context:)","title":"func chain(response: AWSResponse, context: AWSMiddlewareContext) throws -> AWSResponse","type":"method"}],"path":"\/documentation\/sotocore\/treehashmiddleware\/awsservicemiddleware-implementations","title":"AWSServiceMiddleware Implementations","type":"symbol"}],"path":"\/documentation\/sotocore\/treehashmiddleware","title":"TreeHashMiddleware","type":"struct"},{"title":"Request\/Response","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsrequest\/body","title":"var body: Body","type":"property"},{"path":"\/documentation\/sotocore\/awsrequest\/httpheaders","title":"var httpHeaders: HTTPHeaders","type":"property"},{"path":"\/documentation\/sotocore\/awsrequest\/httpmethod","title":"let httpMethod: HTTPMethod","type":"property"},{"path":"\/documentation\/sotocore\/awsrequest\/operation","title":"let operation: String","type":"property"},{"path":"\/documentation\/sotocore\/awsrequest\/region","title":"let region: Region","type":"property"},{"path":"\/documentation\/sotocore\/awsrequest\/serviceprotocol","title":"let serviceProtocol: ServiceProtocol","type":"property"},{"path":"\/documentation\/sotocore\/awsrequest\/url","title":"var url: URL","type":"property"}],"path":"\/documentation\/sotocore\/awsrequest","title":"AWSRequest","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsresponse\/body","title":"var body: Body","type":"property"},{"path":"\/documentation\/sotocore\/awsresponse\/headers","title":"var headers: HTTPHeaders","type":"property"},{"path":"\/documentation\/sotocore\/awsresponse\/status","title":"let status: HTTPResponseStatus","type":"property"}],"path":"\/documentation\/sotocore\/awsresponse","title":"AWSResponse","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/sotocore\/body\/empty","title":"case empty","type":"case"},{"path":"\/documentation\/sotocore\/body\/json(_:)","title":"case json(ByteBuffer)","type":"case"},{"path":"\/documentation\/sotocore\/body\/raw(_:)","title":"case raw(AWSPayload)","type":"case"},{"path":"\/documentation\/sotocore\/body\/text(_:)","title":"case text(String)","type":"case"},{"path":"\/documentation\/sotocore\/body\/xml(_:)","title":"case xml(XML.Element)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/body\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/body\/asbytebuffer(bytebufferallocator:)","title":"func asByteBuffer(byteBufferAllocator: ByteBufferAllocator) -> ByteBuffer?","type":"method"},{"path":"\/documentation\/sotocore\/body\/aspayload(bytebufferallocator:)","title":"func asPayload(byteBufferAllocator: ByteBufferAllocator) -> AWSPayload","type":"method"},{"path":"\/documentation\/sotocore\/body\/asstring()","title":"func asString() -> String?","type":"method"}],"path":"\/documentation\/sotocore\/body","title":"Body","type":"enum"},{"title":"Credentials","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/sotocore\/asynccredentialprovider\/getcredential(on:logger:)-3e46a","title":"func getCredential(on: EventLoop, logger: Logger) -> EventLoopFuture<Credential>","type":"method"}],"title":"AsyncCredentialProvider Implementations","type":"groupMarker"}],"path":"\/documentation\/sotocore\/credentialprovider\/getcredential(on:logger:)-35wr9","title":"func getCredential(on: EventLoop, logger: Logger) -> EventLoopFuture<Credential>","type":"method"},{"children":[{"children":[{"path":"\/documentation\/sotocore\/credentialprovider\/shutdown(on:)-7jism","title":"func shutdown(on: EventLoop) -> EventLoopFuture<Void>","type":"method"}],"title":"CredentialProvider Implementations","type":"groupMarker"}],"path":"\/documentation\/sotocore\/credentialprovider\/shutdown(on:)-52idi","title":"func shutdown(on: EventLoop) -> EventLoopFuture<Void>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/credentialprovider\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/sotocore\/credentialprovider\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/sotocore\/credentialprovider","title":"CredentialProvider","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/sotocore\/asynccredentialprovider\/getcredential(on:logger:)-3e46a","title":"func getCredential(on: EventLoop, logger: Logger) -> EventLoopFuture<Credential>","type":"method"}],"title":"AsyncCredentialProvider Implementations","type":"groupMarker"}],"path":"\/documentation\/sotocore\/asynccredentialprovider\/getcredential(on:logger:)-6gs42","title":"func getCredential(on: EventLoop, logger: Logger) async throws -> Credential","type":"method"}],"path":"\/documentation\/sotocore\/asynccredentialprovider","title":"AsyncCredentialProvider","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotocore\/nullcredentialprovider\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/nullcredentialprovider\/getcredential(on:logger:)","title":"func getCredential(on: EventLoop, logger: Logger) -> EventLoopFuture<Credential>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/nullcredentialprovider\/shutdown(on:)","title":"func shutdown(on: EventLoop) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/sotocore\/nullcredentialprovider\/credentialprovider-implementations","title":"CredentialProvider Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/nullcredentialprovider\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/sotocore\/nullcredentialprovider\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/sotocore\/nullcredentialprovider","title":"NullCredentialProvider","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/expiringcredential\/isexpired","title":"var isExpired: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/expiringcredential\/isexpiring(within:)","title":"func isExpiring(within: TimeInterval) -> Bool","type":"method"}],"path":"\/documentation\/sotocore\/expiringcredential","title":"ExpiringCredential","type":"protocol"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/credentialproviderfactory\/context\/eventloop","title":"let eventLoop: EventLoop","type":"property"},{"path":"\/documentation\/sotocore\/credentialproviderfactory\/context\/httpclient","title":"let httpClient: HTTPClient","type":"property"},{"path":"\/documentation\/sotocore\/credentialproviderfactory\/context\/logger","title":"let logger: Logger","type":"property"},{"path":"\/documentation\/sotocore\/credentialproviderfactory\/context\/options","title":"let options: AWSClient.Options","type":"property"}],"path":"\/documentation\/sotocore\/credentialproviderfactory\/context","title":"CredentialProviderFactory.Context","type":"struct"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/credentialproviderfactory\/default","title":"static var `default`: CredentialProviderFactory","type":"property"},{"path":"\/documentation\/sotocore\/credentialproviderfactory\/ec2","title":"static var ec2: CredentialProviderFactory","type":"property"},{"path":"\/documentation\/sotocore\/credentialproviderfactory\/ecs","title":"static var ecs: CredentialProviderFactory","type":"property"},{"path":"\/documentation\/sotocore\/credentialproviderfactory\/empty","title":"static var empty: CredentialProviderFactory","type":"property"},{"path":"\/documentation\/sotocore\/credentialproviderfactory\/environment","title":"static var environment: CredentialProviderFactory","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/credentialproviderfactory\/configfile(credentialsfilepath:configfilepath:profile:)","title":"static func configFile(credentialsFilePath: String?, configFilePath: String?, profile: String?) -> CredentialProviderFactory","type":"method"},{"path":"\/documentation\/sotocore\/credentialproviderfactory\/custom(_:)","title":"static func custom((Context) -> CredentialProvider) -> CredentialProviderFactory","type":"method"},{"path":"\/documentation\/sotocore\/credentialproviderfactory\/selector(_:)","title":"static func selector(CredentialProviderFactory...) -> CredentialProviderFactory","type":"method"},{"path":"\/documentation\/sotocore\/credentialproviderfactory\/static(accesskeyid:secretaccesskey:sessiontoken:)","title":"static func `static`(accessKeyId: String, secretAccessKey: String, sessionToken: String?) -> CredentialProviderFactory","type":"method"}],"path":"\/documentation\/sotocore\/credentialproviderfactory","title":"CredentialProviderFactory","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotocore\/deferredcredentialprovider\/init(context:provider:)","title":"init(context: CredentialProviderFactory.Context, provider: CredentialProvider)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/deferredcredentialprovider\/getcredential(on:logger:)","title":"func getCredential(on: EventLoop, logger: Logger) -> EventLoopFuture<Credential>","type":"method"},{"path":"\/documentation\/sotocore\/deferredcredentialprovider\/shutdown(on:)","title":"func shutdown(on: EventLoop) -> EventLoopFuture<Void>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/deferredcredentialprovider\/description-26i0g","title":"var description: String","type":"property"},{"path":"\/documentation\/sotocore\/deferredcredentialprovider\/description-7u6mg","title":"var description: String","type":"property"}],"path":"\/documentation\/sotocore\/deferredcredentialprovider\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/sotocore\/deferredcredentialprovider","title":"DeferredCredentialProvider","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotocore\/rotatingcredentialprovider\/init(context:provider:remainingtokenlifetimeforuse:)","title":"init(context: CredentialProviderFactory.Context, provider: CredentialProvider, remainingTokenLifetimeForUse: TimeInterval?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/rotatingcredentialprovider\/provider","title":"let provider: CredentialProvider","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/rotatingcredentialprovider\/getcredential(on:logger:)","title":"func getCredential(on: EventLoop, logger: Logger) -> EventLoopFuture<Credential>","type":"method"},{"path":"\/documentation\/sotocore\/rotatingcredentialprovider\/shutdown(on:)","title":"func shutdown(on: EventLoop) -> EventLoopFuture<Void>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/rotatingcredentialprovider\/description-323ij","title":"var description: String","type":"property"},{"path":"\/documentation\/sotocore\/rotatingcredentialprovider\/description-7l7x3","title":"var description: String","type":"property"}],"path":"\/documentation\/sotocore\/rotatingcredentialprovider\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/sotocore\/rotatingcredentialprovider","title":"RotatingCredentialProvider","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotocore\/rotatingcredential\/init(accesskeyid:secretaccesskey:sessiontoken:expiration:)","title":"init(accessKeyId: String, secretAccessKey: String, sessionToken: String?, expiration: Date)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/rotatingcredential\/accesskeyid","title":"let accessKeyId: String","type":"property"},{"path":"\/documentation\/sotocore\/rotatingcredential\/expiration","title":"let expiration: Date","type":"property"},{"path":"\/documentation\/sotocore\/rotatingcredential\/secretaccesskey","title":"let secretAccessKey: String","type":"property"},{"path":"\/documentation\/sotocore\/rotatingcredential\/sessiontoken","title":"let sessionToken: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/rotatingcredential\/isexpiring(within:)","title":"func isExpiring(within: TimeInterval) -> Bool","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/rotatingcredential\/isexpired","title":"var isExpired: Bool","type":"property"}],"path":"\/documentation\/sotocore\/rotatingcredential\/expiringcredential-implementations","title":"ExpiringCredential Implementations","type":"symbol"}],"path":"\/documentation\/sotocore\/rotatingcredential","title":"RotatingCredential","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/credentialprovidererror\/noprovider","title":"static var noProvider: CredentialProviderError","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/credentialprovidererror\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/sotocore\/credentialprovidererror\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sotocore\/credentialprovidererror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sotocore\/credentialprovidererror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/credentialprovidererror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/sotocore\/credentialprovidererror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/sotocore\/credentialprovidererror","title":"CredentialProviderError","type":"struct"},{"title":"Retry","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/retrypolicy\/getretrywaittime(error:attempt:)","title":"func getRetryWaitTime(error: Error, attempt: Int) -> RetryStatus?","type":"method"}],"path":"\/documentation\/sotocore\/retrypolicy","title":"RetryPolicy","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/retrypolicyfactory\/retrypolicy","title":"let retryPolicy: RetryPolicy","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/retrypolicyfactory\/default","title":"static var `default`: RetryPolicyFactory","type":"property"},{"path":"\/documentation\/sotocore\/retrypolicyfactory\/noretry","title":"static var noRetry: RetryPolicyFactory","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/retrypolicyfactory\/exponential(base:maxretries:)","title":"static func exponential(base: TimeAmount, maxRetries: Int) -> RetryPolicyFactory","type":"method"},{"path":"\/documentation\/sotocore\/retrypolicyfactory\/jitter(base:maxretries:)","title":"static func jitter(base: TimeAmount, maxRetries: Int) -> RetryPolicyFactory","type":"method"}],"path":"\/documentation\/sotocore\/retrypolicyfactory","title":"RetryPolicyFactory","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/sotocore\/retrystatus\/dontretry","title":"case dontRetry","type":"case"},{"path":"\/documentation\/sotocore\/retrystatus\/retry(wait:)","title":"case retry(wait: TimeAmount)","type":"case"}],"path":"\/documentation\/sotocore\/retrystatus","title":"RetryStatus","type":"enum"},{"title":"Endpoints","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsendpoints\/endpoint\/init(address:cacheperiodinminutes:)","title":"init(address: String, cachePeriodInMinutes: Int64)","type":"init"}],"path":"\/documentation\/sotocore\/awsendpoints\/endpoint","title":"AWSEndpoints.Endpoint","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsendpoints\/init(endpoints:)","title":"init(endpoints: [Endpoint])","type":"init"}],"path":"\/documentation\/sotocore\/awsendpoints","title":"AWSEndpoints","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsendpointstorage\/init(endpoint:)","title":"init(endpoint: String)","type":"init"}],"path":"\/documentation\/sotocore\/awsendpointstorage","title":"AWSEndpointStorage","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsendpointdiscovery\/init(storage:discover:required:)","title":"init(storage: AWSEndpointStorage, discover: DiscoverFunction, required: Bool)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsendpointdiscovery\/discoverfunction","title":"AWSEndpointDiscovery.DiscoverFunction","type":"typealias"}],"path":"\/documentation\/sotocore\/awsendpointdiscovery","title":"AWSEndpointDiscovery","type":"struct"},{"title":"Errors","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awserrortype\/init(errorcode:context:)","title":"init?(errorCode: String, context: AWSErrorContext)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awserrortype\/context","title":"var context: AWSErrorContext?","type":"property"},{"path":"\/documentation\/sotocore\/awserrortype\/errorcode","title":"var errorCode: String","type":"property"},{"path":"\/documentation\/sotocore\/awserrortype\/localizeddescription","title":"var localizedDescription: String","type":"property"},{"path":"\/documentation\/sotocore\/awserrortype\/message","title":"var message: String?","type":"property"}],"path":"\/documentation\/sotocore\/awserrortype","title":"AWSErrorType","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awserrorcontext\/additionalfields","title":"let additionalFields: [String : String]","type":"property"},{"path":"\/documentation\/sotocore\/awserrorcontext\/headers","title":"let headers: HTTPHeaders","type":"property"},{"path":"\/documentation\/sotocore\/awserrorcontext\/message","title":"let message: String","type":"property"},{"path":"\/documentation\/sotocore\/awserrorcontext\/responsecode","title":"let responseCode: HTTPResponseStatus","type":"property"}],"path":"\/documentation\/sotocore\/awserrorcontext","title":"AWSErrorContext","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsclienterror\/init(errorcode:context:)","title":"init?(errorCode: String, context: AWSErrorContext)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsclienterror\/context","title":"let context: AWSErrorContext?","type":"property"},{"path":"\/documentation\/sotocore\/awsclienterror\/errorcode","title":"var errorCode: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsclienterror\/accessdenied","title":"static var accessDenied: AWSClientError","type":"property"},{"path":"\/documentation\/sotocore\/awsclienterror\/incompletesignature","title":"static var incompleteSignature: AWSClientError","type":"property"},{"path":"\/documentation\/sotocore\/awsclienterror\/invalidaction","title":"static var invalidAction: AWSClientError","type":"property"},{"path":"\/documentation\/sotocore\/awsclienterror\/invalidclienttokenid","title":"static var invalidClientTokenId: AWSClientError","type":"property"},{"path":"\/documentation\/sotocore\/awsclienterror\/invalidparametercombination","title":"static var invalidParameterCombination: AWSClientError","type":"property"},{"path":"\/documentation\/sotocore\/awsclienterror\/invalidparametervalue","title":"static var invalidParameterValue: AWSClientError","type":"property"},{"path":"\/documentation\/sotocore\/awsclienterror\/invalidqueryparameter","title":"static var invalidQueryParameter: AWSClientError","type":"property"},{"path":"\/documentation\/sotocore\/awsclienterror\/invalidsignature","title":"static var invalidSignature: AWSClientError","type":"property"},{"path":"\/documentation\/sotocore\/awsclienterror\/malformedquerystring","title":"static var malformedQueryString: AWSClientError","type":"property"},{"path":"\/documentation\/sotocore\/awsclienterror\/missingaction","title":"static var missingAction: AWSClientError","type":"property"},{"path":"\/documentation\/sotocore\/awsclienterror\/missingauthenticationtoken","title":"static var missingAuthenticationToken: AWSClientError","type":"property"},{"path":"\/documentation\/sotocore\/awsclienterror\/missingparameter","title":"static var missingParameter: AWSClientError","type":"property"},{"path":"\/documentation\/sotocore\/awsclienterror\/optinrequired","title":"static var optInRequired: AWSClientError","type":"property"},{"path":"\/documentation\/sotocore\/awsclienterror\/requestexpired","title":"static var requestExpired: AWSClientError","type":"property"},{"path":"\/documentation\/sotocore\/awsclienterror\/signaturedoesnotmatch","title":"static var signatureDoesNotMatch: AWSClientError","type":"property"},{"path":"\/documentation\/sotocore\/awsclienterror\/throttling","title":"static var throttling: AWSClientError","type":"property"},{"path":"\/documentation\/sotocore\/awsclienterror\/unrecognizedclient","title":"static var unrecognizedClient: AWSClientError","type":"property"},{"path":"\/documentation\/sotocore\/awsclienterror\/validationerror","title":"static var validationError: AWSClientError","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsclienterror\/localizeddescription-3nmly","title":"var localizedDescription: String","type":"property"},{"path":"\/documentation\/sotocore\/awsclienterror\/message","title":"var message: String?","type":"property"}],"path":"\/documentation\/sotocore\/awsclienterror\/awserrortype-implementations","title":"AWSErrorType Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsclienterror\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/sotocore\/awsclienterror\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsclienterror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/sotocore\/awsclienterror\/==(_:_:)","title":"static func == (AWSClientError, AWSClientError) -> Bool","type":"op"}],"path":"\/documentation\/sotocore\/awsclienterror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsclienterror\/localizeddescription-8mkrl","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/sotocore\/awsclienterror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/sotocore\/awsclienterror","title":"AWSClientError","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsservererror\/init(errorcode:context:)","title":"init?(errorCode: String, context: AWSErrorContext)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsservererror\/context","title":"let context: AWSErrorContext?","type":"property"},{"path":"\/documentation\/sotocore\/awsservererror\/errorcode","title":"var errorCode: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsservererror\/internalfailure","title":"static var internalFailure: AWSServerError","type":"property"},{"path":"\/documentation\/sotocore\/awsservererror\/serviceunavailable","title":"static var serviceUnavailable: AWSServerError","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsservererror\/localizeddescription-70071","title":"var localizedDescription: String","type":"property"},{"path":"\/documentation\/sotocore\/awsservererror\/message","title":"var message: String?","type":"property"}],"path":"\/documentation\/sotocore\/awsservererror\/awserrortype-implementations","title":"AWSErrorType Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsservererror\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/sotocore\/awsservererror\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsservererror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/sotocore\/awsservererror\/==(_:_:)","title":"static func == (AWSServerError, AWSServerError) -> Bool","type":"op"}],"path":"\/documentation\/sotocore\/awsservererror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsservererror\/localizeddescription-96a9h","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/sotocore\/awsservererror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/sotocore\/awsservererror","title":"AWSServerError","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsresponseerror\/init(errorcode:context:)","title":"init(errorCode: String, context: AWSErrorContext)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsresponseerror\/context","title":"let context: AWSErrorContext?","type":"property"},{"path":"\/documentation\/sotocore\/awsresponseerror\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/sotocore\/awsresponseerror\/errorcode","title":"let errorCode: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsresponseerror\/localizeddescription-4qo04","title":"var localizedDescription: String","type":"property"},{"path":"\/documentation\/sotocore\/awsresponseerror\/message","title":"var message: String?","type":"property"}],"path":"\/documentation\/sotocore\/awsresponseerror\/awserrortype-implementations","title":"AWSErrorType Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsresponseerror\/localizeddescription-8q2af","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/sotocore\/awsresponseerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/sotocore\/awsresponseerror","title":"AWSResponseError","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsrawerror\/context","title":"let context: AWSErrorContext","type":"property"},{"path":"\/documentation\/sotocore\/awsrawerror\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/sotocore\/awsrawerror\/rawbody","title":"let rawBody: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsrawerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/sotocore\/awsrawerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/sotocore\/awsrawerror","title":"AWSRawError","type":"struct"},{"title":"API Input\/Outputs","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsshape\/getencoding(for:)","title":"static func getEncoding(for: String) -> AWSMemberEncoding?","type":"method"},{"path":"\/documentation\/sotocore\/awsshape\/idempotencytoken()","title":"static func idempotencyToken() -> String","type":"method"}],"path":"\/documentation\/sotocore\/awsshape","title":"AWSShape","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsencodableshape\/validate()","title":"func validate() throws","type":"method"},{"path":"\/documentation\/sotocore\/awsencodableshape\/validate(_:name:parent:max:)-1a9nu","title":"func validate<T>(T?, name: String, parent: String, max: T) throws","type":"method"},{"path":"\/documentation\/sotocore\/awsencodableshape\/validate(_:name:parent:max:)-1cgvb","title":"func validate<T>(T, name: String, parent: String, max: T) throws","type":"method"},{"path":"\/documentation\/sotocore\/awsencodableshape\/validate(_:name:parent:max:)-2tqtu","title":"func validate(AWSBase64Data?, name: String, parent: String, max: Int) throws","type":"method"},{"path":"\/documentation\/sotocore\/awsencodableshape\/validate(_:name:parent:max:)-34gs9","title":"func validate(AWSBase64Data, name: String, parent: String, max: Int) throws","type":"method"},{"path":"\/documentation\/sotocore\/awsencodableshape\/validate(_:name:parent:max:)-3667w","title":"func validate<T>(T?, name: String, parent: String, max: Int) throws","type":"method"},{"path":"\/documentation\/sotocore\/awsencodableshape\/validate(_:name:parent:max:)-4e818","title":"func validate<T>(T?, name: String, parent: String, max: T) throws","type":"method"},{"path":"\/documentation\/sotocore\/awsencodableshape\/validate(_:name:parent:max:)-5g80j","title":"func validate<T>(T, name: String, parent: String, max: T) throws","type":"method"},{"path":"\/documentation\/sotocore\/awsencodableshape\/validate(_:name:parent:max:)-5t9hn","title":"func validate(AWSPayload?, name: String, parent: String, max: Int) throws","type":"method"},{"path":"\/documentation\/sotocore\/awsencodableshape\/validate(_:name:parent:max:)-93397","title":"func validate<T>(T, name: String, parent: String, max: Int) throws","type":"method"},{"path":"\/documentation\/sotocore\/awsencodableshape\/validate(_:name:parent:max:)-amgs","title":"func validate(AWSPayload, name: String, parent: String, max: Int) throws","type":"method"},{"path":"\/documentation\/sotocore\/awsencodableshape\/validate(_:name:parent:min:)-1xc1z","title":"func validate(AWSBase64Data?, name: String, parent: String, min: Int) throws","type":"method"},{"path":"\/documentation\/sotocore\/awsencodableshape\/validate(_:name:parent:min:)-2lqsz","title":"func validate(AWSBase64Data, name: String, parent: String, min: Int) throws","type":"method"},{"path":"\/documentation\/sotocore\/awsencodableshape\/validate(_:name:parent:min:)-2r8l8","title":"func validate(AWSPayload, name: String, parent: String, min: Int) throws","type":"method"},{"path":"\/documentation\/sotocore\/awsencodableshape\/validate(_:name:parent:min:)-43ft6","title":"func validate<T>(T, name: String, parent: String, min: Int) throws","type":"method"},{"path":"\/documentation\/sotocore\/awsencodableshape\/validate(_:name:parent:min:)-47nbx","title":"func validate<T>(T?, name: String, parent: String, min: T) throws","type":"method"},{"path":"\/documentation\/sotocore\/awsencodableshape\/validate(_:name:parent:min:)-6ntle","title":"func validate<T>(T?, name: String, parent: String, min: Int) throws","type":"method"},{"path":"\/documentation\/sotocore\/awsencodableshape\/validate(_:name:parent:min:)-6x60a","title":"func validate<T>(T, name: String, parent: String, min: T) throws","type":"method"},{"path":"\/documentation\/sotocore\/awsencodableshape\/validate(_:name:parent:min:)-7944f","title":"func validate(AWSPayload?, name: String, parent: String, min: Int) throws","type":"method"},{"path":"\/documentation\/sotocore\/awsencodableshape\/validate(_:name:parent:min:)-7joyg","title":"func validate<T>(T, name: String, parent: String, min: T) throws","type":"method"},{"path":"\/documentation\/sotocore\/awsencodableshape\/validate(_:name:parent:min:)-xfpg","title":"func validate<T>(T?, name: String, parent: String, min: T) throws","type":"method"},{"path":"\/documentation\/sotocore\/awsencodableshape\/validate(_:name:parent:pattern:)-5hepw","title":"func validate(String, name: String, parent: String, pattern: String) throws","type":"method"},{"path":"\/documentation\/sotocore\/awsencodableshape\/validate(_:name:parent:pattern:)-8qcd5","title":"func validate(String?, name: String, parent: String, pattern: String) throws","type":"method"},{"children":[{"children":[{"path":"\/documentation\/sotocore\/awsencodableshape\/validate(name:)-21puj","title":"func validate(name: String) throws","type":"method"}],"title":"AWSEncodableShape Implementations","type":"groupMarker"}],"path":"\/documentation\/sotocore\/awsencodableshape\/validate(name:)-7eqzu","title":"func validate(name: String) throws","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsencodableshape\/validationerror(_:)","title":"static func validationError(String) -> Error","type":"method"}],"path":"\/documentation\/sotocore\/awsencodableshape","title":"AWSEncodableShape","type":"protocol"},{"path":"\/documentation\/sotocore\/awsdecodableshape","title":"AWSDecodableShape","type":"protocol"},{"path":"\/documentation\/sotocore\/awsshapewithpayload","title":"AWSShapeWithPayload","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsshapeoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsshapeoptions\/rawvalue","title":"var rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsshapeoptions\/allowchunkedstreaming","title":"static let allowChunkedStreaming: AWSShapeOptions","type":"property"},{"path":"\/documentation\/sotocore\/awsshapeoptions\/allowstreaming","title":"static let allowStreaming: AWSShapeOptions","type":"property"},{"path":"\/documentation\/sotocore\/awsshapeoptions\/checksumheader","title":"static let checksumHeader: AWSShapeOptions","type":"property"},{"path":"\/documentation\/sotocore\/awsshapeoptions\/checksumrequired","title":"static let checksumRequired: AWSShapeOptions","type":"property"},{"path":"\/documentation\/sotocore\/awsshapeoptions\/md5checksumheader","title":"static let md5ChecksumHeader: AWSShapeOptions","type":"property"},{"path":"\/documentation\/sotocore\/awsshapeoptions\/rawpayload","title":"static let rawPayload: AWSShapeOptions","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsshapeoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sotocore\/awsshapeoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsshapeoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsshapeoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/sotocore\/awsshapeoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/sotocore\/awsshapeoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/sotocore\/awsshapeoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/sotocore\/awsshapeoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/sotocore\/awsshapeoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/sotocore\/awsshapeoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/sotocore\/awsshapeoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/sotocore\/awsshapeoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/sotocore\/awsshapeoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/sotocore\/awsshapeoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsshapeoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/sotocore\/awsshapeoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsshapeoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsshapeoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/sotocore\/awsshapeoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/sotocore\/awsshapeoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/sotocore\/awsshapeoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/sotocore\/awsshapeoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/sotocore\/awsshapeoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/sotocore\/awsshapeoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/sotocore\/awsshapeoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/sotocore\/awsshapeoptions","title":"AWSShapeOptions","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awspayload\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/sotocore\/awspayload\/size","title":"var size: Int?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awspayload\/asbytebuffer()","title":"func asByteBuffer() -> ByteBuffer?","type":"method"},{"path":"\/documentation\/sotocore\/awspayload\/asdata()","title":"func asData() -> Data?","type":"method"},{"path":"\/documentation\/sotocore\/awspayload\/asstring()","title":"func asString() -> String?","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awspayload\/empty","title":"static var empty: `Self`","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awspayload\/asyncsequence(_:size:)","title":"static func asyncSequence<AsyncSeq>(AsyncSeq, size: Int?) -> AWSPayload","type":"method"},{"path":"\/documentation\/sotocore\/awspayload\/bytebuffer(_:)","title":"static func byteBuffer(ByteBuffer) -> AWSPayload","type":"method"},{"path":"\/documentation\/sotocore\/awspayload\/data(_:bytebufferallocator:)","title":"static func data<C>(C, byteBufferAllocator: ByteBufferAllocator) -> AWSPayload","type":"method"},{"path":"\/documentation\/sotocore\/awspayload\/filehandle(_:offset:size:fileio:bytebufferallocator:callback:)","title":"static func fileHandle(NIOFileHandle, offset: Int?, size: Int?, fileIO: NonBlockingFileIO, byteBufferAllocator: ByteBufferAllocator, callback: (Int) throws -> Void) -> AWSPayload","type":"method"},{"path":"\/documentation\/sotocore\/awspayload\/stream(size:stream:)","title":"static func stream(size: Int?, stream: StreamReadFunction) -> AWSPayload","type":"method"},{"path":"\/documentation\/sotocore\/awspayload\/string(_:bytebufferallocator:)","title":"static func string(String, byteBufferAllocator: ByteBufferAllocator) -> AWSPayload","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awspayload\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/sotocore\/awspayload\/decodable-implementations","title":"Decodable Implementations","type":"symbol"}],"path":"\/documentation\/sotocore\/awspayload","title":"AWSPayload","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsbase64data\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsbase64data\/base64count","title":"var base64count: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsbase64data\/decoded()","title":"func decoded() -> [UInt8]?","type":"method"},{"path":"\/documentation\/sotocore\/awsbase64data\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsbase64data\/base64(_:)","title":"static func base64(String) -> AWSBase64Data","type":"method"},{"path":"\/documentation\/sotocore\/awsbase64data\/data(_:)","title":"static func data<C>(C) -> AWSBase64Data","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsbase64data\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sotocore\/awsbase64data\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/sotocore\/awsbase64data","title":"AWSBase64Data","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsmemberencoding\/init(label:location:)","title":"init(label: String, location: Location?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsmemberencoding\/label","title":"let label: String","type":"property"},{"path":"\/documentation\/sotocore\/awsmemberencoding\/location-swift.property","title":"let location: Location?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awsmemberencoding\/location-swift.enum\/body(_:)","title":"case body(String)","type":"case"},{"path":"\/documentation\/sotocore\/awsmemberencoding\/location-swift.enum\/header(_:)","title":"case header(String)","type":"case"},{"path":"\/documentation\/sotocore\/awsmemberencoding\/location-swift.enum\/headerprefix(_:)","title":"case headerPrefix(String)","type":"case"},{"path":"\/documentation\/sotocore\/awsmemberencoding\/location-swift.enum\/hostname(_:)","title":"case hostname(String)","type":"case"},{"path":"\/documentation\/sotocore\/awsmemberencoding\/location-swift.enum\/querystring(_:)","title":"case querystring(String)","type":"case"},{"path":"\/documentation\/sotocore\/awsmemberencoding\/location-swift.enum\/statuscode","title":"case statusCode","type":"case"},{"path":"\/documentation\/sotocore\/awsmemberencoding\/location-swift.enum\/uri(_:)","title":"case uri(String)","type":"case"}],"path":"\/documentation\/sotocore\/awsmemberencoding\/location-swift.enum","title":"AWSMemberEncoding.Location","type":"enum"}],"path":"\/documentation\/sotocore\/awsmemberencoding","title":"AWSMemberEncoding","type":"struct"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awspaginatetoken\/token","title":"Token","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awspaginatetoken\/usingpaginationtoken(_:)","title":"func usingPaginationToken(Token) -> Self","type":"method"}],"path":"\/documentation\/sotocore\/awspaginatetoken","title":"AWSPaginateToken","type":"protocol"},{"title":"Waiters","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awswaitermatcher\/match(result:)","title":"func match(result: Result<Any, Error>) -> Bool","type":"method"}],"path":"\/documentation\/sotocore\/awswaitermatcher","title":"AWSWaiterMatcher","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awserrorcodematcher\/init(_:)","title":"init(String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awserrorcodematcher\/match(result:)","title":"func match(result: Result<Any, Error>) -> Bool","type":"method"}],"path":"\/documentation\/sotocore\/awserrorcodematcher","title":"AWSErrorCodeMatcher","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awserrorstatusmatcher\/init(_:)","title":"init(Int)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awserrorstatusmatcher\/match(result:)","title":"func match(result: Result<Any, Error>) -> Bool","type":"method"}],"path":"\/documentation\/sotocore\/awserrorstatusmatcher","title":"AWSErrorStatusMatcher","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awssuccessmatcher\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/awssuccessmatcher\/match(result:)","title":"func match(result: Result<Any, Error>) -> Bool","type":"method"}],"path":"\/documentation\/sotocore\/awssuccessmatcher","title":"AWSSuccessMatcher","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotocore\/jmespathmatcher\/init(_:expected:)","title":"init(String, expected: Value) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/jmespathmatcher\/match(result:)","title":"func match(result: Result<Any, Error>) -> Bool","type":"method"}],"path":"\/documentation\/sotocore\/jmespathmatcher","title":"JMESPathMatcher","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotocore\/jmesallpathmatcher\/init(_:expected:)","title":"init(String, expected: Value) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/jmesallpathmatcher\/match(result:)","title":"func match(result: Result<Any, Error>) -> Bool","type":"method"}],"path":"\/documentation\/sotocore\/jmesallpathmatcher","title":"JMESAllPathMatcher","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotocore\/jmesanypathmatcher\/init(_:expected:)","title":"init(String, expected: Value) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/jmesanypathmatcher\/match(result:)","title":"func match(result: Result<Any, Error>) -> Bool","type":"method"}],"path":"\/documentation\/sotocore\/jmesanypathmatcher","title":"JMESAnyPathMatcher","type":"struct"},{"title":"Streaming","type":"groupMarker"},{"path":"\/documentation\/sotocore\/streamreadfunction","title":"StreamReadFunction","type":"typealias"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/sotocore\/streamreaderresult\/bytebuffer(_:)","title":"case byteBuffer(ByteBuffer)","type":"case"},{"path":"\/documentation\/sotocore\/streamreaderresult\/end","title":"case end","type":"case"}],"path":"\/documentation\/sotocore\/streamreaderresult","title":"StreamReaderResult","type":"enum"},{"path":"\/documentation\/sotocore\/awsresponsestream","title":"AWSResponseStream","type":"typealias"},{"title":"Encoding\/Decoding","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotocore\/queryencoder\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/queryencoder\/additionalkeys","title":"var additionalKeys: [String : String]","type":"property"},{"path":"\/documentation\/sotocore\/queryencoder\/ec2","title":"var ec2: Bool","type":"property"},{"path":"\/documentation\/sotocore\/queryencoder\/userinfo","title":"var userInfo: [CodingUserInfoKey : Any]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/queryencoder\/encode(_:name:)","title":"func encode<T>(T, name: String?) throws -> String?","type":"method"}],"path":"\/documentation\/sotocore\/queryencoder","title":"QueryEncoder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotocore\/customcoding\/init(wrappedvalue:)","title":"init(wrappedValue: Coder.CodableValue)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/customcoding\/wrappedvalue","title":"var wrappedValue: Coder.CodableValue","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotocore\/customcoding\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/sotocore\/customcoding\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/customcoding\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/sotocore\/customcoding\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/customcoding\/anyvalue","title":"var anyValue: Any","type":"property"}],"path":"\/documentation\/sotocore\/customcoding\/jmespropertywrapper-implementations","title":"JMESPropertyWrapper Implementations","type":"symbol"}],"path":"\/documentation\/sotocore\/customcoding","title":"CustomCoding","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotocore\/optionalcustomcoding\/init(wrappedvalue:)","title":"init(wrappedValue: Coder.CodableValue?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/optionalcustomcoding\/wrappedvalue","title":"var wrappedValue: Coder.CodableValue?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotocore\/optionalcustomcoding\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/sotocore\/optionalcustomcoding\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/optionalcustomcoding\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/sotocore\/optionalcustomcoding\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/optionalcustomcoding\/anyvalue","title":"var anyValue: Any","type":"property"}],"path":"\/documentation\/sotocore\/optionalcustomcoding\/jmespropertywrapper-implementations","title":"JMESPropertyWrapper Implementations","type":"symbol"}],"path":"\/documentation\/sotocore\/optionalcustomcoding","title":"OptionalCustomCoding","type":"struct"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/sotocore\/customcoder\/codablevalue","title":"CodableValue","type":"associatedtype"}],"path":"\/documentation\/sotocore\/customcoder","title":"CustomCoder","type":"protocol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/customdecoder\/decode(from:)","title":"static func decode(from: Decoder) throws -> CodableValue","type":"method"}],"path":"\/documentation\/sotocore\/customdecoder","title":"CustomDecoder","type":"protocol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/customencoder\/encode(value:to:)","title":"static func encode(value: CodableValue, to: Encoder) throws","type":"method"},{"children":[{"children":[{"path":"\/documentation\/sotocore\/customencoder\/string(from:)-9xzoo","title":"static func string(from: CodableValue) -> String?","type":"method"}],"title":"CustomEncoder Implementations","type":"groupMarker"}],"path":"\/documentation\/sotocore\/customencoder\/string(from:)-5sgdp","title":"static func string(from: CodableValue) -> String?","type":"method"}],"path":"\/documentation\/sotocore\/customencoder","title":"CustomEncoder","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/sotocore\/optionalcustomcodingwrapper\/wrappedtype","title":"WrappedType","type":"associatedtype"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotocore\/optionalcustomcodingwrapper\/init(wrappedvalue:)","title":"init(wrappedValue: WrappedType?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/optionalcustomcodingwrapper\/wrappedvalue","title":"var wrappedValue: WrappedType?","type":"property"}],"path":"\/documentation\/sotocore\/optionalcustomcodingwrapper","title":"OptionalCustomCodingWrapper","type":"protocol"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/sotocore\/arraycoder\/codablevalue","title":"ArrayCoder.CodableValue","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/arraycoder\/decode(from:)","title":"static func decode(from: Decoder) throws -> CodableValue","type":"method"}],"path":"\/documentation\/sotocore\/arraycoder\/customdecoder-implementations","title":"CustomDecoder Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/arraycoder\/encode(value:to:)","title":"static func encode(value: CodableValue, to: Encoder) throws","type":"method"},{"path":"\/documentation\/sotocore\/arraycoder\/string(from:)","title":"static func string(from: CodableValue) -> String?","type":"method"}],"path":"\/documentation\/sotocore\/arraycoder\/customencoder-implementations","title":"CustomEncoder Implementations","type":"symbol"}],"path":"\/documentation\/sotocore\/arraycoder","title":"ArrayCoder","type":"struct"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/sotocore\/dictionarycoder\/codablevalue","title":"DictionaryCoder.CodableValue","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/dictionarycoder\/decode(from:)","title":"static func decode(from: Decoder) throws -> CodableValue","type":"method"}],"path":"\/documentation\/sotocore\/dictionarycoder\/customdecoder-implementations","title":"CustomDecoder Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/dictionarycoder\/encode(value:to:)","title":"static func encode(value: CodableValue, to: Encoder) throws","type":"method"},{"path":"\/documentation\/sotocore\/dictionarycoder\/string(from:)","title":"static func string(from: CodableValue) -> String?","type":"method"}],"path":"\/documentation\/sotocore\/dictionarycoder\/customencoder-implementations","title":"CustomEncoder Implementations","type":"symbol"}],"path":"\/documentation\/sotocore\/dictionarycoder","title":"DictionaryCoder","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/arraycoderproperties\/member","title":"static var member: String","type":"property"}],"path":"\/documentation\/sotocore\/arraycoderproperties","title":"ArrayCoderProperties","type":"protocol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/dictionarycoderproperties\/entry","title":"static var entry: String?","type":"property"},{"path":"\/documentation\/sotocore\/dictionarycoderproperties\/key","title":"static var key: String","type":"property"},{"path":"\/documentation\/sotocore\/dictionarycoderproperties\/value","title":"static var value: String","type":"property"}],"path":"\/documentation\/sotocore\/dictionarycoderproperties","title":"DictionaryCoderProperties","type":"protocol"},{"path":"\/documentation\/sotocore\/standardarraycoder","title":"StandardArrayCoder","type":"typealias"},{"path":"\/documentation\/sotocore\/standarddictionarycoder","title":"StandardDictionaryCoder","type":"typealias"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/standardarraycoderproperties\/member","title":"static let member: String","type":"property"}],"path":"\/documentation\/sotocore\/standardarraycoderproperties","title":"StandardArrayCoderProperties","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/standarddictionarycoderproperties\/entry","title":"static let entry: String?","type":"property"},{"path":"\/documentation\/sotocore\/standarddictionarycoderproperties\/key","title":"static let key: String","type":"property"},{"path":"\/documentation\/sotocore\/standarddictionarycoderproperties\/value","title":"static let value: String","type":"property"}],"path":"\/documentation\/sotocore\/standarddictionarycoderproperties","title":"StandardDictionaryCoderProperties","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/iso8601datecoder\/dateformatters","title":"static let dateFormatters: [DateFormatter]","type":"property"},{"path":"\/documentation\/sotocore\/iso8601datecoder\/formats","title":"static let formats: [String]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/iso8601datecoder\/string(from:)","title":"static func string(from: CodableValue) -> String?","type":"method"}],"path":"\/documentation\/sotocore\/iso8601datecoder\/customencoder-implementations","title":"CustomEncoder Implementations","type":"symbol"}],"path":"\/documentation\/sotocore\/iso8601datecoder","title":"ISO8601DateCoder","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/httpheaderdatecoder\/dateformatters","title":"static let dateFormatters: [DateFormatter]","type":"property"},{"path":"\/documentation\/sotocore\/httpheaderdatecoder\/formats","title":"static let formats: [String]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/httpheaderdatecoder\/string(from:)","title":"static func string(from: CodableValue) -> String?","type":"method"}],"path":"\/documentation\/sotocore\/httpheaderdatecoder\/customencoder-implementations","title":"CustomEncoder Implementations","type":"symbol"}],"path":"\/documentation\/sotocore\/httpheaderdatecoder","title":"HTTPHeaderDateCoder","type":"struct"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/sotocore\/unixepochdatecoder\/codablevalue","title":"UnixEpochDateCoder.CodableValue","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/unixepochdatecoder\/decode(from:)","title":"static func decode(from: Decoder) throws -> CodableValue","type":"method"},{"path":"\/documentation\/sotocore\/unixepochdatecoder\/encode(value:to:)","title":"static func encode(value: CodableValue, to: Encoder) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/unixepochdatecoder\/string(from:)","title":"static func string(from: CodableValue) -> String?","type":"method"}],"path":"\/documentation\/sotocore\/unixepochdatecoder\/customencoder-implementations","title":"CustomEncoder Implementations","type":"symbol"}],"path":"\/documentation\/sotocore\/unixepochdatecoder","title":"UnixEpochDateCoder","type":"struct"},{"title":"CRC32","type":"groupMarker"},{"path":"\/documentation\/sotocore\/soto_crc32(_:bytes:)","title":"func soto_crc32<Buffer>(CRC32, bytes: Buffer) -> CRC32","type":"func"},{"path":"\/documentation\/sotocore\/soto_crc32c(_:bytes:)","title":"func soto_crc32c<Buffer>(CRC32, bytes: Buffer) -> CRC32","type":"func"},{"path":"\/documentation\/sotocore\/crc32","title":"CRC32","type":"typealias"},{"title":"Exported (NIOCore)","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/eventloop\/ineventloop","title":"var inEventLoop: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/eventloop\/execute(_:)","title":"func execute(() -> Void)","type":"method"},{"path":"\/documentation\/sotocore\/eventloop\/makesucceededvoidfuture()","title":"func makeSucceededVoidFuture() -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/sotocore\/eventloop\/preconditionineventloop(file:line:)","title":"func preconditionInEventLoop(file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/sotocore\/eventloop\/preconditionnotineventloop(file:line:)","title":"func preconditionNotInEventLoop(file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/sotocore\/eventloop\/scheduletask(deadline:_:)","title":"func scheduleTask<T>(deadline: NIODeadline, () throws -> T) -> Scheduled<T>","type":"method"},{"path":"\/documentation\/sotocore\/eventloop\/scheduletask(in:_:)","title":"func scheduleTask<T>(in: TimeAmount, () throws -> T) -> Scheduled<T>","type":"method"},{"path":"\/documentation\/sotocore\/eventloop\/submit(_:)","title":"func submit<T>(() throws -> T) -> EventLoopFuture<T>","type":"method"}],"path":"\/documentation\/sotocore\/eventloop","title":"EventLoop","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/eventloopgroup\/any()","title":"func any() -> EventLoop","type":"method"},{"path":"\/documentation\/sotocore\/eventloopgroup\/makeiterator()","title":"func makeIterator() -> EventLoopIterator","type":"method"},{"path":"\/documentation\/sotocore\/eventloopgroup\/next()","title":"func next() -> EventLoop","type":"method"},{"path":"\/documentation\/sotocore\/eventloopgroup\/shutdowngracefully(queue:_:)","title":"func shutdownGracefully(queue: DispatchQueue, (Error?) -> Void)","type":"method"}],"path":"\/documentation\/sotocore\/eventloopgroup","title":"EventLoopGroup","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/eventloopfuture\/eventloop","title":"let eventLoop: EventLoop","type":"property"}],"path":"\/documentation\/sotocore\/eventloopfuture","title":"EventLoopFuture","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/bytebuffer\/capacity","title":"var capacity: Int","type":"property"},{"path":"\/documentation\/sotosignerv4\/bytebuffer\/readablebytes","title":"var readableBytes: Int","type":"property"},{"path":"\/documentation\/sotosignerv4\/bytebuffer\/readerindex","title":"var readerIndex: Int","type":"property"},{"path":"\/documentation\/sotosignerv4\/bytebuffer\/storagecapacity","title":"var storageCapacity: Int","type":"property"},{"path":"\/documentation\/sotosignerv4\/bytebuffer\/writablebytes","title":"var writableBytes: Int","type":"property"},{"path":"\/documentation\/sotosignerv4\/bytebuffer\/writerindex","title":"var writerIndex: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/bytebuffer\/clear()","title":"func clear()","type":"method"},{"path":"\/documentation\/sotosignerv4\/bytebuffer\/clear(minimumcapacity:)-12w71","title":"func clear(minimumCapacity: Int)","type":"method"},{"path":"\/documentation\/sotosignerv4\/bytebuffer\/clear(minimumcapacity:)-7qskn","title":"func clear(minimumCapacity: UInt32)","type":"method"},{"path":"\/documentation\/sotosignerv4\/bytebuffer\/discardreadbytes()","title":"func discardReadBytes() -> Bool","type":"method"},{"path":"\/documentation\/sotosignerv4\/bytebuffer\/getslice(at:length:)","title":"func getSlice(at: Int, length: Int) -> ByteBuffer?","type":"method"},{"path":"\/documentation\/sotosignerv4\/bytebuffer\/reservecapacity(_:)","title":"func reserveCapacity(Int)","type":"method"},{"path":"\/documentation\/sotosignerv4\/bytebuffer\/reservecapacity(minimumwritablebytes:)","title":"func reserveCapacity(minimumWritableBytes: Int)","type":"method"},{"path":"\/documentation\/sotosignerv4\/bytebuffer\/withunsafemutablereadablebytes(_:)","title":"func withUnsafeMutableReadableBytes<T>((UnsafeMutableRawBufferPointer) throws -> T) rethrows -> T","type":"method"},{"path":"\/documentation\/sotosignerv4\/bytebuffer\/withunsafemutablewritablebytes(_:)","title":"func withUnsafeMutableWritableBytes<T>((UnsafeMutableRawBufferPointer) throws -> T) rethrows -> T","type":"method"},{"path":"\/documentation\/sotosignerv4\/bytebuffer\/withunsafereadablebytes(_:)","title":"func withUnsafeReadableBytes<T>((UnsafeRawBufferPointer) throws -> T) rethrows -> T","type":"method"},{"path":"\/documentation\/sotosignerv4\/bytebuffer\/withunsafereadablebyteswithstoragemanagement(_:)","title":"func withUnsafeReadableBytesWithStorageManagement<T>((UnsafeRawBufferPointer, Unmanaged<AnyObject>) throws -> T) rethrows -> T","type":"method"},{"path":"\/documentation\/sotosignerv4\/bytebuffer\/withveryunsafebytes(_:)","title":"func withVeryUnsafeBytes<T>((UnsafeRawBufferPointer) throws -> T) rethrows -> T","type":"method"},{"path":"\/documentation\/sotosignerv4\/bytebuffer\/withveryunsafebyteswithstoragemanagement(_:)","title":"func withVeryUnsafeBytesWithStorageManagement<T>((UnsafeRawBufferPointer, Unmanaged<AnyObject>) throws -> T) rethrows -> T","type":"method"},{"path":"\/documentation\/sotosignerv4\/bytebuffer\/withveryunsafemutablebytes(_:)","title":"func withVeryUnsafeMutableBytes<T>((UnsafeMutableRawBufferPointer) throws -> T) rethrows -> T","type":"method"},{"path":"\/documentation\/sotosignerv4\/bytebuffer\/writewithunsafemutablebytes(_:)","title":"func writeWithUnsafeMutableBytes((UnsafeMutableRawBufferPointer) throws -> Int) rethrows -> Int","type":"method"},{"path":"\/documentation\/sotosignerv4\/bytebuffer\/writewithunsafemutablebytes(minimumwritablebytes:_:)","title":"func writeWithUnsafeMutableBytes(minimumWritableBytes: Int, (UnsafeMutableRawBufferPointer) throws -> Int) rethrows -> Int","type":"method"}],"path":"\/documentation\/sotosignerv4\/bytebuffer","title":"ByteBuffer","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/bytebufferallocator\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/bytebufferallocator\/buffer(capacity:)","title":"func buffer(capacity: Int) -> ByteBuffer","type":"method"}],"path":"\/documentation\/sotosignerv4\/bytebufferallocator","title":"ByteBufferAllocator","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/timeamount\/nanoseconds","title":"let nanoseconds: Int64","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/timeamount\/value","title":"TimeAmount.Value","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/timeamount\/hours(_:)","title":"static func hours(Int64) -> TimeAmount","type":"method"},{"path":"\/documentation\/sotosignerv4\/timeamount\/microseconds(_:)","title":"static func microseconds(Int64) -> TimeAmount","type":"method"},{"path":"\/documentation\/sotosignerv4\/timeamount\/milliseconds(_:)","title":"static func milliseconds(Int64) -> TimeAmount","type":"method"},{"path":"\/documentation\/sotosignerv4\/timeamount\/minutes(_:)","title":"static func minutes(Int64) -> TimeAmount","type":"method"},{"path":"\/documentation\/sotosignerv4\/timeamount\/nanoseconds(_:)","title":"static func nanoseconds(Int64) -> TimeAmount","type":"method"},{"path":"\/documentation\/sotosignerv4\/timeamount\/seconds(_:)","title":"static func seconds(Int64) -> TimeAmount","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/timeamount\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sotosignerv4\/timeamount\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/sotosignerv4\/timeamount","title":"TimeAmount","type":"struct"},{"title":"Exported (NIOHTTP1)","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/init(_:)","title":"init([(String, String)])","type":"init"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/init(dictionaryliteral:)","title":"init(dictionaryLiteral: (String, String)...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/capacity","title":"var capacity: Int","type":"property"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/description","title":"var description: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/add(contentsof:)-2wno0","title":"func add(contentsOf: HTTPHeaders)","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/add(contentsof:)-9wsoh","title":"func add<S>(contentsOf: S)","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/add(name:value:)","title":"func add(name: String, value: String)","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/contains(name:)","title":"func contains(name: String) -> Bool","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/first(name:)","title":"func first(name: String) -> String?","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/remove(name:)","title":"func remove(name: String)","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/replaceoradd(name:value:)","title":"func replaceOrAdd(name: String, value: String)","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/reservecapacity(_:)","title":"func reserveCapacity(Int)","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/subscript(_:)-5eqod","title":"subscript(String) -> [String]","type":"subscript"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/subscript(canonicalform:)","title":"subscript(canonicalForm _: String) -> [Substring]","type":"subscript"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/last","title":"var last: Self.Element?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/difference(from:by:)","title":"func difference<C>(from: C, by: (C.Element, Self.Element) -> Bool) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/distance(from:to:)","title":"func distance(from: Self.Index, to: Self.Index) -> Int","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/formindex(before:)","title":"func formIndex(before: inout Self.Index)","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/index(_:offsetby:)","title":"func index(Self.Index, offsetBy: Int) -> Self.Index","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/last(where:)","title":"func last(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/lastindex(where:)","title":"func lastIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/reversed()","title":"func reversed() -> ReversedCollection<Self>","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"}],"path":"\/documentation\/sotosignerv4\/httpheaders\/bidirectionalcollection-implementations","title":"BidirectionalCollection Implementations","type":"symbol"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/index\/_(_:_:)-4lnwa","title":"static func < (HTTPHeaders.Index, HTTPHeaders.Index) -> Bool","type":"op"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/index\/'...(_:)-2agae","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/index\/'...(_:)-8lv69","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/index\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/index\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/index\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/index\/_(_:_:)-3brjl","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/index\/_=(_:_:)-44wqr","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/index\/_=(_:_:)-7jsno","title":"static func >= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sotosignerv4\/httpheaders\/index\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/index\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sotosignerv4\/httpheaders\/index\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/sotosignerv4\/httpheaders\/index","title":"HTTPHeaders.Index","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/endindex","title":"var endIndex: HTTPHeaders.Index","type":"property"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/indices","title":"var indices: DefaultIndices<Self>","type":"property"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/startindex","title":"var startIndex: HTTPHeaders.Index","type":"property"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/underestimatedcount-28ve6","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/formindex(after:)","title":"func formIndex(after: inout Self.Index)","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/makeiterator()","title":"func makeIterator() -> IndexingIterator<Self>","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/map(_:)-5p9kr","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/subscript(_:)-4pb54","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/subscript(_:)-5f2os","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/subscript(_:)-mi1v","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/subscript(_:)-ostv","title":"subscript(HTTPHeaders.Index) -> HTTPHeaders.Element","type":"subscript"}],"path":"\/documentation\/sotosignerv4\/httpheaders\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/==(_:_:)","title":"static func == (HTTPHeaders, HTTPHeaders) -> Bool","type":"op"}],"path":"\/documentation\/sotosignerv4\/httpheaders\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/index(_:offsetby:limitedby:)","title":"func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/index(after:)","title":"func index(after: HTTPHeaders.Index) -> HTTPHeaders.Index","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/index(before:)","title":"func index(before: HTTPHeaders.Index) -> HTTPHeaders.Index","type":"method"}],"path":"\/documentation\/sotosignerv4\/httpheaders\/randomaccesscollection-implementations","title":"RandomAccessCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/underestimatedcount-ru5c","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/filter(_:)","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/flatmap(_:)-1mnen","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/flatmap(_:)-47fez","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/map(_:)-39i2l","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/sorted(using:)-50urc","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/sorted(using:)-98pei","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpheaders\/element","title":"HTTPHeaders.Element","type":"typealias"}],"path":"\/documentation\/sotosignerv4\/httpheaders\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/sotosignerv4\/httpheaders","title":"HTTPHeaders","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpmethod\/acl","title":"case ACL","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpmethod\/bind","title":"case BIND","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpmethod\/checkout","title":"case CHECKOUT","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpmethod\/connect","title":"case CONNECT","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpmethod\/copy","title":"case COPY","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpmethod\/delete","title":"case DELETE","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpmethod\/get","title":"case GET","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpmethod\/head","title":"case HEAD","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpmethod\/link","title":"case LINK","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpmethod\/lock","title":"case LOCK","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpmethod\/merge","title":"case MERGE","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpmethod\/mkactivity","title":"case MKACTIVITY","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpmethod\/mkcalendar","title":"case MKCALENDAR","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpmethod\/mkcol","title":"case MKCOL","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpmethod\/move","title":"case MOVE","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpmethod\/msearch","title":"case MSEARCH","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpmethod\/notify","title":"case NOTIFY","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpmethod\/options","title":"case OPTIONS","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpmethod\/patch","title":"case PATCH","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpmethod\/post","title":"case POST","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpmethod\/propfind","title":"case PROPFIND","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpmethod\/proppatch","title":"case PROPPATCH","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpmethod\/purge","title":"case PURGE","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpmethod\/put","title":"case PUT","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpmethod\/raw(value:)","title":"case RAW(value: String)","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpmethod\/rebind","title":"case REBIND","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpmethod\/report","title":"case REPORT","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpmethod\/search","title":"case SEARCH","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpmethod\/source","title":"case SOURCE","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpmethod\/subscribe","title":"case SUBSCRIBE","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpmethod\/trace","title":"case TRACE","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpmethod\/unbind","title":"case UNBIND","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpmethod\/unlink","title":"case UNLINK","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpmethod\/unlock","title":"case UNLOCK","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpmethod\/unsubscribe","title":"case UNSUBSCRIBE","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpmethod\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sotosignerv4\/httpmethod\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpmethod\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpmethod\/rawvalue","title":"var rawValue: String","type":"property"}],"path":"\/documentation\/sotosignerv4\/httpmethod\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/sotosignerv4\/httpmethod","title":"HTTPMethod","type":"enum"},{"title":"Exported (Logger)","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/logger\/label","title":"let label: String","type":"property"},{"path":"\/documentation\/sotocore\/logger\/metadataprovider","title":"var metadataProvider: Logger.MetadataProvider?","type":"property"}],"path":"\/documentation\/sotocore\/logger","title":"Logger","type":"struct"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/sotocore\/ec2arraycoder\/codablevalue","title":"EC2ArrayCoder.CodableValue","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/ec2arraycoder\/decode(from:)","title":"static func decode(from: Decoder) throws -> CodableValue","type":"method"}],"path":"\/documentation\/sotocore\/ec2arraycoder\/customdecoder-implementations","title":"CustomDecoder Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/ec2arraycoder\/encode(value:to:)","title":"static func encode(value: CodableValue, to: Encoder) throws","type":"method"},{"path":"\/documentation\/sotocore\/ec2arraycoder\/string(from:)","title":"static func string(from: CodableValue) -> String?","type":"method"}],"path":"\/documentation\/sotocore\/ec2arraycoder\/customencoder-implementations","title":"CustomEncoder Implementations","type":"symbol"}],"path":"\/documentation\/sotocore\/ec2arraycoder","title":"EC2ArrayCoder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotocore\/endpointvarianttype\/init(rawvalue:)","title":"init(rawValue: RawValue)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/endpointvarianttype\/rawvalue-swift.property","title":"let rawValue: Int","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/sotocore\/endpointvarianttype\/rawvalue-swift.typealias","title":"EndpointVariantType.RawValue","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/endpointvarianttype\/all","title":"static let all: `Self`","type":"property"},{"path":"\/documentation\/sotocore\/endpointvarianttype\/dualstack","title":"static let dualstack: `Self`","type":"property"},{"path":"\/documentation\/sotocore\/endpointvarianttype\/fips","title":"static let fips: `Self`","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/endpointvarianttype\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/sotocore\/endpointvarianttype\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sotocore\/endpointvarianttype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sotocore\/endpointvarianttype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotocore\/endpointvarianttype\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/endpointvarianttype\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/sotocore\/endpointvarianttype\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/sotocore\/endpointvarianttype\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/sotocore\/endpointvarianttype\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/sotocore\/endpointvarianttype\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/sotocore\/endpointvarianttype\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/sotocore\/endpointvarianttype\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/sotocore\/endpointvarianttype\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/sotocore\/endpointvarianttype\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/sotocore\/endpointvarianttype\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/sotocore\/endpointvarianttype\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/endpointvarianttype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/endpointvarianttype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/sotocore\/endpointvarianttype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotocore\/endpointvarianttype\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/sotocore\/endpointvarianttype\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/endpointvarianttype\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/endpointvarianttype\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/sotocore\/endpointvarianttype\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/sotocore\/endpointvarianttype\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/sotocore\/endpointvarianttype\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/sotocore\/endpointvarianttype\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/sotocore\/endpointvarianttype\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/sotocore\/endpointvarianttype\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/sotocore\/endpointvarianttype\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/sotocore\/endpointvarianttype","title":"EndpointVariantType","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/fixedsizebytebufferasyncsequence\/asynciterator\/next()","title":"func next() async throws -> ByteBuffer?","type":"method"}],"path":"\/documentation\/sotocore\/fixedsizebytebufferasyncsequence\/asynciterator","title":"FixedSizeByteBufferAsyncSequence.AsyncIterator","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotocore\/fixedsizebytebufferasyncsequence\/bytebuffersequence","title":"let byteBufferSequence: Base","type":"property"},{"path":"\/documentation\/sotocore\/fixedsizebytebufferasyncsequence\/chunksize","title":"let chunkSize: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/fixedsizebytebufferasyncsequence\/makeasynciterator()","title":"func makeAsyncIterator() -> AsyncIterator","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/sotocore\/fixedsizebytebufferasyncsequence\/element","title":"FixedSizeByteBufferAsyncSequence.Element","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotocore\/fixedsizebytebufferasyncsequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/sotocore\/fixedsizebytebufferasyncsequence\/collect(upto:)","title":"func collect(upTo: Int) async throws -> ByteBuffer","type":"method"},{"path":"\/documentation\/sotocore\/fixedsizebytebufferasyncsequence\/collect(upto:into:)","title":"func collect(upTo: Int, into: inout ByteBuffer) async throws","type":"method"},{"path":"\/documentation\/sotocore\/fixedsizebytebufferasyncsequence\/compactmap(_:)-7u0jv","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/sotocore\/fixedsizebytebufferasyncsequence\/compactmap(_:)-9nwdp","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/sotocore\/fixedsizebytebufferasyncsequence\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/sotocore\/fixedsizebytebufferasyncsequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/sotocore\/fixedsizebytebufferasyncsequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/sotocore\/fixedsizebytebufferasyncsequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/sotocore\/fixedsizebytebufferasyncsequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/sotocore\/fixedsizebytebufferasyncsequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/sotocore\/fixedsizebytebufferasyncsequence\/fixedsizesequence(chunksize:)","title":"func fixedSizeSequence(chunkSize: Int) -> FixedSizeByteBufferAsyncSequence<Self>","type":"method"},{"path":"\/documentation\/sotocore\/fixedsizebytebufferasyncsequence\/flatmap(_:)-4n2lw","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/sotocore\/fixedsizebytebufferasyncsequence\/flatmap(_:)-75i0m","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/sotocore\/fixedsizebytebufferasyncsequence\/map(_:)-20fc1","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/sotocore\/fixedsizebytebufferasyncsequence\/map(_:)-2y0nl","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/sotocore\/fixedsizebytebufferasyncsequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/sotocore\/fixedsizebytebufferasyncsequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/sotocore\/fixedsizebytebufferasyncsequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/sotocore\/fixedsizebytebufferasyncsequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/sotocore\/fixedsizebytebufferasyncsequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/sotocore\/fixedsizebytebufferasyncsequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"}],"path":"\/documentation\/sotocore\/fixedsizebytebufferasyncsequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/sotocore\/fixedsizebytebufferasyncsequence","title":"FixedSizeByteBufferAsyncSequence","type":"struct"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/sotocore\/ec2standardarraycoder","title":"EC2StandardArrayCoder","type":"typealias"}],"path":"\/documentation\/sotocore","title":"SotoCore","type":"module"},{"children":[{"title":"Signer","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/awssigner\/init(credentials:name:region:)","title":"init(credentials: Credential, name: String, region: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/awssigner\/credentials","title":"let credentials: Credential","type":"property"},{"path":"\/documentation\/sotosignerv4\/awssigner\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/sotosignerv4\/awssigner\/region","title":"let region: String","type":"property"},{"title":"Signing","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/awssigner\/signurl(url:method:headers:body:expires:omitsecuritytoken:date:)","title":"func signURL(url: URL, method: HTTPMethod, headers: HTTPHeaders, body: BodyData?, expires: TimeAmount, omitSecurityToken: Bool, date: Date) -> URL","type":"method"},{"path":"\/documentation\/sotosignerv4\/awssigner\/signheaders(url:method:headers:body:omitsecuritytoken:date:)","title":"func signHeaders(url: URL, method: HTTPMethod, headers: HTTPHeaders, body: BodyData?, omitSecurityToken: Bool, date: Date) -> HTTPHeaders","type":"method"},{"path":"\/documentation\/sotosignerv4\/awssigner\/processurl(url:)","title":"func processURL(url: URL) -> URL?","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/awssigner\/bodydata\/bytebuffer(_:)","title":"case byteBuffer(ByteBuffer)","type":"case"},{"path":"\/documentation\/sotosignerv4\/awssigner\/bodydata\/data(_:)","title":"case data(Data)","type":"case"},{"path":"\/documentation\/sotosignerv4\/awssigner\/bodydata\/s3chunked","title":"case s3chunked","type":"case"},{"path":"\/documentation\/sotosignerv4\/awssigner\/bodydata\/string(_:)","title":"case string(String)","type":"case"},{"path":"\/documentation\/sotosignerv4\/awssigner\/bodydata\/unsignedpayload","title":"case unsignedPayload","type":"case"}],"path":"\/documentation\/sotosignerv4\/awssigner\/bodydata","title":"AWSSigner.BodyData","type":"enum"},{"title":"Signing streamed data","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/awssigner\/startsigningchunks(url:method:headers:date:)","title":"func startSigningChunks(url: URL, method: HTTPMethod, headers: HTTPHeaders, date: Date) -> (headers: HTTPHeaders, signingData: ChunkedSigningData)","type":"method"},{"path":"\/documentation\/sotosignerv4\/awssigner\/signchunk(body:signingdata:)","title":"func signChunk(body: BodyData, signingData: ChunkedSigningData) -> ChunkedSigningData","type":"method"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/awssigner\/chunkedsigningdata\/signature","title":"let signature: String","type":"property"}],"path":"\/documentation\/sotosignerv4\/awssigner\/chunkedsigningdata","title":"AWSSigner.ChunkedSigningData","type":"struct"}],"path":"\/documentation\/sotosignerv4\/awssigner","title":"AWSSigner","type":"struct"},{"title":"Credentials","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/credential\/accesskeyid","title":"var accessKeyId: String","type":"property"},{"path":"\/documentation\/sotosignerv4\/credential\/secretaccesskey","title":"var secretAccessKey: String","type":"property"},{"path":"\/documentation\/sotosignerv4\/credential\/sessiontoken","title":"var sessionToken: String?","type":"property"}],"path":"\/documentation\/sotosignerv4\/credential","title":"Credential","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/staticcredential\/init(accesskeyid:secretaccesskey:sessiontoken:)","title":"init(accessKeyId: String, secretAccessKey: String, sessionToken: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/staticcredential\/accesskeyid","title":"let accessKeyId: String","type":"property"},{"path":"\/documentation\/sotosignerv4\/staticcredential\/secretaccesskey","title":"let secretAccessKey: String","type":"property"},{"path":"\/documentation\/sotosignerv4\/staticcredential\/sessiontoken","title":"let sessionToken: String?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/staticcredential\/fromenvironment()","title":"static func fromEnvironment() -> StaticCredential?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/staticcredential\/getcredential(on:logger:)","title":"func getCredential(on: EventLoop, logger: Logger) -> EventLoopFuture<Credential>","type":"method"},{"path":"\/documentation\/sotosignerv4\/staticcredential\/shutdown(on:)","title":"func shutdown(on: EventLoop) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/sotosignerv4\/staticcredential\/credentialprovider-implementations","title":"CredentialProvider Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/staticcredential\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/sotosignerv4\/staticcredential\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/staticcredential\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sotosignerv4\/staticcredential\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/sotosignerv4\/staticcredential","title":"StaticCredential","type":"struct"},{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpdecoder\/init(leftoverbytesstrategy:)","title":"convenience init(leftOverBytesStrategy: RemoveAfterUpgradeStrategy)","type":"init"},{"path":"\/documentation\/sotosignerv4\/httpdecoder\/init(leftoverbytesstrategy:informationalresponsestrategy:)","title":"init(leftOverBytesStrategy: RemoveAfterUpgradeStrategy, informationalResponseStrategy: NIOInformationalResponseStrategy)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpdecoder\/decode(context:buffer:)","title":"func decode(context: ChannelHandlerContext, buffer: inout ByteBuffer) throws -> DecodingState","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpdecoder\/decodelast(context:buffer:seeneof:)","title":"func decodeLast(context: ChannelHandlerContext, buffer: inout ByteBuffer, seenEOF: Bool) throws -> DecodingState","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpdecoder\/decoderadded(context:)","title":"func decoderAdded(context: ChannelHandlerContext)","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpdecoder\/decoderremoved(context:)","title":"func decoderRemoved(context: ChannelHandlerContext)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpdecoder\/inboundout","title":"HTTPDecoder.InboundOut","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpdecoder\/shouldreclaimbytes(buffer:)","title":"func shouldReclaimBytes(buffer: ByteBuffer) -> Bool","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpdecoder\/wrapinboundout(_:)","title":"func wrapInboundOut(Self.InboundOut) -> NIOAny","type":"method"}],"path":"\/documentation\/sotosignerv4\/httpdecoder\/bytetomessagedecoder-implementations","title":"ByteToMessageDecoder Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpdecoder\/write(data:)","title":"func write(data: HTTPClientRequestPart)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpdecoder\/outboundin","title":"HTTPDecoder.OutboundIn","type":"typealias"}],"path":"\/documentation\/sotosignerv4\/httpdecoder\/writeobservingbytetomessagedecoder-implementations","title":"WriteObservingByteToMessageDecoder Implementations","type":"symbol"}],"path":"\/documentation\/sotosignerv4\/httpdecoder","title":"HTTPDecoder","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httprequestencoder\/configuration\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httprequestencoder\/configuration\/automaticallysetframingheaders","title":"var automaticallySetFramingHeaders: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httprequestencoder\/configuration\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sotosignerv4\/httprequestencoder\/configuration\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/sotosignerv4\/httprequestencoder\/configuration","title":"HTTPRequestEncoder.Configuration","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httprequestencoder\/init()","title":"convenience init()","type":"init"},{"path":"\/documentation\/sotosignerv4\/httprequestencoder\/init(configuration:)","title":"init(configuration: HTTPRequestEncoder.Configuration)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httprequestencoder\/write(context:data:promise:)","title":"func write(context: ChannelHandlerContext, data: NIOAny, promise: EventLoopPromise<Void>?)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httprequestencoder\/outboundin","title":"HTTPRequestEncoder.OutboundIn","type":"typealias"},{"path":"\/documentation\/sotosignerv4\/httprequestencoder\/outboundout","title":"HTTPRequestEncoder.OutboundOut","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httprequestencoder\/handleradded(context:)","title":"func handlerAdded(context: ChannelHandlerContext)","type":"method"},{"path":"\/documentation\/sotosignerv4\/httprequestencoder\/handlerremoved(context:)","title":"func handlerRemoved(context: ChannelHandlerContext)","type":"method"}],"path":"\/documentation\/sotosignerv4\/httprequestencoder\/channelhandler-implementations","title":"ChannelHandler Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httprequestencoder\/unwrapoutboundin(_:)","title":"func unwrapOutboundIn(NIOAny) -> Self.OutboundIn","type":"method"}],"path":"\/documentation\/sotosignerv4\/httprequestencoder\/channeloutboundhandler-implementations","title":"ChannelOutboundHandler Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httprequestencoder\/removehandler(context:removaltoken:)","title":"func removeHandler(context: ChannelHandlerContext, removalToken: ChannelHandlerContext.RemovalToken)","type":"method"}],"path":"\/documentation\/sotosignerv4\/httprequestencoder\/removablechannelhandler-implementations","title":"RemovableChannelHandler Implementations","type":"symbol"}],"path":"\/documentation\/sotosignerv4\/httprequestencoder","title":"HTTPRequestEncoder","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpresponseencoder\/configuration\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpresponseencoder\/configuration\/automaticallysetframingheaders","title":"var automaticallySetFramingHeaders: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpresponseencoder\/configuration\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sotosignerv4\/httpresponseencoder\/configuration\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/sotosignerv4\/httpresponseencoder\/configuration","title":"HTTPResponseEncoder.Configuration","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpresponseencoder\/init()","title":"convenience init()","type":"init"},{"path":"\/documentation\/sotosignerv4\/httpresponseencoder\/init(configuration:)","title":"init(configuration: HTTPResponseEncoder.Configuration)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpresponseencoder\/write(context:data:promise:)","title":"func write(context: ChannelHandlerContext, data: NIOAny, promise: EventLoopPromise<Void>?)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpresponseencoder\/outboundin","title":"HTTPResponseEncoder.OutboundIn","type":"typealias"},{"path":"\/documentation\/sotosignerv4\/httpresponseencoder\/outboundout","title":"HTTPResponseEncoder.OutboundOut","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpresponseencoder\/handleradded(context:)","title":"func handlerAdded(context: ChannelHandlerContext)","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpresponseencoder\/handlerremoved(context:)","title":"func handlerRemoved(context: ChannelHandlerContext)","type":"method"}],"path":"\/documentation\/sotosignerv4\/httpresponseencoder\/channelhandler-implementations","title":"ChannelHandler Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpresponseencoder\/unwrapoutboundin(_:)","title":"func unwrapOutboundIn(NIOAny) -> Self.OutboundIn","type":"method"}],"path":"\/documentation\/sotosignerv4\/httpresponseencoder\/channeloutboundhandler-implementations","title":"ChannelOutboundHandler Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpresponseencoder\/removehandler(context:removaltoken:)","title":"func removeHandler(context: ChannelHandlerContext, removalToken: ChannelHandlerContext.RemovalToken)","type":"method"}],"path":"\/documentation\/sotosignerv4\/httpresponseencoder\/removablechannelhandler-implementations","title":"RemovableChannelHandler Implementations","type":"symbol"}],"path":"\/documentation\/sotosignerv4\/httpresponseencoder","title":"HTTPResponseEncoder","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpserverpipelinehandler\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpserverpipelinehandler\/channelinactive(context:)","title":"func channelInactive(context: ChannelHandlerContext)","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpserverpipelinehandler\/channelread(context:data:)","title":"func channelRead(context: ChannelHandlerContext, data: NIOAny)","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpserverpipelinehandler\/close(context:mode:promise:)","title":"func close(context: ChannelHandlerContext, mode: CloseMode, promise: EventLoopPromise<Void>?)","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpserverpipelinehandler\/errorcaught(context:error:)","title":"func errorCaught(context: ChannelHandlerContext, error: Error)","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpserverpipelinehandler\/handlerremoved(context:)","title":"func handlerRemoved(context: ChannelHandlerContext)","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpserverpipelinehandler\/read(context:)","title":"func read(context: ChannelHandlerContext)","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpserverpipelinehandler\/userinboundeventtriggered(context:event:)","title":"func userInboundEventTriggered(context: ChannelHandlerContext, event: Any)","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpserverpipelinehandler\/write(context:data:promise:)","title":"func write(context: ChannelHandlerContext, data: NIOAny, promise: EventLoopPromise<Void>?)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpserverpipelinehandler\/inboundin","title":"HTTPServerPipelineHandler.InboundIn","type":"typealias"},{"path":"\/documentation\/sotosignerv4\/httpserverpipelinehandler\/inboundout","title":"HTTPServerPipelineHandler.InboundOut","type":"typealias"},{"path":"\/documentation\/sotosignerv4\/httpserverpipelinehandler\/outboundin","title":"HTTPServerPipelineHandler.OutboundIn","type":"typealias"},{"path":"\/documentation\/sotosignerv4\/httpserverpipelinehandler\/outboundout","title":"HTTPServerPipelineHandler.OutboundOut","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpserverpipelinehandler\/handleradded(context:)","title":"func handlerAdded(context: ChannelHandlerContext)","type":"method"}],"path":"\/documentation\/sotosignerv4\/httpserverpipelinehandler\/channelhandler-implementations","title":"ChannelHandler Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpserverpipelinehandler\/unwrapinboundin(_:)","title":"func unwrapInboundIn(NIOAny) -> Self.InboundIn","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpserverpipelinehandler\/wrapinboundout(_:)","title":"func wrapInboundOut(Self.InboundOut) -> NIOAny","type":"method"}],"path":"\/documentation\/sotosignerv4\/httpserverpipelinehandler\/channelinboundhandler-implementations","title":"ChannelInboundHandler Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpserverpipelinehandler\/unwrapoutboundin(_:)","title":"func unwrapOutboundIn(NIOAny) -> Self.OutboundIn","type":"method"}],"path":"\/documentation\/sotosignerv4\/httpserverpipelinehandler\/channeloutboundhandler-implementations","title":"ChannelOutboundHandler Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpserverpipelinehandler\/removehandler(context:removaltoken:)","title":"func removeHandler(context: ChannelHandlerContext, removalToken: ChannelHandlerContext.RemovalToken)","type":"method"}],"path":"\/documentation\/sotosignerv4\/httpserverpipelinehandler\/removablechannelhandler-implementations","title":"RemovableChannelHandler Implementations","type":"symbol"}],"path":"\/documentation\/sotosignerv4\/httpserverpipelinehandler","title":"HTTPServerPipelineHandler","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpserverprotocolerrorhandler\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpserverprotocolerrorhandler\/errorcaught(context:error:)","title":"func errorCaught(context: ChannelHandlerContext, error: Error)","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpserverprotocolerrorhandler\/write(context:data:promise:)","title":"func write(context: ChannelHandlerContext, data: NIOAny, promise: EventLoopPromise<Void>?)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpserverprotocolerrorhandler\/inboundin","title":"HTTPServerProtocolErrorHandler.InboundIn","type":"typealias"},{"path":"\/documentation\/sotosignerv4\/httpserverprotocolerrorhandler\/inboundout","title":"HTTPServerProtocolErrorHandler.InboundOut","type":"typealias"},{"path":"\/documentation\/sotosignerv4\/httpserverprotocolerrorhandler\/outboundin","title":"HTTPServerProtocolErrorHandler.OutboundIn","type":"typealias"},{"path":"\/documentation\/sotosignerv4\/httpserverprotocolerrorhandler\/outboundout","title":"HTTPServerProtocolErrorHandler.OutboundOut","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpserverprotocolerrorhandler\/handleradded(context:)","title":"func handlerAdded(context: ChannelHandlerContext)","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpserverprotocolerrorhandler\/handlerremoved(context:)","title":"func handlerRemoved(context: ChannelHandlerContext)","type":"method"}],"path":"\/documentation\/sotosignerv4\/httpserverprotocolerrorhandler\/channelhandler-implementations","title":"ChannelHandler Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpserverprotocolerrorhandler\/unwrapinboundin(_:)","title":"func unwrapInboundIn(NIOAny) -> Self.InboundIn","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpserverprotocolerrorhandler\/wrapinboundout(_:)","title":"func wrapInboundOut(Self.InboundOut) -> NIOAny","type":"method"}],"path":"\/documentation\/sotosignerv4\/httpserverprotocolerrorhandler\/channelinboundhandler-implementations","title":"ChannelInboundHandler Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpserverprotocolerrorhandler\/unwrapoutboundin(_:)","title":"func unwrapOutboundIn(NIOAny) -> Self.OutboundIn","type":"method"}],"path":"\/documentation\/sotosignerv4\/httpserverprotocolerrorhandler\/channeloutboundhandler-implementations","title":"ChannelOutboundHandler Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpserverprotocolerrorhandler\/removehandler(context:removaltoken:)","title":"func removeHandler(context: ChannelHandlerContext, removalToken: ChannelHandlerContext.RemovalToken)","type":"method"}],"path":"\/documentation\/sotosignerv4\/httpserverprotocolerrorhandler\/removablechannelhandler-implementations","title":"RemovableChannelHandler Implementations","type":"symbol"}],"path":"\/documentation\/sotosignerv4\/httpserverprotocolerrorhandler","title":"HTTPServerProtocolErrorHandler","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpserverupgradehandler\/init(upgraders:httpencoder:extrahttphandlers:upgradecompletionhandler:)","title":"init(upgraders: [HTTPServerProtocolUpgrader], httpEncoder: HTTPResponseEncoder, extraHTTPHandlers: [RemovableChannelHandler], upgradeCompletionHandler: (ChannelHandlerContext) -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpserverupgradehandler\/channelread(context:data:)","title":"func channelRead(context: ChannelHandlerContext, data: NIOAny)","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpserverupgradehandler\/removehandler(context:removaltoken:)","title":"func removeHandler(context: ChannelHandlerContext, removalToken: ChannelHandlerContext.RemovalToken)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpserverupgradehandler\/inboundin","title":"HTTPServerUpgradeHandler.InboundIn","type":"typealias"},{"path":"\/documentation\/sotosignerv4\/httpserverupgradehandler\/inboundout","title":"HTTPServerUpgradeHandler.InboundOut","type":"typealias"},{"path":"\/documentation\/sotosignerv4\/httpserverupgradehandler\/outboundout","title":"HTTPServerUpgradeHandler.OutboundOut","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpserverupgradehandler\/handleradded(context:)","title":"func handlerAdded(context: ChannelHandlerContext)","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpserverupgradehandler\/handlerremoved(context:)","title":"func handlerRemoved(context: ChannelHandlerContext)","type":"method"}],"path":"\/documentation\/sotosignerv4\/httpserverupgradehandler\/channelhandler-implementations","title":"ChannelHandler Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpserverupgradehandler\/unwrapinboundin(_:)","title":"func unwrapInboundIn(NIOAny) -> Self.InboundIn","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpserverupgradehandler\/wrapinboundout(_:)","title":"func wrapInboundOut(Self.InboundOut) -> NIOAny","type":"method"}],"path":"\/documentation\/sotosignerv4\/httpserverupgradehandler\/channelinboundhandler-implementations","title":"ChannelInboundHandler Implementations","type":"symbol"}],"path":"\/documentation\/sotosignerv4\/httpserverupgradehandler","title":"HTTPServerUpgradeHandler","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/niohttpclientresponseaggregator\/init(maxcontentlength:)","title":"init(maxContentLength: Int)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/niohttpclientresponseaggregator\/channelread(context:data:)","title":"func channelRead(context: ChannelHandlerContext, data: NIOAny)","type":"method"},{"path":"\/documentation\/sotosignerv4\/niohttpclientresponseaggregator\/handleradded(context:)","title":"func handlerAdded(context: ChannelHandlerContext)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/niohttpclientresponseaggregator\/inboundin","title":"NIOHTTPClientResponseAggregator.InboundIn","type":"typealias"},{"path":"\/documentation\/sotosignerv4\/niohttpclientresponseaggregator\/inboundout","title":"NIOHTTPClientResponseAggregator.InboundOut","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/niohttpclientresponseaggregator\/handlerremoved(context:)","title":"func handlerRemoved(context: ChannelHandlerContext)","type":"method"}],"path":"\/documentation\/sotosignerv4\/niohttpclientresponseaggregator\/channelhandler-implementations","title":"ChannelHandler Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/niohttpclientresponseaggregator\/unwrapinboundin(_:)","title":"func unwrapInboundIn(NIOAny) -> Self.InboundIn","type":"method"},{"path":"\/documentation\/sotosignerv4\/niohttpclientresponseaggregator\/wrapinboundout(_:)","title":"func wrapInboundOut(Self.InboundOut) -> NIOAny","type":"method"}],"path":"\/documentation\/sotosignerv4\/niohttpclientresponseaggregator\/channelinboundhandler-implementations","title":"ChannelInboundHandler Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/niohttpclientresponseaggregator\/removehandler(context:removaltoken:)","title":"func removeHandler(context: ChannelHandlerContext, removalToken: ChannelHandlerContext.RemovalToken)","type":"method"}],"path":"\/documentation\/sotosignerv4\/niohttpclientresponseaggregator\/removablechannelhandler-implementations","title":"RemovableChannelHandler Implementations","type":"symbol"}],"path":"\/documentation\/sotosignerv4\/niohttpclientresponseaggregator","title":"NIOHTTPClientResponseAggregator","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/niohttpclientupgradehandler\/init(upgraders:httphandlers:upgradecompletionhandler:)","title":"convenience init(upgraders: [NIOHTTPClientProtocolUpgrader], httpHandlers: [RemovableChannelHandler], upgradeCompletionHandler: (ChannelHandlerContext) -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/niohttpclientupgradehandler\/channelread(context:data:)","title":"func channelRead(context: ChannelHandlerContext, data: NIOAny)","type":"method"},{"path":"\/documentation\/sotosignerv4\/niohttpclientupgradehandler\/write(context:data:promise:)","title":"func write(context: ChannelHandlerContext, data: NIOAny, promise: EventLoopPromise<Void>?)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/niohttpclientupgradehandler\/inboundin","title":"NIOHTTPClientUpgradeHandler.InboundIn","type":"typealias"},{"path":"\/documentation\/sotosignerv4\/niohttpclientupgradehandler\/inboundout","title":"NIOHTTPClientUpgradeHandler.InboundOut","type":"typealias"},{"path":"\/documentation\/sotosignerv4\/niohttpclientupgradehandler\/outboundin","title":"NIOHTTPClientUpgradeHandler.OutboundIn","type":"typealias"},{"path":"\/documentation\/sotosignerv4\/niohttpclientupgradehandler\/outboundout","title":"NIOHTTPClientUpgradeHandler.OutboundOut","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/niohttpclientupgradehandler\/handleradded(context:)","title":"func handlerAdded(context: ChannelHandlerContext)","type":"method"},{"path":"\/documentation\/sotosignerv4\/niohttpclientupgradehandler\/handlerremoved(context:)","title":"func handlerRemoved(context: ChannelHandlerContext)","type":"method"}],"path":"\/documentation\/sotosignerv4\/niohttpclientupgradehandler\/channelhandler-implementations","title":"ChannelHandler Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/niohttpclientupgradehandler\/unwrapinboundin(_:)","title":"func unwrapInboundIn(NIOAny) -> Self.InboundIn","type":"method"},{"path":"\/documentation\/sotosignerv4\/niohttpclientupgradehandler\/wrapinboundout(_:)","title":"func wrapInboundOut(Self.InboundOut) -> NIOAny","type":"method"}],"path":"\/documentation\/sotosignerv4\/niohttpclientupgradehandler\/channelinboundhandler-implementations","title":"ChannelInboundHandler Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/niohttpclientupgradehandler\/unwrapoutboundin(_:)","title":"func unwrapOutboundIn(NIOAny) -> Self.OutboundIn","type":"method"}],"path":"\/documentation\/sotosignerv4\/niohttpclientupgradehandler\/channeloutboundhandler-implementations","title":"ChannelOutboundHandler Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/niohttpclientupgradehandler\/removehandler(context:removaltoken:)","title":"func removeHandler(context: ChannelHandlerContext, removalToken: ChannelHandlerContext.RemovalToken)","type":"method"}],"path":"\/documentation\/sotosignerv4\/niohttpclientupgradehandler\/removablechannelhandler-implementations","title":"RemovableChannelHandler Implementations","type":"symbol"}],"path":"\/documentation\/sotosignerv4\/niohttpclientupgradehandler","title":"NIOHTTPClientUpgradeHandler","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/niohttprequestheadersvalidator\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/niohttprequestheadersvalidator\/write(context:data:promise:)","title":"func write(context: ChannelHandlerContext, data: NIOAny, promise: EventLoopPromise<Void>?)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/niohttprequestheadersvalidator\/outboundin","title":"NIOHTTPRequestHeadersValidator.OutboundIn","type":"typealias"},{"path":"\/documentation\/sotosignerv4\/niohttprequestheadersvalidator\/outboundout","title":"NIOHTTPRequestHeadersValidator.OutboundOut","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/niohttprequestheadersvalidator\/handleradded(context:)","title":"func handlerAdded(context: ChannelHandlerContext)","type":"method"},{"path":"\/documentation\/sotosignerv4\/niohttprequestheadersvalidator\/handlerremoved(context:)","title":"func handlerRemoved(context: ChannelHandlerContext)","type":"method"}],"path":"\/documentation\/sotosignerv4\/niohttprequestheadersvalidator\/channelhandler-implementations","title":"ChannelHandler Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/niohttprequestheadersvalidator\/unwrapoutboundin(_:)","title":"func unwrapOutboundIn(NIOAny) -> Self.OutboundIn","type":"method"}],"path":"\/documentation\/sotosignerv4\/niohttprequestheadersvalidator\/channeloutboundhandler-implementations","title":"ChannelOutboundHandler Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/niohttprequestheadersvalidator\/removehandler(context:removaltoken:)","title":"func removeHandler(context: ChannelHandlerContext, removalToken: ChannelHandlerContext.RemovalToken)","type":"method"}],"path":"\/documentation\/sotosignerv4\/niohttprequestheadersvalidator\/removablechannelhandler-implementations","title":"RemovableChannelHandler Implementations","type":"symbol"}],"path":"\/documentation\/sotosignerv4\/niohttprequestheadersvalidator","title":"NIOHTTPRequestHeadersValidator","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/niohttpresponseheadersvalidator\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/niohttpresponseheadersvalidator\/write(context:data:promise:)","title":"func write(context: ChannelHandlerContext, data: NIOAny, promise: EventLoopPromise<Void>?)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/niohttpresponseheadersvalidator\/outboundin","title":"NIOHTTPResponseHeadersValidator.OutboundIn","type":"typealias"},{"path":"\/documentation\/sotosignerv4\/niohttpresponseheadersvalidator\/outboundout","title":"NIOHTTPResponseHeadersValidator.OutboundOut","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/niohttpresponseheadersvalidator\/handleradded(context:)","title":"func handlerAdded(context: ChannelHandlerContext)","type":"method"},{"path":"\/documentation\/sotosignerv4\/niohttpresponseheadersvalidator\/handlerremoved(context:)","title":"func handlerRemoved(context: ChannelHandlerContext)","type":"method"}],"path":"\/documentation\/sotosignerv4\/niohttpresponseheadersvalidator\/channelhandler-implementations","title":"ChannelHandler Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/niohttpresponseheadersvalidator\/unwrapoutboundin(_:)","title":"func unwrapOutboundIn(NIOAny) -> Self.OutboundIn","type":"method"}],"path":"\/documentation\/sotosignerv4\/niohttpresponseheadersvalidator\/channeloutboundhandler-implementations","title":"ChannelOutboundHandler Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/niohttpresponseheadersvalidator\/removehandler(context:removaltoken:)","title":"func removeHandler(context: ChannelHandlerContext, removalToken: ChannelHandlerContext.RemovalToken)","type":"method"}],"path":"\/documentation\/sotosignerv4\/niohttpresponseheadersvalidator\/removablechannelhandler-implementations","title":"RemovableChannelHandler Implementations","type":"symbol"}],"path":"\/documentation\/sotosignerv4\/niohttpresponseheadersvalidator","title":"NIOHTTPResponseHeadersValidator","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/niohttpserverrequestaggregator\/init(maxcontentlength:closeonexpectationfailed:)","title":"init(maxContentLength: Int, closeOnExpectationFailed: Bool)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/niohttpserverrequestaggregator\/channelread(context:data:)","title":"func channelRead(context: ChannelHandlerContext, data: NIOAny)","type":"method"},{"path":"\/documentation\/sotosignerv4\/niohttpserverrequestaggregator\/handleradded(context:)","title":"func handlerAdded(context: ChannelHandlerContext)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/niohttpserverrequestaggregator\/inboundin","title":"NIOHTTPServerRequestAggregator.InboundIn","type":"typealias"},{"path":"\/documentation\/sotosignerv4\/niohttpserverrequestaggregator\/inboundout","title":"NIOHTTPServerRequestAggregator.InboundOut","type":"typealias"},{"path":"\/documentation\/sotosignerv4\/niohttpserverrequestaggregator\/outboundout","title":"NIOHTTPServerRequestAggregator.OutboundOut","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/niohttpserverrequestaggregator\/handlerremoved(context:)","title":"func handlerRemoved(context: ChannelHandlerContext)","type":"method"}],"path":"\/documentation\/sotosignerv4\/niohttpserverrequestaggregator\/channelhandler-implementations","title":"ChannelHandler Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/niohttpserverrequestaggregator\/unwrapinboundin(_:)","title":"func unwrapInboundIn(NIOAny) -> Self.InboundIn","type":"method"},{"path":"\/documentation\/sotosignerv4\/niohttpserverrequestaggregator\/wrapinboundout(_:)","title":"func wrapInboundOut(Self.InboundOut) -> NIOAny","type":"method"}],"path":"\/documentation\/sotosignerv4\/niohttpserverrequestaggregator\/channelinboundhandler-implementations","title":"ChannelInboundHandler Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/niohttpserverrequestaggregator\/removehandler(context:removaltoken:)","title":"func removeHandler(context: ChannelHandlerContext, removalToken: ChannelHandlerContext.RemovalToken)","type":"method"}],"path":"\/documentation\/sotosignerv4\/niohttpserverrequestaggregator\/removablechannelhandler-implementations","title":"RemovableChannelHandler Implementations","type":"symbol"}],"path":"\/documentation\/sotosignerv4\/niohttpserverrequestaggregator","title":"NIOHTTPServerRequestAggregator","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpserverprotocolupgrader\/requiredupgradeheaders","title":"var requiredUpgradeHeaders: [String]","type":"property"},{"path":"\/documentation\/sotosignerv4\/httpserverprotocolupgrader\/supportedprotocol","title":"var supportedProtocol: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpserverprotocolupgrader\/buildupgraderesponse(channel:upgraderequest:initialresponseheaders:)","title":"func buildUpgradeResponse(channel: Channel, upgradeRequest: HTTPRequestHead, initialResponseHeaders: HTTPHeaders) -> EventLoopFuture<HTTPHeaders>","type":"method"},{"path":"\/documentation\/sotosignerv4\/httpserverprotocolupgrader\/upgrade(context:upgraderequest:)","title":"func upgrade(context: ChannelHandlerContext, upgradeRequest: HTTPRequestHead) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/sotosignerv4\/httpserverprotocolupgrader","title":"HTTPServerProtocolUpgrader","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/niohttpclientprotocolupgrader\/requiredupgradeheaders","title":"var requiredUpgradeHeaders: [String]","type":"property"},{"path":"\/documentation\/sotosignerv4\/niohttpclientprotocolupgrader\/supportedprotocol","title":"var supportedProtocol: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/niohttpclientprotocolupgrader\/addcustom(upgraderequestheaders:)","title":"func addCustom(upgradeRequestHeaders: inout HTTPHeaders)","type":"method"},{"path":"\/documentation\/sotosignerv4\/niohttpclientprotocolupgrader\/shouldallowupgrade(upgraderesponse:)","title":"func shouldAllowUpgrade(upgradeResponse: HTTPResponseHead) -> Bool","type":"method"},{"path":"\/documentation\/sotosignerv4\/niohttpclientprotocolupgrader\/upgrade(context:upgraderesponse:)","title":"func upgrade(context: ChannelHandlerContext, upgradeResponse: HTTPResponseHead) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/sotosignerv4\/niohttpclientprotocolupgrader","title":"NIOHTTPClientProtocolUpgrader","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httprequesthead\/==(_:_:)","title":"static func == (HTTPRequestHead, HTTPRequestHead) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httprequesthead\/init(version:method:uri:)","title":"init(version: HTTPVersion, method: HTTPMethod, uri: String)","type":"init"},{"path":"\/documentation\/sotosignerv4\/httprequesthead\/init(version:method:uri:headers:)","title":"init(version: HTTPVersion, method: HTTPMethod, uri: String, headers: HTTPHeaders)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httprequesthead\/headers","title":"var headers: HTTPHeaders","type":"property"},{"path":"\/documentation\/sotosignerv4\/httprequesthead\/iskeepalive","title":"var isKeepAlive: Bool","type":"property"},{"path":"\/documentation\/sotosignerv4\/httprequesthead\/method","title":"var method: HTTPMethod","type":"property"},{"path":"\/documentation\/sotosignerv4\/httprequesthead\/uri","title":"var uri: String","type":"property"},{"path":"\/documentation\/sotosignerv4\/httprequesthead\/version","title":"var version: HTTPVersion","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httprequesthead\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/sotosignerv4\/httprequesthead\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httprequesthead\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sotosignerv4\/httprequesthead\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/sotosignerv4\/httprequesthead","title":"HTTPRequestHead","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpresponsehead\/==(_:_:)","title":"static func == (HTTPResponseHead, HTTPResponseHead) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpresponsehead\/init(version:status:headers:)","title":"init(version: HTTPVersion, status: HTTPResponseStatus, headers: HTTPHeaders)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpresponsehead\/headers","title":"var headers: HTTPHeaders","type":"property"},{"path":"\/documentation\/sotosignerv4\/httpresponsehead\/iskeepalive","title":"var isKeepAlive: Bool","type":"property"},{"path":"\/documentation\/sotosignerv4\/httpresponsehead\/status","title":"var status: HTTPResponseStatus","type":"property"},{"path":"\/documentation\/sotosignerv4\/httpresponsehead\/version","title":"var version: HTTPVersion","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpresponsehead\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/sotosignerv4\/httpresponsehead\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpresponsehead\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sotosignerv4\/httpresponsehead\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/sotosignerv4\/httpresponsehead","title":"HTTPResponseHead","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpversion\/init(major:minor:)","title":"init(major: Int, minor: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpversion\/major","title":"var major: Int","type":"property"},{"path":"\/documentation\/sotosignerv4\/httpversion\/minor","title":"var minor: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpversion\/http0_9","title":"static let http0_9: HTTPVersion","type":"property"},{"path":"\/documentation\/sotosignerv4\/httpversion\/http1_0","title":"static let http1_0: HTTPVersion","type":"property"},{"path":"\/documentation\/sotosignerv4\/httpversion\/http1_1","title":"static let http1_1: HTTPVersion","type":"property"},{"path":"\/documentation\/sotosignerv4\/httpversion\/http2","title":"static let http2: HTTPVersion","type":"property"},{"path":"\/documentation\/sotosignerv4\/httpversion\/http3","title":"static let http3: HTTPVersion","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpversion\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/sotosignerv4\/httpversion\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpversion\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sotosignerv4\/httpversion\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/sotosignerv4\/httpversion","title":"HTTPVersion","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/niohttpclientresponsefull\/init(head:body:)","title":"init(head: HTTPResponseHead, body: ByteBuffer?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/niohttpclientresponsefull\/body","title":"var body: ByteBuffer?","type":"property"},{"path":"\/documentation\/sotosignerv4\/niohttpclientresponsefull\/head","title":"var head: HTTPResponseHead","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/niohttpclientresponsefull\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sotosignerv4\/niohttpclientresponsefull\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/sotosignerv4\/niohttpclientresponsefull","title":"NIOHTTPClientResponseFull","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/niohttpclientupgradeerror\/invalidhttpordering","title":"static let invalidHTTPOrdering: NIOHTTPClientUpgradeError","type":"property"},{"path":"\/documentation\/sotosignerv4\/niohttpclientupgradeerror\/receivedresponseafterupgradecompleted","title":"static let receivedResponseAfterUpgradeCompleted: NIOHTTPClientUpgradeError","type":"property"},{"path":"\/documentation\/sotosignerv4\/niohttpclientupgradeerror\/receivedresponsebeforerequestsent","title":"static let receivedResponseBeforeRequestSent: NIOHTTPClientUpgradeError","type":"property"},{"path":"\/documentation\/sotosignerv4\/niohttpclientupgradeerror\/responseprotocolnotfound","title":"static let responseProtocolNotFound: NIOHTTPClientUpgradeError","type":"property"},{"path":"\/documentation\/sotosignerv4\/niohttpclientupgradeerror\/upgraderdeniedupgrade","title":"static let upgraderDeniedUpgrade: NIOHTTPClientUpgradeError","type":"property"},{"path":"\/documentation\/sotosignerv4\/niohttpclientupgradeerror\/writingtohandlerafterupgradecompleted","title":"static let writingToHandlerAfterUpgradeCompleted: NIOHTTPClientUpgradeError","type":"property"},{"path":"\/documentation\/sotosignerv4\/niohttpclientupgradeerror\/writingtohandlerafterupgradefailed","title":"static let writingToHandlerAfterUpgradeFailed: NIOHTTPClientUpgradeError","type":"property"},{"path":"\/documentation\/sotosignerv4\/niohttpclientupgradeerror\/writingtohandlerduringupgrade","title":"static let writingToHandlerDuringUpgrade: NIOHTTPClientUpgradeError","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/niohttpclientupgradeerror\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/sotosignerv4\/niohttpclientupgradeerror\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/niohttpclientupgradeerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sotosignerv4\/niohttpclientupgradeerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/niohttpclientupgradeerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/sotosignerv4\/niohttpclientupgradeerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/sotosignerv4\/niohttpclientupgradeerror","title":"NIOHTTPClientUpgradeError","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/niohttpdecodererror\/unsolicitedresponse","title":"static let unsolicitedResponse: NIOHTTPDecoderError","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/niohttpdecodererror\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/sotosignerv4\/niohttpdecodererror\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/niohttpdecodererror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sotosignerv4\/niohttpdecodererror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/niohttpdecodererror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/sotosignerv4\/niohttpdecodererror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/sotosignerv4\/niohttpdecodererror","title":"NIOHTTPDecoderError","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/niohttpobjectaggregatorerror\/connectionclosed","title":"static let connectionClosed: NIOHTTPObjectAggregatorError","type":"property"},{"path":"\/documentation\/sotosignerv4\/niohttpobjectaggregatorerror\/endingignoredmessage","title":"static let endingIgnoredMessage: NIOHTTPObjectAggregatorError","type":"property"},{"path":"\/documentation\/sotosignerv4\/niohttpobjectaggregatorerror\/frametoolong","title":"static let frameTooLong: NIOHTTPObjectAggregatorError","type":"property"},{"path":"\/documentation\/sotosignerv4\/niohttpobjectaggregatorerror\/unexpectedmessagebody","title":"static let unexpectedMessageBody: NIOHTTPObjectAggregatorError","type":"property"},{"path":"\/documentation\/sotosignerv4\/niohttpobjectaggregatorerror\/unexpectedmessageend","title":"static let unexpectedMessageEnd: NIOHTTPObjectAggregatorError","type":"property"},{"path":"\/documentation\/sotosignerv4\/niohttpobjectaggregatorerror\/unexpectedmessagehead","title":"static let unexpectedMessageHead: NIOHTTPObjectAggregatorError","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/niohttpobjectaggregatorerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sotosignerv4\/niohttpobjectaggregatorerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/niohttpobjectaggregatorerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/sotosignerv4\/niohttpobjectaggregatorerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/sotosignerv4\/niohttpobjectaggregatorerror","title":"NIOHTTPObjectAggregatorError","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/niohttpobjectaggregatorevent\/httpexpectationfailed","title":"static let httpExpectationFailed: NIOHTTPObjectAggregatorEvent","type":"property"},{"path":"\/documentation\/sotosignerv4\/niohttpobjectaggregatorevent\/httpframetoolong","title":"static let httpFrameTooLong: NIOHTTPObjectAggregatorEvent","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/niohttpobjectaggregatorevent\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sotosignerv4\/niohttpobjectaggregatorevent\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/sotosignerv4\/niohttpobjectaggregatorevent","title":"NIOHTTPObjectAggregatorEvent","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/niohttpserverrequestfull\/init(head:body:)","title":"init(head: HTTPRequestHead, body: ByteBuffer?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/niohttpserverrequestfull\/body","title":"var body: ByteBuffer?","type":"property"},{"path":"\/documentation\/sotosignerv4\/niohttpserverrequestfull\/head","title":"var head: HTTPRequestHead","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/niohttpserverrequestfull\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sotosignerv4\/niohttpserverrequestfull\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/sotosignerv4\/niohttpserverrequestfull","title":"NIOHTTPServerRequestFull","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/nioinformationalresponsestrategy\/drop","title":"static let drop: NIOInformationalResponseStrategy","type":"property"},{"path":"\/documentation\/sotosignerv4\/nioinformationalresponsestrategy\/forward","title":"static let forward: NIOInformationalResponseStrategy","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/nioinformationalresponsestrategy\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sotosignerv4\/nioinformationalresponsestrategy\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/sotosignerv4\/nioinformationalresponsestrategy","title":"NIOInformationalResponseStrategy","type":"struct"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpclientrequestpart","title":"HTTPClientRequestPart","type":"typealias"},{"path":"\/documentation\/sotosignerv4\/httpclientresponsepart","title":"HTTPClientResponsePart","type":"typealias"},{"path":"\/documentation\/sotosignerv4\/httprequestdecoder","title":"HTTPRequestDecoder","type":"typealias"},{"path":"\/documentation\/sotosignerv4\/httpresponsedecoder","title":"HTTPResponseDecoder","type":"typealias"},{"path":"\/documentation\/sotosignerv4\/httpserverrequestpart","title":"HTTPServerRequestPart","type":"typealias"},{"path":"\/documentation\/sotosignerv4\/httpserverresponsepart","title":"HTTPServerResponsePart","type":"typealias"},{"path":"\/documentation\/sotosignerv4\/httpupgradeconfiguration","title":"HTTPUpgradeConfiguration","type":"typealias"},{"path":"\/documentation\/sotosignerv4\/niohttpclientupgradeconfiguration","title":"NIOHTTPClientUpgradeConfiguration","type":"typealias"},{"path":"\/documentation\/sotosignerv4\/niohttpserverupgradeconfiguration","title":"NIOHTTPServerUpgradeConfiguration","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpdecoderkind\/request","title":"case request","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpdecoderkind\/response","title":"case response","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpdecoderkind\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sotosignerv4\/httpdecoderkind\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/sotosignerv4\/httpdecoderkind","title":"HTTPDecoderKind","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpparsererror\/closedconnection","title":"case closedConnection","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpparsererror\/headeroverflow","title":"case headerOverflow","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpparsererror\/invalidcharactersused","title":"case invalidCharactersUsed","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpparsererror\/invalidchunksize","title":"case invalidChunkSize","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpparsererror\/invalidconstant","title":"case invalidConstant","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpparsererror\/invalidcontentlength","title":"case invalidContentLength","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpparsererror\/invalideofstate","title":"case invalidEOFState","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpparsererror\/invalidfragment","title":"case invalidFragment","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpparsererror\/invalidheadertoken","title":"case invalidHeaderToken","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpparsererror\/invalidhost","title":"case invalidHost","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpparsererror\/invalidinternalstate","title":"case invalidInternalState","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpparsererror\/invalidmethod","title":"case invalidMethod","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpparsererror\/invalidpath","title":"case invalidPath","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpparsererror\/invalidport","title":"case invalidPort","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpparsererror\/invalidquerystring","title":"case invalidQueryString","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpparsererror\/invalidstatus","title":"case invalidStatus","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpparsererror\/invalidurl","title":"case invalidURL","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpparsererror\/invalidversion","title":"case invalidVersion","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpparsererror\/lfexpected","title":"case lfExpected","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpparsererror\/paused","title":"case paused","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpparsererror\/strictmodeassertion","title":"case strictModeAssertion","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpparsererror\/trailinggarbage","title":"case trailingGarbage","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpparsererror\/unexpectedcontentlength","title":"case unexpectedContentLength","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpparsererror\/unknown","title":"case unknown","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpparsererror\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/sotosignerv4\/httpparsererror\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpparsererror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sotosignerv4\/httpparsererror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpparsererror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/sotosignerv4\/httpparsererror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/sotosignerv4\/httpparsererror","title":"HTTPParserError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httppart\/body(_:)","title":"case body(BodyT)","type":"case"},{"path":"\/documentation\/sotosignerv4\/httppart\/end(_:)","title":"case end(HTTPHeaders?)","type":"case"},{"path":"\/documentation\/sotosignerv4\/httppart\/head(_:)","title":"case head(HeadT)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httppart\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sotosignerv4\/httppart\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/sotosignerv4\/httppart","title":"HTTPPart","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/accepted","title":"case accepted","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/alreadyreported","title":"case alreadyReported","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/badgateway","title":"case badGateway","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/badrequest","title":"case badRequest","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/conflict","title":"case conflict","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/continue","title":"case `continue`","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/created","title":"case created","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/custom(code:reasonphrase:)","title":"case custom(code: UInt, reasonPhrase: String)","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/expectationfailed","title":"case expectationFailed","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/faileddependency","title":"case failedDependency","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/forbidden","title":"case forbidden","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/found","title":"case found","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/gatewaytimeout","title":"case gatewayTimeout","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/gone","title":"case gone","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/httpversionnotsupported","title":"case httpVersionNotSupported","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/imateapot","title":"case imATeapot","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/imused","title":"case imUsed","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/insufficientstorage","title":"case insufficientStorage","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/internalservererror","title":"case internalServerError","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/lengthrequired","title":"case lengthRequired","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/locked","title":"case locked","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/loopdetected","title":"case loopDetected","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/methodnotallowed","title":"case methodNotAllowed","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/misdirectedrequest","title":"case misdirectedRequest","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/movedpermanently","title":"case movedPermanently","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/multistatus","title":"case multiStatus","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/multiplechoices","title":"case multipleChoices","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/networkauthenticationrequired","title":"case networkAuthenticationRequired","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/nocontent","title":"case noContent","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/nonauthoritativeinformation","title":"case nonAuthoritativeInformation","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/notacceptable","title":"case notAcceptable","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/notextended","title":"case notExtended","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/notfound","title":"case notFound","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/notimplemented","title":"case notImplemented","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/notmodified","title":"case notModified","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/ok","title":"case ok","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/partialcontent","title":"case partialContent","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/payloadtoolarge","title":"case payloadTooLarge","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/paymentrequired","title":"case paymentRequired","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/permanentredirect","title":"case permanentRedirect","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/preconditionfailed","title":"case preconditionFailed","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/preconditionrequired","title":"case preconditionRequired","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/processing","title":"case processing","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/proxyauthenticationrequired","title":"case proxyAuthenticationRequired","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/rangenotsatisfiable","title":"case rangeNotSatisfiable","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/requestheaderfieldstoolarge","title":"case requestHeaderFieldsTooLarge","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/requesttimeout","title":"case requestTimeout","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/resetcontent","title":"case resetContent","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/seeother","title":"case seeOther","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/serviceunavailable","title":"case serviceUnavailable","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/switchingprotocols","title":"case switchingProtocols","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/temporaryredirect","title":"case temporaryRedirect","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/toomanyrequests","title":"case tooManyRequests","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/unauthorized","title":"case unauthorized","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/unavailableforlegalreasons","title":"case unavailableForLegalReasons","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/unprocessableentity","title":"case unprocessableEntity","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/unsupportedmediatype","title":"case unsupportedMediaType","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/upgraderequired","title":"case upgradeRequired","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/uritoolong","title":"case uriTooLong","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/useproxy","title":"case useProxy","type":"case"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/variantalsonegotiates","title":"case variantAlsoNegotiates","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/init(statuscode:reasonphrase:)","title":"init(statusCode: Int, reasonPhrase: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/code","title":"var code: UInt","type":"property"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/mayhaveresponsebody","title":"var mayHaveResponseBody: Bool","type":"property"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/reasonphrase","title":"var reasonPhrase: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sotosignerv4\/httpresponsestatus\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/sotosignerv4\/httpresponsestatus","title":"HTTPResponseStatus","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpserverupgradeerrors\/invalidhttpordering","title":"case invalidHTTPOrdering","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpserverupgradeerrors\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sotosignerv4\/httpserverupgradeerrors\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpserverupgradeerrors\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/sotosignerv4\/httpserverupgradeerrors\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/sotosignerv4\/httpserverupgradeerrors","title":"HTTPServerUpgradeErrors","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/httpserverupgradeevents\/upgradecomplete(toprotocol:upgraderequest:)","title":"case upgradeComplete(toProtocol: String, upgradeRequest: HTTPRequestHead)","type":"case"}],"path":"\/documentation\/sotosignerv4\/httpserverupgradeevents","title":"HTTPServerUpgradeEvents","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/removeafterupgradestrategy\/dropbytes","title":"case dropBytes","type":"case"},{"path":"\/documentation\/sotosignerv4\/removeafterupgradestrategy\/fireerror","title":"case fireError","type":"case"},{"path":"\/documentation\/sotosignerv4\/removeafterupgradestrategy\/forwardbytes","title":"case forwardBytes","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sotosignerv4\/removeafterupgradestrategy\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sotosignerv4\/removeafterupgradestrategy\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/sotosignerv4\/removeafterupgradestrategy","title":"RemoveAfterUpgradeStrategy","type":"enum"}],"path":"\/documentation\/sotosignerv4","title":"SotoSignerV4","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}